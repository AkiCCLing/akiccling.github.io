{
    "version": "https://jsonfeed.org/version/1",
    "title": "Secret Garden • All posts by \"technology\" category",
    "description": "",
    "home_page_url": "https://clearacg.com",
    "items": [
        {
            "id": "https://clearacg.com/2023/11/16/Git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/",
            "url": "https://clearacg.com/2023/11/16/Git%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/",
            "title": "Git常用操作",
            "date_published": "2023-11-16T08:51:31.000Z",
            "content_html": "<h1 id=\"git常用操作\"><a class=\"markdownIt-Anchor\" href=\"#git常用操作\">#</a> Git 常用操作</h1>\n<p>内容及图片来自<a href=\"https://space.bilibili.com/102438649\"> GeekHour</a>，感谢原作者的内容制作。<br>\n<img src=\"https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/fffed6aee13fd71bdf6e72c450f96d69100cfce27f1ff6243cbd706c178ebc2b.webp\" alt=\"图 0\"></p>\n<h1 id=\"初始化设置\"><a class=\"markdownIt-Anchor\" href=\"#初始化设置\">#</a> 初始化设置</h1>\n<p>配置⽤户名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.name <span class=\"hljs-string\">&quot;Your Name&quot;</span><br></code></pre></td></tr></table></figure>\n<p>配置邮箱</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global user.email <span class=\"hljs-string\">&quot;mail@example.com&quot;</span><br></code></pre></td></tr></table></figure>\n<p>存储配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git config --global credential store<br></code></pre></td></tr></table></figure>\n<h1 id=\"创建仓库\"><a class=\"markdownIt-Anchor\" href=\"#创建仓库\">#</a> 创建仓库</h1>\n<p>创建⼀个新的本地仓库 (省略 project-name 则在当前⽬录创建)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git init &lt;project-name&gt;<br></code></pre></td></tr></table></figure>\n<p>克隆⼀个远程仓库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> &lt;url&gt;<br></code></pre></td></tr></table></figure>\n<h1 id=\"四个区域\"><a class=\"markdownIt-Anchor\" href=\"#四个区域\">#</a> 四个区域</h1>\n<p>⼯作区（Working Directory）就是你在电脑⾥能实际看到的⽬录。</p>\n<p>暂存区（Stage / Index）<br>\n暂存区也叫索引，⽤来临时存放未提交的内容􀀄 ⼀般在.git ⽬录下的 index 中。</p>\n<p>本地仓库（Repository）<br>\nGit 在本地的版本库，仓库信息存储在.git 这个隐藏⽬录中。</p>\n<p>远程仓库（Remote Repository）<br>\n托管在远程服务器上的仓库􀀂 常⽤的有 GitHub、GitLab、Gitee。</p>\n<h1 id=\"文件状态\"><a class=\"markdownIt-Anchor\" href=\"#文件状态\">#</a> 文件状态</h1>\n<p>已修改（Modified）<br>\n修改了但是没有保存到暂存区的⽂件。</p>\n<p>已暂存（Staged）<br>\n修改后已经保存到暂存区的⽂件。</p>\n<p>已提交（Committed）<br>\n把暂存区的⽂件提交到本地仓库后的状态。</p>\n<p>默认主分支<br>\n main/master</p>\n<p>默认远程仓库<br>\n Origin</p>\n<p>指向当前分支的指针<br>\n HEAD</p>\n<p>上一个版本<br>\n HEAD^</p>\n<p>上四个版本<br>\n HEAD~</p>\n",
            "tags": [
                "Technology"
            ]
        },
        {
            "id": "https://clearacg.com/2023/10/06/Minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E6%9C%8D%E6%95%99%E7%A8%8B/",
            "url": "https://clearacg.com/2023/10/06/Minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E6%9C%8D%E6%95%99%E7%A8%8B/",
            "title": "Minecraft服务器开服教程",
            "date_published": "2023-10-06T08:51:47.000Z",
            "content_html": "<h1 id=\"minecraft服务器开服教程\"><a class=\"markdownIt-Anchor\" href=\"#minecraft服务器开服教程\">#</a> Minecraft 服务器开服教程</h1>\n<blockquote>\n<p>在搭建服务器之前，需要准备：</p>\n<p>1、云服务器（CentOS 7.8 64bit，其它 Linux 发行版仅供参考）</p>\n<p>2、PuTTY（用于远程登录云服务器，下载官网：<a href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html%EF%BC%89\">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html）</a></p>\n<p>3、WinSCP（用于上传相关文件，下载官网：<a href=\"https://winscp.net/eng/download.php%EF%BC%89\">https://winscp.net/eng/download.php）</a></p>\n</blockquote>\n<h2 id=\"一-确定minecraft服务器版本以及java版本\"><a class=\"markdownIt-Anchor\" href=\"#一-确定minecraft服务器版本以及java版本\">#</a> 一、确定 Minecraft 服务器版本以及 Java 版本</h2>\n<blockquote>\n<p><a href=\"https://mcversions.net/\">https://mcversions.net/</a></p>\n</blockquote>\n<p>进入网站后，在最左侧的 Stable Releases 选择你要安装的版本号，若不确定请选择 Latest Release，点击版本号右侧的下载（Download），再点击 Download Server jar，即可下载 Minecraft 服务器文件</p>\n<p>1.17 版本及以后已经不再支持 Java 8（其实之前的版本已经在兼容高于 8 的 Java）。显然我们需要新版的 Java，我在开服时遇到了此问题，但查阅了许多开服教程都没有提及，都是写安装 Java 8，可能是因为教程相隔时间比较长了，未进行更新。</p>\n<blockquote>\n<p>…has been compiled by a more recent version of the Java Runtime (class file version 60.0), this version of the Java Runtime only recognizes class file versions up to 52.0</p>\n</blockquote>\n<p>若你使用 1.17 及以上版本的 Minecraft 并安装了 1.8.0 的 openjdk，则很有可能在进行下一步操作时会出现以上提示，请参考下面这篇文章卸载并重新安装 jdk</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/javabg/p/10332993.html\">https://www.cnblogs.com/javabg/p/10332993.html</a></p>\n</blockquote>\n<h2 id=\"二-开启服务器端口\"><a class=\"markdownIt-Anchor\" href=\"#二-开启服务器端口\">#</a> 二、开启服务器端口</h2>\n<blockquote>\n<p>由于每个人的云服务器商都不同，这里以腾讯云为例</p>\n</blockquote>\n<p>在腾讯云控制台实例的防火墙中添加规则：(端口号填 Minecraft 默认的 25565，后面可修改)</p>\n<p><img src=\"https://s2.loli.net/2023/10/07/NEjkeF1hWwaQpCX.png\" alt=\"图 1\"></p>\n<p>通过 PuTTY 连接主机，并输入以下指令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --zone=public --add-port=25565/tcp --permanent<br>firewall-cmd --zone=public --add-port=25565/udp --permanent<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure>\n<h2 id=\"三-上传服务器文件\"><a class=\"markdownIt-Anchor\" href=\"#三-上传服务器文件\">#</a> 三、上传服务器文件</h2>\n<p>打开 WinSCP，通过主机 IP 地址并输入用户名和口令进行连接，在右侧的文件目录中（如 /tmp/minecraft）将 server.jar 拖进去上传到服务器中（此时目录中只有 server.jar 这一个文件）</p>\n<p><img src=\"https://s2.loli.net/2023/10/07/abUJqxHiIh2u1Tf.png\" alt=\"图 2\"></p>\n<h2 id=\"四-安装-java\"><a class=\"markdownIt-Anchor\" href=\"#四-安装-java\">#</a> 四、安装 Java</h2>\n<p>1. 先升级 yum 库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum update<br></code></pre></td></tr></table></figure>\n<p>中间提示 [y/d/n] 请输入 y 并按下回车</p>\n<p>2. 列出 yum 库中的 Java</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum -y list java*<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://s2.loli.net/2023/10/07/vD8O4HaMQucxTp3.png\" alt=\"图 3\"></p>\n<p>3. 安装 Java</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum -y install java-latest-openjdk*<br></code></pre></td></tr></table></figure>\n<p>中间提示 [y/d/n] 请输入 y 并按下回车</p>\n<h2 id=\"五-安装-screen\"><a class=\"markdownIt-Anchor\" href=\"#五-安装-screen\">#</a> 五、安装 Screen</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">yum install screen<br></code></pre></td></tr></table></figure>\n<p>中间提示 [y/d/n] 请输入 y 并按下回车</p>\n<h2 id=\"六-创建-shell-脚本\"><a class=\"markdownIt-Anchor\" href=\"#六-创建-shell-脚本\">#</a> 六、创建 Shell 脚本</h2>\n<p>在桌面上新建一个文本文档，输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">java -Xmx1024M -jar server.jar <br></code></pre></td></tr></table></figure>\n<p>注释：其中 1024M 为程序运行时最大内存，可酌情调整</p>\n<p>点击左上角的 “文件（F）”，选择另存为，现将下方的保存类型选为所有文件，<a href=\"http://xn--start-dq1hz7bs5kvugd7wx2xt74ezp7a.sh\">再将文件名设置为 start.sh</a>，最后点击右下角的保存。</p>\n<p>将 start.sh 按照第三步的方法上传到和 server.jar 相同的目录中</p>\n<h2 id=\"七-启动服务器\"><a class=\"markdownIt-Anchor\" href=\"#七-启动服务器\">#</a> 七、启动服务器</h2>\n<p>在 PuTTY 中连接主机后输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">screen -S mc<br></code></pre></td></tr></table></figure>\n<p>即可创建一个名为 mc 的作业</p>\n<p>继续输入一下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd /tmp/minecraft<br>sh start.sh<br></code></pre></td></tr></table></figure>\n<p>经过一段时间等待，显示一下界面时就代表开服完毕了</p>\n<p><img src=\"https://s2.loli.net/2023/10/07/JF8enHv6qi1rW7B.png\" alt=\"图 4\"></p>\n<p>在 PuTTY 中按下 Ctrl+A+D 即可退出该 screen 作业，此时即可关闭 PuTTY</p>\n<p>那么下次如何进入该 screen 呢？在 PuTTY 连接后，输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">screen -ls<br></code></pre></td></tr></table></figure>\n<p>即可显示出当前的 screen 作业</p>\n<p><img src=\"https://s2.loli.net/2023/10/07/aI9GhMrnOfRQm7Z.png\" alt=\"图 5\"></p>\n<p>根据之前创建的 screen 名称，我们可以通过前面的数字进入该 screen</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">screen -r 27529<br></code></pre></td></tr></table></figure>\n<h2 id=\"八-补充说明\"><a class=\"markdownIt-Anchor\" href=\"#八-补充说明\">#</a> 八、补充说明</h2>\n<p>通过上述方法只是建立了一个简单的服务器，你还需要进行许多设置</p>\n<p>当你搭建好后，你会在 /tmp/minecraft 中看到 server.properties 文件</p>\n<blockquote>\n<p><a href=\"https://minecraft.fandom.com/zh/wiki/Server.properties\">https://minecraft.fandom.com/zh/wiki/Server.properties</a></p>\n</blockquote>\n<p>请参考以上链接进行对 server.properties 文件的设置</p>\n",
            "tags": []
        }
    ]
}