<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Unity 模拟面试题</title>
    <link href="/2024/03/09/forUnity/siminterview/"/>
    <url>/2024/03/09/forUnity/siminterview/</url>
    
    <content type="html"><![CDATA[<h1 id="C"><a href="#C" class="headerlink" title="C#"></a>C#</h1><ol><li><p>装箱和拆箱是什么？</p></li><li><p>值和引用类型在变量赋值时的区别是什么？</p></li><li><p>委托和事件在使用上的区别是什么？</p></li><li><p>有两个接口 IA 和 IB，他们中有一个同名方法 Test() 一个类同时继承这两个接口，应该如何处理他们的同名方法？</p></li><li><p>请说明 C#中的 List 是如何扩容的</p></li><li><p>请说说你认为 C#中 &#x3D;&#x3D; 和 Equals 的区别是什么？</p></li><li><p>浅拷贝和深拷贝的区别？可以举例说明</p></li><li><p>下面两种获 10000 个数的方式，哪种效率更高？为什么?<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/202403091404471.webp?imageSlim"></p></li><li><p>请说出下方代码中</p><pre><code class="hljs">1.A处和B处谁先打印？2.A、B出打印的i值分别是多少？</code></pre><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/202403091351186.webp?imageSlim"></p></li><li><p>请问 A、B 两处 i 的值为多少？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/202403091406847.webp?imageSlim"><br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/202403091405976.webp?imageSlim"></p></li><li><p>泛型的约束有哪几种？</p></li><li><p>什么是闭包？可以举例说明</p></li><li><p>内存泄漏指什么？常见的内存泄漏有哪些？</p></li><li><p>序列化是什么？常见的序列化方式有哪些？什么时候我们会用到序列化？</p></li><li><p>请问 A、B、C 三处打印结果分别为多少？为什么？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/122433197650192447.png?imageSlim"></p></li><li><p>请说明字符串中<br>string str &#x3D; null<br>string str &#x3D; “”<br>string str &#x3D; string.Empty<br>三者的区别</p></li><li><p>C#重载运算符，重载 &#x3D;&#x3D; 和 !&#x3D; 以及<br>万物之父 Object 基类中的虚方法 virtual bool Equals(Object obj)<br>对于我们的意义是什么？</p></li><li><p>在开发时，对 string 和 StringBuilder 我们应该如何选择</p></li><li><p>请简要说明.Net 跨语言原理</p></li><li><p>请简要说明.Net 跨平台原理</p></li><li><p>以下代码，谁的效率更高？为什么？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/152739b4e7bd643055.png?imageSlim"></p></li><li><p>数组和链表的区别是什么？</p></li><li><p>C# 中的 Action 和 Func 是什么？ Unity 中的 UnityAction 是什么？ 他们有什么区别？</p></li><li><p>请问最终的打印结果是什么？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/15285680a043305127.png?imageSlim"><br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/152856836e20264473.png?imageSlim"><br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/152856865229028454.png?imageSlim"></p></li><li><p>网络游戏开发中，网络传输数据的基本流程是什么？</p></li><li><p>C#中如何让自定义容器类能够使用 for 循环遍历？（通过 类对象[索引] 的形式遍历）</p></li><li><p>C#中如何让自定义容器类能够使用 foreach 循环遍历？</p></li><li><p>C#中接口的作用是什么？说说你的理解</p></li><li><p>Unity 引擎中哪些功能使用了 C#的反射功能？至少说出一点</p></li><li><p>请问这三行代码，运行后，在堆上会分配几个“房间”<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1509437a9a41943997.png?imageSlim"></p></li><li><p>C#中如何让一个类不能再被其他类所继承？</p></li><li><p>C#中使用泛型的好处是什么？</p></li><li><p>C#中元组对于我们的作用是什么？</p></li><li><p>请说明 Thread、ThreadPool、Task 分别是什么？并简单说明彼此的区别</p></li><li><p>请简述 GC（垃圾回收）产生的原因，并至少说出避免 GC 发生的三种方式？</p></li><li><p>如果我们想为 Unity 中的 Transform 类添加一个自定义的方法，应该如何处理？</p></li><li><p>请说出 using 关键字的两个作用</p></li><li><p>C#中 Dictionary 不支持相同键存储<br>如果想要一个键对应多个值如何处理？</p></li><li><p>请问下面代码的最终打印结果是什么？为什么？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1005266e9fd6307619.png?imageSlim"></p></li><li><p>上题中的代码，如果我们希望打印出 0~9，应该如何修改代码？</p></li><li><p>内存中，堆和栈的区别是什么？</p></li><li><p>TCP 协议和 UDP 协议的区别</p></li><li><p>TCP 协议的可靠性是如何达到的？</p></li><li><p>内存抖动指什么？如何避免内存抖动</p></li><li><p>buff 系统中，如何用一个 byte，记录多种 buff 状态标识</p></li><li><p>文件中保存了文本信息，但是打开后却是乱码，一般是什么原因造成的？</p></li><li><p>C#中 new 关键字的作用（至少说出 3 种）</p></li><li><p>同步方法和异步方法的区别是什么？<br>异步编程是什么意思？<br>对于我们来说，什么时候需要使用异步编程？（至少说出 3 种）</p></li><li><p>回调函数指什么？一般在什么时候使用？（至少说出 3 种使用场景）</p></li><li><p>如何用一个 int 变量，记录 32 种状态？（注意：状态可以并存）</p></li><li><p>List 是链表还是数组</p></li><li><p>上一题追问：<br>当 list 满了的时候，我再加入一个元素它的效率会比较低啊，它内部大概是一个什么样的执行过程呢？</p></li><li><p>csharp 里面有一个常用的接口叫做 IDispose，它的作用是？</p></li><li><p>上一题追问：<br>csharp 有垃圾回收机制，把一个对象设置为空的时候，系统会帮我们回收，它和接口 IDispose 有什么关系吗？为什么会存在两个做析构事情的东西呢？</p></li><li><p>Unity 中的生命周期函数，为什么设计为反射调用，而不是通过继承重写生命周期函数的形式去实现呢？（非字节题目，同学疑问，至少答出一种原因）</p></li><li><p>C#中哪些变量类型是值类型（至少说出 13 种），哪些是引用该类型（至少说出 5 种）</p></li><li><p>1.在自定义类中声明的成员变量，类型为 int，该 int 变量存储在栈上还是堆上？ 2.在自定义结构体中声明的成员变量，类型为 string，该 string 变量存储在栈上还是堆上？</p></li><li><p>C#中在什么情况下会选择使用接口，什么情况下会选择使用抽象类？</p></li><li><p>C#中什么是托管内存和非托管内存？</p></li><li><p>请问什么是线程安全？如何在 C#中实现线程安全操作？</p></li><li><p>C#中属性(Property)和字段(Field)的区别是什么？</p></li><li><p>请解释一下 C#中的异步编程模型（Async&#x2F;Await），它是用来做什么的？</p></li><li><p>请问七大排序算法一般指哪七种排序算法？<br>你一般常用的排序算法是哪种？请简单描述它的排序原理</p></li><li><p>请简单描述斐波那契数列的基本规则是什么</p></li><li><p>请简单描述 A 星寻路算法的基本原理</p></li><li><p>抽象类中的虚函数和抽象函数，是否必须在子类中重写？</p></li><li><p>当我们使用里式替换原则，用父类容器装载子类对象时<br>我们通过该父类容器调用其中的一个虚函数，执行的逻辑是父类中的还是子类中的逻辑呢？</p></li><li><p>我们在游戏开发时，想要获取系统时间，应该如何获取？</p></li><li><p>C#使用 var 声明临时变量相比用指定变量类型声明临时变量，在最终执行时是否会增加性能消耗？</p></li><li><p>int a &#x3D; 10;<br>int b &#x3D; a;<br>b &#x3D; 20;<br>我们知道，上述代码 b 改为 20 后，a 还是 10。（值类型的特点）<br>我们是否可以简单修改以上代码，让 b 变成 20 后，a 跟着一起变。<br>请说出修改方案</p></li><li><p>我们可以使用 C#中的迭代器来做什么？至少说出两点</p></li><li><p>面向对象的七大原则分别是什么？并选择其中一个原则说明它的意思</p></li><li><p>为什么单例模式在游戏开发中很常用？至少说出 3 个优点</p></li><li><p>工厂模式在游戏开发中一般用来做什么？</p></li><li><p>观察者设计模式在游戏开发中有什么作用？</p></li><li><p>递归函数是什么？请用一句话总结</p></li><li><p>在编写递归函数时，最需要关注的两点是什么？请说出你自己的理解</p></li><li><p>C#中如何在函数中返回多个返回值？（至少说出 3 种方法）</p></li><li><p>二分查找(折半查找)的原理是什么？</p></li><li><p>在游戏开发中，我们可以利用数据结构中的树参与哪些功能的制作？（至少说出 3 点）</p></li><li><p>父类中定义了一个静态成员属性，有两个子类都继承该父类，请问打印结果是什么？为什么<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/10232915192c466909.png?imageSlim"></p></li><li><p>泛型父类中定义了一个静态成员属性，有两个子类都继承该泛型父类，请问打印结果是什么？为什么<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/102357d97254939674.png?imageSlim"></p></li><li><p>使用 C#制作游戏存档功能，请问有几种做法？（至少说出三种）</p></li><li><p>C#中是否可以通过反射获取到类内部的私有成员？</p></li><li><p>在制作游戏存档功能时<br>C#中反射主要可以发挥出哪些作用（至少说出三点）</p></li><li><p>float f &#x3D; 10.4;<br>int i &#x3D; f &#x2F; 2;<br>Console.WriteLine(i);</p><p>请问上面这段代码的打印结果是多少？</p></li><li><p>在 C#当中，我们想要用一个字典容器存储场景中的所有敌对对象<br>比如 怪物、Boss、可被攻击的场景物件等等<br>应该如何存储</p></li><li><p>在 C#中，给你一个数字，表示有 n 秒<br>请问如何在不改变这个数字的前提下<br>将它转换成格式为 <strong>小时</strong>分__秒</p></li><li><p>请问执行以上代码后，List 中还存在哪些内容？<img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1837299d071d164453.png?imageSlim"></p></li><li><p>假设游戏中有一个怪物管理器管理所有怪物，那么在开发时，为了避免内存泄漏，我们需要注意什么？</p></li><li><p>C#类中的函数是否占用内存空间？</p></li><li><p>C#中的函数是何时被加载到内存中的呢？</p></li><li><p>C#函数中一般会声明一些临时变量，当函数被加载内存中后</p><p>所占的内存空间是否包含函数中的这些临时变量？</p></li><li><p>C#中委托的本质是什么？<br>它是如何存储函数的？</p></li><li><p>C#中事件的本质是什么？</p></li><li><p>为什么要为缓存池中的单个池子设置对象上限？</p></li><li><p>任务系统中，某任务是要采集某一种植物 n 株后才能完成。<br>说一说制作思路</p></li><li><p>有两个泛型类，他们是父子关系<br>public Father&lt;Father<int>&gt; Test()<br>{<br>return new Son&lt;Son<int>&gt;();<br>}<br>这个写法是否正确？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/135550688865275729.png?imageSlim"></p></li><li><p>数据结构中的树，一般会在游戏开发中用来处理什么？至少说出 3 点</p></li><li><p>游戏开发中逻辑与表现如何分离？非 UI 系统</p></li><li><p>C#中在字符串前面加一个@符号或者$符号有什么作用</p></li><li><p>C#中提供了序列化和反序列化 2 进制数据的公共类 BinaryFormatter<br>为什么我们一般还要自己去实现序列化和反序列化 2 进制数据的方法？</p></li><li><p>异或加密的原理是什么？请简要说明</p></li><li><p>这个函数是判断一个整数是不是 2 的 n 次方。请问 if 语句中应该如何书写<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1933211cc3bd822714.png?imageSlim"></p></li><li><p>有 1000 瓶水其中一瓶是有毒的，喝下后 24 小时后才死，现在用小白鼠来测试哪一瓶有毒。最少需要用多 少只小白鼠才能测出哪一瓶是有毒的水（需要在 24 小时后出结果，不能用几天时间来测试）</p></li><li><p>int[,] strArray &#x3D; new int[3, 4]这个语句创建了多少个 int 对象？<br>string[,] strArray &#x3D; new string[3, 4]这个语句创建了多少个 string 对象？</p></li><li><p>为什么我们要尽量避免装箱拆箱？避免装箱拆箱的方案有哪些？</p></li><li><p>为什么说闭包可能会带来内存泄漏？</p></li><li><p>单机游戏中，我们如何避免玩家利用修改器修改客户端数据？（至少说出 2 点方案）</p></li><li><p>网络游戏中，我们如何避免外挂的产生？（至少说出 2 点方案）</p></li><li><p>value1 和 value2 谁先初始化</p></li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Main1</span><br>&#123;<br>     <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> value1;<br><br>     <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">Main1</span>()</span><br>     &#123;<br>          value1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">object</span>();<br>     &#125;<br><br>     <span class="hljs-keyword">static</span> <span class="hljs-built_in">object</span> value2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">object</span>();<br>&#125;<br></code></pre></td></tr></table></figure><ol start="112"><li><p>C#中数值在调用 ToString()方法时，若传入字符串参数，有哪些格式转换规则？（至少说出 3 点）</p></li><li><p>C#中 ulong 类型可以表示最大的整数为多少？<br>   C#中的 BigInteger 类对于我们来说有什么意义？</p></li><li><p>C#中如何把 int 数组转换为 string 数组？（请至少说出 2 种方式）</p></li><li><p>为什么我们使用单例模式更多，而几乎不使用静态类？</p></li><li><p>C#中常用的命名规范有哪些？（至少说出 3 种）</p></li><li><p>C#编程中常见的内存管理问题有哪些？</p></li><li><p>在 Unity 中使用 C#的 foreach 是否会带来额外内存和性能开销？</p></li><li><p>在游戏开发中的日志系统一般会配合 C#中的什么一起使用？用于记录报错信息</p></li><li><p>对于一个 ARPG 游戏来说，如何设计技能配置表，请简要描述<br>（比如：大概需要配置几张表，分别配置什么信息）</p></li></ol><h1 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h1><ol><li><p>Unity 中点乘和叉乘对于我们来说的作用是什么？</p></li><li><p>Unity 中多线程执行下面哪些代码会报错？</p><p>A. Application.persistentDataPath</p><p>B. File.Exists(“文件名”)</p><p>C. transform.Translate</p><p>D. Object.Destroy(对象)</p></li><li><p>Application.streamingAssetsPath 和 Application.persistentDataPath</p><p>两个路径有何区别？对于我们的意义是什么？</p></li><li><p>请简述 Unity 中协程的原理</p></li><li><p>Unity 底层如何处理 C#代码？</p></li><li><p>Unity 中当一个细小高速物体撞击另一个较大物体时，会出现什么情况？如何避免？</p></li><li><p>请简述一下 Prefab（预制体）的本质是什么？</p></li><li><p>Unity 是否支持写成多线程程序？如果支持的话需要注意什么？</p></li><li><p>请简述一下对象池，在游戏开发中我们什么时候会用到它？</p></li><li><p>什么是 DrawCall？DrawCall 为什么会影响游戏运行效率？如何减少 DrawCall？</p></li><li><p>transform.forward 和 Vector3.forword 的区别</p></li><li><p>Unity 中如何解决过多创建和删除对象带来的卡顿问题？</p></li><li><p>游戏中的成就系统，我们一般会使用设计模式中的哪种模式来制作？为什么？</p></li><li><p>请简述热更新的流程</p></li><li><p>我们应该如何优化 UI（基于 UGUI）</p></li><li><p>Unity 中的 Destroy 和 DestroyImmediate 的区别是什么？</p></li><li><p>请问最终打印的 s 的结果为？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/110519f514df265137.png?imageSlim"></p></li><li><p>第一次执行 GameObject.Instantiate 时可能出现明显的卡顿<br>如何解决该问题？</p></li><li><p>Lua 如何实现面向对象的三大特性？</p></li><li><p>Unity 使用 IL2CPP 打包时，我们应该注意什么？如何避免（可以举例说明）</p></li><li><p>两个四元数相乘有什么作用？<br>四元数乘以向量有什么作用？</p></li><li><p>图中的小球是否被渲染了？是否会产生 DrawCall？<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/15300089f9be758726.png?imageSlim"></p></li><li><p>在没有使用遮挡剔除的情况下，图中 A 和 B 都是默认标准材质<br>图中的小球最终是否会被渲染，是否会产生 DrawCall<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1530422643b5219941.png?imageSlim"></p></li><li><p>如果不考虑 IOS 平台，只在 Windows 和 Android 平台上发布游戏，如何在不使用第三方热更新方案的前提下实现热更新功能</p></li><li><p>Unity 中如何调试排查 Android 上运行的项目问题</p></li><li><p>Unity 中 Awake 和 Start 两个生命周期函数，分别在什么时候被调用？</p></li><li><p>Unity 场景上有多个对象，都分别挂载了 n 个脚本。<br>我们如何控制不同脚本间生命周期函数 Awake 的执行先后顺序？</p></li><li><p>想要在 Unity 中使用指针我们需要进行哪些操作？</p></li><li><p>Unity 中的协同程序中 yield return 不同的内容，代表的含义不同<br>请说明下面这些 yield return 的含义<br>1.yield return 数字;<br>2.yield return null;<br>3.yield return new WaitForSeconds(数字);<br>4.yield return new WaitForFixedUpdate();<br>5.yield return new WaitForEndOfFrame();<br>6.yield break;</p></li><li><p>使用 Unity 协同程序进行异步加载时，底层是否会使用多线程？</p></li><li><p>Unity 中动态加载资源的方式有哪些？</p></li><li><p>Unity 中的光照贴图的作用是什么？</p></li><li><p>Unity 场景中有两个点连成了一条线，想要旋转这条线，应该怎么做？</p></li><li><p>LOD（多细节层次）和 MipMap（纹理图）的作用是什么？</p></li><li><p>游戏开发中，客户端和服务端交互数据，程序中常用方式是什么？</p></li><li><p>Unity 中如何将本地坐标转为世界坐标？</p></li><li><p>Unity 中如何计算出两个向量之间的夹角，请说出两种方式</p></li><li><p>请写出 UGUI 中两种处理异形按钮的具体方法</p></li><li><p>请说出 Unity 中如何进行数据持久化，至少说出 5 种方式</p></li><li><p>在 Unity 中如何控制渲染优先级？（谁先渲染谁后渲染，分情况回答）</p></li><li><p>Unity 中判断两个 2D 矩形是否相交，有几种方式？（请至少说出两种方式）</p></li><li><p>Unity 中想要制作角色的连招功能，在制作状态机时我们一般如何处理？</p></li><li><p>Unity 中如果想要在动作的某一时刻进行伤害检测，我们应该怎么做？（请说出两种做法）</p></li><li><p>Unity 中想要制作自动寻路逻辑，我们应该怎么做？（请至少说出两种做法）</p></li><li><p>游戏编辑器（比如 角色编辑器、关卡编辑器、地图编辑器等工具）的本质是什么？</p></li><li><p>Unity 中使用的是左手还是右手坐标系？我们需要注意什么？</p></li><li><p>Unity 中鼠标、键盘、触屏、手柄等输入事件会在 Update 之前、还是之后、还是同时执行？</p></li><li><p>Unity 中场景中一个处于激活状态的物体(场景上只有这一个物体)，不能被摄像机渲染出来，可能有几种情况？（至少说出 3 种可能的情况）</p></li><li><p>Unity 制作物理游戏相关功能时，我们采用哪种方式处理位移？为什么？</p></li><li><p>Unity 热更新解决方案中，Lua 和 ILRuntime 方案的本质是什么？</p></li><li><p>请解释 Unity 中的 Prefab 是什么，以及它在游戏开发中的作用是什么？</p></li><li><p>在 Unity 中，什么是 Shader？它有什么作用，以及如何编写一个基本的 Shader？</p></li><li><p>在 Unity 中，什么是常见的性能优化技巧？请举例说明。</p></li><li><p>在 Unity 中，什么是协程（Coroutine）？它有什么作用，以及如何使用它？</p></li><li><p>解释一下 Unity 中的渲染管线（Rendering Pipeline）是什么，如何使用它，并举例说明它在游戏开发中的应用场景。</p></li><li><p>CPU 和 GPU 他们分别是什么？<br>他们主要完成什么工作</p></li><li><p>渲染管线中的几何阶段是由 CPU 主导还是 GPU 主导？该阶段主要是在做什么？</p></li><li><p>是不是所有矩阵都有逆矩阵？<br>如何计算一个矩阵的逆矩阵？</p></li><li><p>齐次坐标是什么?<br>对于我们有什么作用？</p></li><li><p>Shader 开发中的坐标空间变换，主要是在哪几个空间中进行变换？变换顺序是什么？</p></li><li><p>Unity 中的 Lerp 和 Slerp 分别是什么？</p></li><li><p>Unity 底层是单线程还是多线程</p></li><li><p>如何在 Unity 中实现多语言支持？<br>（不同国家的人，看到的游戏内的语言是不一样的）</p></li><li><p>Shader 当中的顶点和片元着色器有什么作用？</p></li><li><p>Unity 目前版本中创建的普通项目、URP 项目、HDRP 项目的区别是什么？</p></li><li><p>在 Unity 中，有时在第一次执行 GameObject.Instantiate 的时候有明显卡顿，该怎么解决？</p></li><li><p>在 Unity 中 AssetBundle 的压缩方式有不压缩、LZMA、LZ4 三种，请问 LZMA 和 LZ4 有什么区别？</p></li><li><p>Unity 中 DrawCall、Batches、SetPass Calls 的意思是什么<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/13414378ff63815403.png?imageSlim"></p></li><li><p>Unity Shader 中，深度测试是在做什么？</p></li><li><p>Unity Shader 中<br>某片元通过了深度测试，但是没有开启深度写入，该片元的颜色信息是否写入到颜色缓冲区？</p></li><li><p>Unity 中摄像机组件中的投影(Projection)参数<br>其中的两个选项<br>透视投影（Perspective）和 正交投影（Orthographic）<br>有什么区别？</p></li><li><p>FSM 和 BT 指什么？<br>他们是用来处理什么的？</p></li><li><p>10000 个 monobehavior，每个各自执行 update，和放到一个 update 里执行，哪个效率更高？<br>为什么？</p></li><li><p>我们在编写代码时，有什么常用的优化代码性能的手段？至少说出 3 点</p></li><li><p>OpenGL 和 DX 的最大区别是什么？</p></li><li><p>Unity 工程文件中，meta 后缀的文件中主要存了什么信息？（最少说出 2 点）</p></li><li><p>不同后缀的各种文件的本质是什么？</p></li><li><p>UnityWebRequest 可以用来做什么？</p></li><li><p>如何在 Unity 中进行多线程编程以提高性能？（至少说出 3 点可以使用多线程提高性能的内容）</p></li><li><p>游戏开发完成后 1.游戏运行卡顿、设备发热一般往哪个大方向进行排查？ 2.游戏运行一段时间后闪退，一般往哪个大方向进行排查？</p></li><li><p>你之前做过一些项目<br>那么一般美术同学提供给我们的美术资源，一般分为哪几类？</p></li><li><p>美术同学提供给我们的模型数据中，包含哪些关键数据？（至少说出 3 点）</p></li><li><p>游戏项目中，运行时主要占内存的内容有哪些？（至少说出 5 点）</p></li><li><p>游戏项目中，主要消耗性能的内容有哪些？（至少说出 3 点）</p></li><li><p>网络游戏中，有一个数据统计界面，这些数据是由最近 1000 场战斗计算出来的平均数据</p><p>你认为以下处理方式合理吗？如果不合理，应该如何改进？<br>我们通过向后端请求这 1000 场战斗的数据，然后在客户端计算相关平均数据，更新显示到统计界面上</p></li><li><p>如果在 Unity 当中制作 FPS 游戏，如何模拟枪械开枪时的后坐力</p></li><li><p>Unity 当中存在多线程时，继承 MonoBehaviour 的脚本是否有必要对其中内容加锁？为什么？</p></li><li><p>我们在 Unity 中进行一些复杂逻辑处理时，比如网路通讯、寻路算法<br>往往会开启多线程进行处理。<br>我们如何保证数据能够和 Unity 主线程进行正常交互？（请至少说出 1 种方式）</p></li><li><p>Shader 当中的 Blend 渲染命令主要用来干什么？</p></li><li><p>Shader 当中的 Blend 渲染命令后面跟的参数是用来干嘛的？<br>比如：<br>Blend SrcAlpha OneMinusSrcAlpha</p></li><li><p>Unity 生命周期函数中的 OnEnable 和 Start，我们在使用时应该如何选择？<br>可以举例说明</p></li><li><p>如果你要开发一个项目<br>Assetbundle 和 Addressables 你会如何选择？</p></li><li><p>网络通讯中分包黏包指的是什么？<br>我们应该如何解决这些问题？</p></li><li><p>TCP 和 UDP 通讯最大的区别是什么？</p></li><li><p>如果想要让 UDP 通讯具备 TCP 的优点，应该如何处理？</p></li><li><p>Unity 在发布 Android 平台项目时，</p><p>在加载 Application.streamingAssetsPath 中文件时我们应该注意什么？</p></li><li><p>Unity 中安卓主流的纹理压缩格式 ETC 和 ETC2 的主要区别是什么？</p></li><li><p>Android 平台常用压缩格式 ETC 不支持透明通道，那我们的半透明纹理应该如何处理？</p></li><li><p>Unity 中针对 IOS 平台我们使用的主流纹理压缩格式是什么？</p></li><li><p>请问为什么延迟渲染路径能够优化有大量光源的场景渲染</p></li><li><p>什么是纹理映射？</p></li><li><p>IK（逆运动学）可以帮助我们完成什么功能？</p></li><li><p>Unity 中为 Sprite 前后关系排序的常用方式有哪些？（至少说出 3 种）</p></li><li><p>请介绍一些在 Unity 中减少内存的方法。（至少说出 3 种方法）</p></li><li><p>请介绍一些在 Unity 中提升性能的方法（至少说出 5 种方法）</p></li><li><p>有 1000 瓶水其中一瓶是有毒的，喝了马上死，现在用小白鼠来测试哪一瓶有毒。最少需要用多少只小白鼠才能测出哪一瓶是有毒的水</p></li><li><p>如何为 UGUI 中的某一个控件添加自定义事件监听（比如为一个 Image 添加点击事件）</p></li><li><p>我们在进行 UI 开发时，每个面板都会有很多控件（Button、Toggle、Slider 等等）<br>每新写一个面板逻辑，都会为这些控件做一些相同的事情，比如：<br>声明控件、查找控件、监听控件等等<br>请问：我们应该如何提升我们的开发效率，让这些事情不用每次都去做？<br>（至少说出两种方案）</p></li><li><p>正交矩阵的基本概念是什么？<br>它对我们来说有什么意义？</p></li><li><p>Shader 和材质球的关系是什么？</p></li><li><p>Transform 中的本地坐标系的方向 转换 为相对世界坐标系的方向 的两个 API<br>TransformVector() 和 TransformDirection()<br>有什么区别？</p></li><li><p>lua 语言中的 upvalue 是什么？</p></li><li><p>该 Unity 中的报错是什么意思？如何定位该问题？我们一般如何排查解决该问题？（至少说出 2 种方案）<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/210415f4a249896758.png?imageSlim"></p></li><li><p>在 Android 平台上运行的项目出现问题，我们有几种调试的方式？<br>（至少说出 3 种方案，不使用第三方插件）</p></li><li><p>使用 UnityWebRequest 加载音效文件，应该使用什么 API？</p></li><li><p>Untiy 中的 PlayerPrefs 支持存储什么类型的数据？<br>为什么我们一般不会使用它来制作角色数据存档功能？</p></li><li><p>在进行数据持久化时（存档、数据存储等功能时）<br>如果使用<br>Unity 中的 JsonUtility（Json）<br>C#中的 BinaryFormatter（2 进制）和 XmlSerializer （xml）<br>这些公共类进行序列化和反序列化时<br>如果在反序列化时，对应的数据结构类发生变化了，是否影响数据的读取？</p></li><li><p>游戏在设备上运行时，出现崩溃闪退现象，排查方向有哪些？（至少说出 2 点）</p></li><li><p>游戏在设备上运行时，出现卡顿掉帧现象，排查方向有哪些？（至少说出 2 点）</p></li><li><p>在进行游戏开发时，我们一般如何测试项目在目标设备的最大内存上限和性能上限？</p></li><li><p>Unity 中如果想要改变物理系统中默认重力的方向或大小，应该在哪里修改？</p></li><li><p>Unity 中动态批处理和静态批处理的区别？</p></li><li><p>Unity 发布后的应用程序的美术表现效果比在编辑器中看起来差，可能原因有哪些？</p></li><li><p>Unity 中线性颜色空间和伽马颜色空间的主要区别是什么？</p></li><li><p>为什么线性的表现效果更好，Unity 默认还是使用的伽马呢？</p></li></ol><h1 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h1><ol><li><p>请说出 Lua 中常用的数据类型（至少说出 6 种）</p></li><li><p>Lua 中 pairs 和 ipairs 的区别</p></li><li><p>Lua 中常用的元方法有哪些？至少说出 3 个原方法</p></li><li><p>Lua 中元表的作用</p></li><li><p>Lua 中 __index 和 __newindex 有什么作用</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSharp 进阶</title>
    <link href="/2024/02/25/forUnity/CSharpAdv/"/>
    <url>/2024/02/25/forUnity/CSharpAdv/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSharp 核心</title>
    <link href="/2024/02/22/forUnity/CSharpCore/"/>
    <url>/2024/02/22/forUnity/CSharpCore/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity 入门</title>
    <link href="/2024/02/21/forUnity/UnityBeginner/"/>
    <url>/2024/02/21/forUnity/UnityBeginner/</url>
    
    <content type="html"><![CDATA[<ul><li><p>Unity 入门</p></li><li><ul><li><ul><li>MonoBehavior 基类</li><li>生命周期函数</li><li>获取脚本</li><li>GameObject</li><li><ul><li>一些属性</li><li>静态方法</li><li>成员方法</li></ul></li><li>时间相关 API</li><li><ul><li>时间缩放</li></ul></li><li>Vector3</li><li>Position</li><li>位移</li><li>EulerAngles</li><li>缩放</li><li><ul><li>看向</li></ul></li><li>父子关系</li><li>坐标转换</li><li><ul><li>世界坐标系 转 本地坐标系</li><li>本地坐标系 转 世界坐标系</li></ul></li><li>Input</li><li><ul><li>鼠标相关</li><li>键盘相关</li><li>默认轴输入</li><li>其他</li></ul></li><li>Camera</li><li><ul><li>参数</li><li>成员</li></ul></li><li>碰撞检测</li><li><ul><li>Rigidbody 刚体</li><li>Collider</li><li>物理材质</li><li>常用函数</li><li><ul><li>物理碰撞检测</li><li>触发器检测</li><li>其他注意</li></ul></li></ul></li><li>刚体加力</li><li><ul><li>方法</li><li><ul><li>添加水平力</li><li>添加扭矩力</li><li>改变速度</li><li>给世界坐标系的点加力</li></ul></li><li>力的模式</li><li>自带的力相关脚本</li><li>刚体休眠</li></ul></li></ul></li></ul></li></ul><h4 id="MonoBehavior-基类"><a href="#MonoBehavior-基类" class="headerlink" title="MonoBehavior 基类"></a>MonoBehavior 基类</h4><p><img src="https://img-blog.csdnimg.cn/direct/483acb4c55954275bee87612eb32bc48.png" alt="在这里插入图片描述"></p><h4 id="生命周期函数"><a href="#生命周期函数" class="headerlink" title="生命周期函数"></a>生命周期函数</h4><p><img src="https://img-blog.csdnimg.cn/direct/fa4b175e8c404c0cac1395aa8ade7060.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">test</span> : <span class="hljs-title">MonoBehaviour</span><br>&#123;<br>    <span class="hljs-comment">// 创建时调用,即脚本被挂载上对象时调用,当挂载上后只调用一次与激活失活无关</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Awake</span>()</span> &#123;<br>        print(<span class="hljs-string">&quot;Awake!!&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 激活时调用，脚本文件被激活时调用，脚本文件激活需要对象和脚本都激活</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnEnable</span>()</span> &#123;<br>        print(<span class="hljs-string">&quot;OnEnable!!&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 第一次帧更新之前调用，一个函数只调用一次</span><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>    &#123;<br>        print(<span class="hljs-string">&quot;Start!!&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 物理帧更新调用，可以修改物理帧间隔时间</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">FixedUpdate</span>()</span> &#123;<br>        print(<span class="hljs-string">&quot;FixedUpdate&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 逻辑帧更新</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Update</span>()</span><br>    &#123;<br>        print(<span class="hljs-string">&quot;Update&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 一般用来处理摄像机更新的内容</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">LateUpdate</span>()</span> &#123;<br>        print(<span class="hljs-string">&quot;LateUpdate&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 失活时调用</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnDisable</span>()</span> &#123;<br>        print(<span class="hljs-string">&quot;OnDisable&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 销毁时调用</span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnDestroy</span>()</span> &#123;<br>        print(<span class="hljs-string">&quot;OnDestroy！！&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="获取脚本"><a href="#获取脚本" class="headerlink" title="获取脚本"></a>获取脚本</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 得到挂载对象的其他脚本</span><br>otherTest myot = <span class="hljs-keyword">this</span>.GetComponent&lt;otherTest&gt;();<br>print(<span class="hljs-string">&quot;my Component :&quot;</span> + myot);<br><br>otherTest ot = obj.GetComponent&lt;otherTest&gt;();<br>print(<span class="hljs-string">&quot;other Component :&quot;</span> + ot);<br><br><span class="hljs-comment">// 子对象挂载的脚本（自身的挂载也会去查找）</span><br><span class="hljs-comment">// GetComponentInChildren&lt;otherTest&gt;(false)，参数默认是false（失活不查找），填写true(失活也查找)</span><br>otherTest childrenOT = <span class="hljs-keyword">this</span>.GetComponentInChildren&lt;otherTest&gt;();<br>print(<span class="hljs-string">&quot;children Component :&quot;</span> + childrenOT);<br><br><span class="hljs-comment">// 父对象挂载的脚本（自身的挂载也会去查找）</span><br>otherTest ParentOT = <span class="hljs-keyword">this</span>.GetComponentInParent&lt;otherTest&gt;();<br>print(<span class="hljs-string">&quot;parent Component :&quot;</span> + ParentOT);<br><br><span class="hljs-comment">// 尝试获取，成功返回true，失败返回false</span><br>otherTest tryOT;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.TryGetComponent&lt;otherTest&gt;(<span class="hljs-keyword">out</span> tryOT))<br>    &#123;<br>        print(<span class="hljs-string">&quot;获取成功&quot;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="GameObject"><a href="#GameObject" class="headerlink" title="GameObject"></a>GameObject</h4><h5 id="一些属性"><a href="#一些属性" class="headerlink" title="一些属性"></a>一些属性</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 一些属性:</span><br>     <span class="hljs-comment">// 脚本的激活</span><br>     <span class="hljs-keyword">this</span>.enabled = <span class="hljs-literal">true</span>;<br><br>     <span class="hljs-comment">// gameobj对象的激活</span><br>     <span class="hljs-built_in">bool</span> isActive = <span class="hljs-keyword">this</span>.gameObject.activeSelf;<br><br>     <span class="hljs-comment">// 获取是否静态</span><br>     <span class="hljs-built_in">bool</span> isStatic = <span class="hljs-keyword">this</span>.gameObject.isStatic;<br><br>     <span class="hljs-comment">// 获取标签</span><br>     <span class="hljs-built_in">string</span> tag = <span class="hljs-keyword">this</span>.gameObject.tag;<br><br>     <span class="hljs-comment">// 获取层级</span><br>     <span class="hljs-built_in">int</span> layer = <span class="hljs-keyword">this</span>.gameObject.layer;<br><br></code></pre></td></tr></table></figure><h5 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 静态方法:</span><br><span class="hljs-comment">// 创建几何体</span><br>    GameObject obj = GameObject.CreatePrimitive(PrimitiveType.Cube);<br><br><span class="hljs-comment">// 查找对象</span><br><span class="hljs-comment">// 只能找激活对象，存在多个同名随机找出一个</span><br>    GameObject.Find(<span class="hljs-string">&quot;otherTest&quot;</span>); <span class="hljs-comment">// 对象名查找</span><br>    GameObject.FindGameObjectWithTag(<span class="hljs-string">&quot;Player&quot;</span>); <span class="hljs-comment">// 标签名查找</span><br>    <span class="hljs-comment">// 找多个</span><br>    GameObject[] objs = GameObject.FindGameObjectsWithTag(<span class="hljs-string">&quot;Player&quot;</span>);<br><br><span class="hljs-comment">// 实例化对象(空对象)</span><br>    GameObject instObj = GameObject.Instantiate(testOBJ);<br><br><span class="hljs-comment">// 删除对象</span><br>    GameObject.Destroy(instObj); <span class="hljs-comment">// 删除实例化对象</span><br>    GameObject.Destroy(instObj,<span class="hljs-number">5</span>); <span class="hljs-comment">// 延迟删除</span><br>    GameObject.Destroy(<span class="hljs-keyword">this</span>); <span class="hljs-comment">// 删除脚本，这里是删除自身这个脚本</span><br>    GameObject.DontDestroyOnLoad(hsgmOjc) /过景移对，里不除载本象<br></code></pre></td></tr></table></figure><h5 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 成员方法:</span><br><span class="hljs-comment">// 创建空对象</span><br>GameObject gameObject = <span class="hljs-keyword">new</span> GameObject();<br>GameObject gameObject2 = <span class="hljs-keyword">new</span> GameObject(<span class="hljs-string">&quot;Test&quot;</span>); <span class="hljs-comment">// 初始化对象名</span><br>GameObject gameObject3 = <span class="hljs-keyword">new</span> GameObject(<span class="hljs-string">&quot;TestAddComponent&quot;</span>,<span class="hljs-keyword">typeof</span>(otherTest)); <span class="hljs-comment">// 初始化对象名，并且添加脚本（变长</span><br><br><span class="hljs-comment">// 为对象添加脚本</span><br>otherTest ot = <span class="hljs-keyword">this</span>.AddComponent&lt;otherTest&gt;();<br><br><span class="hljs-comment">// 标签比较</span><br><span class="hljs-built_in">bool</span> isTag = <span class="hljs-keyword">this</span>.CompareTag(<span class="hljs-string">&quot;Player&quot;</span>);<br><br><span class="hljs-comment">// gameobj的激活失活</span><br><span class="hljs-built_in">bool</span> isActive  = <span class="hljs-keyword">this</span>.gameObject.activeSelf; <span class="hljs-comment">// 获得激活还是失活状态</span><br><span class="hljs-keyword">this</span>.gameObject.SetActive(<span class="hljs-literal">true</span>); <span class="hljs-comment">// 设置激活还是失活</span><br></code></pre></td></tr></table></figure><h4 id="时间相关-API"><a href="#时间相关-API" class="headerlink" title="时间相关 API"></a>时间相关 API</h4><h5 id="时间缩放"><a href="#时间缩放" class="headerlink" title="时间缩放"></a>时间缩放</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>&#123;<br>    <span class="hljs-comment">// 时间缩放</span><br>    Time.timeScale = <span class="hljs-number">0</span>; <span class="hljs-comment">// 0倍 （ 暂停</span><br>    Time.timeScale = <span class="hljs-number">2</span>; <span class="hljs-comment">// 2倍</span><br><br>    <span class="hljs-comment">// 帧间隔时间</span><br>    <span class="hljs-built_in">float</span> deltaTime = Time.deltaTime; <span class="hljs-comment">// 受scale影响</span><br>    <span class="hljs-built_in">float</span> unscaleDelatTime = Time.unscaledDeltaTime; <span class="hljs-comment">// 不受scale影响</span><br><br>    <span class="hljs-comment">// 游戏开始到现在的时间</span><br>    <span class="hljs-built_in">float</span> time = Time.time; <span class="hljs-comment">// 受scale影响</span><br>    <span class="hljs-built_in">float</span> unscaledTime = Time.unscaledTime; <span class="hljs-comment">//不受scale影响</span><br><br>    <span class="hljs-comment">// 游戏开始到现在跑了多少帧</span><br>    <span class="hljs-built_in">float</span> frameCount = Time.frameCount;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">FixedUpdate</span>()</span><br>&#123;<br>    <span class="hljs-comment">// 物理帧间隔时间</span><br>    <span class="hljs-built_in">float</span> fixedDeltaTime = Time.fixedDeltaTime; <span class="hljs-comment">// 受scale影响</span><br>    <span class="hljs-built_in">float</span> fixedUnscaledDelateTime = Time.fixedUnscaledDeltaTime; <span class="hljs-comment">// 受scale影响</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Vector3"><a href="#Vector3" class="headerlink" title="Vector3"></a><a href="https://so.csdn.net/so/search?q=Vector3&spm=1001.2101.3001.7020">Vector3</a></h4><p><code>Unity</code> 中的<a href="https://so.csdn.net/so/search?q=%E5%9D%90%E6%A0%87%E7%B3%BB&spm=1001.2101.3001.7020">坐标系</a>与 <code>UE</code> 不同，垂直屏幕向里面是 <code>z轴</code></p><p><img src="https://img-blog.csdnimg.cn/direct/21a2dae801d042069d60c99bb493d31e.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// Vector3 可以表示点 或者 向量</span><br>Vector3 v1 = <span class="hljs-keyword">new</span> Vector3(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>); <span class="hljs-comment">// 缺省为0</span><br>Vector3 v2 = <span class="hljs-keyword">new</span> Vector3(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>);<br><br><span class="hljs-comment">// 零向量 单位向量</span><br>Vector3 zero = Vector3.zero; <span class="hljs-comment">// 零向量</span><br>Vector3 right = Vector3.right; <span class="hljs-comment">// 1 0 0</span><br>Vector3 left = Vector3.left; <span class="hljs-comment">// -1 0 0</span><br>Vector3 forward = Vector3.forward; <span class="hljs-comment">// 0 0 1 （面朝向）</span><br>Vector3 back = Vector3.back; <span class="hljs-comment">// 0 0 -1</span><br>Vector3 up = Vector3.up; <span class="hljs-comment">// 0 1 0</span><br>Vector3 down = Vector3.down; <span class="hljs-comment">// 0 -1 0</span><br><br><span class="hljs-comment">// 两点距离</span><br><span class="hljs-built_in">float</span> distance = Vector3.Distance(v1, v2);<br></code></pre></td></tr></table></figure><h4 id="Position"><a href="#Position" class="headerlink" title="Position"></a>Position</h4><p><img src="https://img-blog.csdnimg.cn/direct/00eb87e12d244c4f927e3c8d66f4bd51.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 位置 position</span><br>Vector3 postiontion = <span class="hljs-keyword">this</span>.transform.position; <span class="hljs-comment">// 是世界坐标系下的坐标</span><br>Vector3 localPosition = <span class="hljs-keyword">this</span>.transform.localPosition; <span class="hljs-comment">// 本地坐标，相对于父对象的坐标，与面板显示一致</span><br><span class="hljs-keyword">this</span>.transform.position = <span class="hljs-keyword">new</span> Vector3(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>); <span class="hljs-comment">// 不能单独改变position的 x,y,z</span><br><br><span class="hljs-comment">// 本地向量</span><br>Vector3 myForward = <span class="hljs-keyword">this</span>.transform.forward; <span class="hljs-comment">// 面朝向</span><br></code></pre></td></tr></table></figure><h4 id="位移"><a href="#位移" class="headerlink" title="位移"></a>位移</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Update</span>()</span><br>&#123;<br>    <span class="hljs-comment">// 位移</span><br>    <span class="hljs-comment">// 三个等价：朝着自己的面朝向前进</span><br>    <span class="hljs-keyword">this</span>.transform.position += <span class="hljs-keyword">this</span>.transform.forward * Time.deltaTime;<br>    <span class="hljs-keyword">this</span>.transform.Translate(Vector3.forward * Time.deltaTime); <span class="hljs-comment">// 参考本地坐标系</span><br>    <span class="hljs-keyword">this</span>.transform.Translate(<span class="hljs-keyword">this</span>.transform.forward * Time.deltaTime, Space.World); <span class="hljs-comment">// 参考世界坐标系</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="EulerAngles"><a href="#EulerAngles" class="headerlink" title="EulerAngles"></a>EulerAngles</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Update</span>()</span><br>&#123;<br>     <span class="hljs-comment">// 旋转</span><br>    Vector3 eulerAngles = <span class="hljs-keyword">this</span>.transform.eulerAngles; <span class="hljs-comment">// 世界坐标系</span><br>    Vector3 localEulerAngles = <span class="hljs-keyword">this</span>.transform.localEulerAngles; <span class="hljs-comment">// 本地坐标系，面板参数</span><br><br>    <span class="hljs-comment">// 旋转API</span><br>    <span class="hljs-comment">// 自转</span><br>    <span class="hljs-keyword">this</span>.transform.Rotate(Vector3.up * Time.deltaTime * <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">this</span>.transform.Rotate(Vector3.up * Time.deltaTime * <span class="hljs-number">10</span>, Space.World); <span class="hljs-comment">// 相对于世界坐标轴</span><br><br>    <span class="hljs-comment">// 相对于点旋转</span><br>    <span class="hljs-keyword">this</span>.transform.RotateAround(Vector3.zero, Vector3.up, <span class="hljs-number">10</span> * Time.deltaTime);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h4><p>一般改<code>localScale</code>，相对于父对象的缩放，即相对缩放</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"> <span class="hljs-comment">// 缩放</span><br>Vector3 lossyScale = <span class="hljs-keyword">this</span>.transform.lossyScale; <span class="hljs-comment">// 世界坐标系</span><br>Vector3 localScale = <span class="hljs-keyword">this</span>.transform.localScale; <span class="hljs-comment">// 本地坐标系</span><br></code></pre></td></tr></table></figure><h5 id="看向"><a href="#看向" class="headerlink" title="看向"></a>看向</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">public</span> Transform lookObject;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>&#123;<br>    <span class="hljs-comment">//看向一个点</span><br>    <span class="hljs-keyword">this</span>.transform.LookAt(Vector3.zero);<br>    <span class="hljs-comment">//看向一个对象</span><br>    <span class="hljs-keyword">this</span>.transform.LookAt(lookObject);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="父子关系"><a href="#父子关系" class="headerlink" title="父子关系"></a>父子关系</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-keyword">public</span> Transform son;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Start</span>()</span><br>&#123;<br><span class="hljs-comment">// 父对象</span><br>print(<span class="hljs-keyword">this</span>.transform.parent); <span class="hljs-comment">// 获取</span><br><span class="hljs-keyword">this</span>.transform.parent = <span class="hljs-literal">null</span>; <span class="hljs-comment">// 取消父对象</span><br><span class="hljs-keyword">this</span>.transform.parent = GameObject.Find(<span class="hljs-string">&quot;Cube&quot;</span>).transform; <span class="hljs-comment">// 设置父对象</span><br><span class="hljs-keyword">this</span>.transform.SetParent(<span class="hljs-literal">null</span>); <span class="hljs-comment">// API的方法修改父对象</span><br><span class="hljs-keyword">this</span>.transform.SetParent(GameObject.Find(<span class="hljs-string">&quot;Cube&quot;</span>).transform, <span class="hljs-literal">true</span>); <span class="hljs-comment">// 保留面板上的参数</span><br><span class="hljs-keyword">this</span>.transform.SetParent(GameObject.Find(<span class="hljs-string">&quot;Cube&quot;</span>).transform, <span class="hljs-literal">true</span>); <span class="hljs-comment">// 保持原本的世界坐标系状态，面板参数根据父对象修改</span><br><br><span class="hljs-comment">// 子对象</span><br><span class="hljs-keyword">this</span>.transform.DetachChildren(); <span class="hljs-comment">// 取消所有子对象</span><br><span class="hljs-keyword">this</span>.transform.Find(<span class="hljs-string">&quot;Cube&quot;</span>); <span class="hljs-comment">// 根据名字查找子对象，失活也可以查找，区别Gameobject</span><br><br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>.transform.childCount; i++)<br>&#123;<br>    print(<span class="hljs-keyword">this</span>.transform.GetChild(i)); <span class="hljs-comment">// 索引号获得子对象</span><br>&#125;<br><br>son.IsChildOf(<span class="hljs-keyword">this</span>.transform); <span class="hljs-comment">// 是子对象返回true 否则false</span><br>son.GetSiblingIndex(); <span class="hljs-comment">// 子对象编号</span><br>son.SetAsFirstSibling(); <span class="hljs-comment">// 设置为第一个子对象</span><br>son.SetAsLastSibling(); <span class="hljs-comment">// 设置为最后一个子对象</span><br>son.SetSiblingIndex(<span class="hljs-number">2</span>); <span class="hljs-comment">// 自定义编号</span><br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="坐标转换"><a href="#坐标转换" class="headerlink" title="坐标转换"></a>坐标转换</h4><h5 id="世界坐标系-转-本地坐标系"><a href="#世界坐标系-转-本地坐标系" class="headerlink" title="世界坐标系 转 本地坐标系"></a>世界坐标系 转 本地坐标系</h5><p><img src="https://img-blog.csdnimg.cn/direct/27b3523a00db45488193f347e16564a0.png" alt="在这里插入图片描述"> <img src="https://img-blog.csdnimg.cn/direct/0a799c1d920b45f5829fe756fbb9a95d.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 世界坐标系的点 转化为 本地坐标系的点</span><br>print(<span class="hljs-string">&quot;(0,0,1)点相对于本地坐标系的位置：&quot;</span> + <span class="hljs-keyword">this</span>.transform.InverseTransformPoint(Vector3.forward)); <span class="hljs-comment">// 受到自身缩放影响</span><br><br><span class="hljs-comment">// 世界坐标系的方向 转化为 本地坐标系的方向</span><br>print(<span class="hljs-string">&quot;(0,0,1)方向相对于本地坐标系的方向：&quot;</span> + <span class="hljs-keyword">this</span>.transform.InverseTransformVector(Vector3.forward)); <span class="hljs-comment">// 不受自身缩放影响</span><br></code></pre></td></tr></table></figure><h5 id="本地坐标系-转-世界坐标系"><a href="#本地坐标系-转-世界坐标系" class="headerlink" title="本地坐标系 转 世界坐标系"></a>本地坐标系 转 世界坐标系</h5><p><img src="https://img-blog.csdnimg.cn/direct/cfad03d4efc247628ae3832c6d51c18c.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/direct/333d2f032ec442d5a3f0a11e2c96fb37.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 本地坐标系的点 转化为 世界坐标系的点</span><br>print(<span class="hljs-keyword">this</span>.transform.TransformPoint(Vector3.forward)); <span class="hljs-comment">// 受自身缩放影响</span><br><span class="hljs-comment">// 本地坐标系的方向 转化为 世界坐标系的方向</span><br>print(<span class="hljs-keyword">this</span>.transform.TransformDirection(Vector3.forward)); <span class="hljs-comment">// 不受自身缩放影响</span><br>print(<span class="hljs-keyword">this</span>.transform.TransformVector(Vector3.forward)); <span class="hljs-comment">// 受自身缩放影响</span><br></code></pre></td></tr></table></figure><h4 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h4><h5 id="鼠标相关"><a href="#鼠标相关" class="headerlink" title="鼠标相关"></a>鼠标相关</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 鼠标位置</span><br>Vector3 mousePosition = Input.mousePosition; <span class="hljs-comment">// 0,0,0 原点在左下角</span><br><br><span class="hljs-comment">// 鼠标输入 : 0左键 1中键 2右键</span><br><span class="hljs-comment">// 按下瞬间检测</span><br><span class="hljs-built_in">bool</span> isButtonDown = Input.GetMouseButtonDown(<span class="hljs-number">0</span>);<br><span class="hljs-comment">// 抬起瞬间检测</span><br><span class="hljs-built_in">bool</span> isButtonUp  = Input.GetMouseButtonUp(<span class="hljs-number">0</span>);<br><span class="hljs-comment">// 长按，按下，抬起都会检测</span><br><span class="hljs-built_in">bool</span> isButton = Input.GetMouseButton(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment">// 中键滚动 : Y = -1 下滚， Y = 0 未滚， Y = 1 上滚， X始终0</span><br>Vector2 mouseScrollDelta = Input.mouseScrollDelta;<br></code></pre></td></tr></table></figure><h5 id="键盘相关"><a href="#键盘相关" class="headerlink" title="键盘相关"></a>键盘相关</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 键盘输入</span><br><span class="hljs-built_in">bool</span> isKeyDown = Input.GetKeyDown(KeyCode.W); <span class="hljs-comment">// 按下</span><br><span class="hljs-built_in">bool</span> isKey = Input.GetKey(KeyCode.W); <span class="hljs-comment">// 长按</span><br><span class="hljs-built_in">bool</span> isKeyUp = Input.GetKeyUp(KeyCode.W); <span class="hljs-comment">// 抬起</span><br></code></pre></td></tr></table></figure><h5 id="默认轴输入"><a href="#默认轴输入" class="headerlink" title="默认轴输入"></a>默认轴输入</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 默认轴输入 : 取值范围[-1,1]</span><br><span class="hljs-built_in">float</span> axisHorizontal = Input.GetAxis(<span class="hljs-string">&quot;Horizontal&quot;</span>);<br><span class="hljs-built_in">float</span> axisVertical = Input.GetAxis(<span class="hljs-string">&quot;Vertical&quot;</span>);<br><span class="hljs-built_in">float</span> mouseX = Input.GetAxis(<span class="hljs-string">&quot;Mouse X&quot;</span>);<br><span class="hljs-built_in">float</span> mouseY = Input.GetAxis(<span class="hljs-string">&quot;Mouse Y&quot;</span>);<br></code></pre></td></tr></table></figure><p>另外一种：<code>GetAxisRaw</code> 方法取值有 -1 0 1 没有浮点过度</p><p><img src="https://img-blog.csdnimg.cn/direct/c0f962bb6ef04248bde1a63560e02436.png" alt="在这里插入图片描述"></p><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 是否存在任意鼠标或键盘 按下</span><br><span class="hljs-built_in">bool</span> anKeyDown = Input.anyKeyDown;<br><span class="hljs-comment">// 是否存在任意鼠标或键盘 长按</span><br><span class="hljs-built_in">bool</span> anyKey = Input.anyKey;<br><span class="hljs-comment">// 这一帧的键盘输入</span><br><span class="hljs-keyword">if</span> (Input.anyKeyDown)<br>&#123;<br>    <span class="hljs-built_in">string</span> inputString = Input.inputString;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h4><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><p><img src="https://img-blog.csdnimg.cn/direct/0ce2f5c54eea406ebebd14a16ba3be59.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/direct/d4793dd12e2f454483709e1db0026792.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/direct/22da53f8e1064deb8ec0cd6a408b0f1f.png" alt="在这里插入图片描述"></p><h5 id="成员"><a href="#成员" class="headerlink" title="成员"></a>成员</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 静态成员</span><br><span class="hljs-comment">// 获取主摄像机</span><br>Camera camera = Camera.main; <span class="hljs-comment">// 标签Tag必须是MainCamera，一般只设置一个主摄像机</span><br><span class="hljs-comment">// 获取所有摄像机</span><br>Camera[] allCameras = Camera.allCameras;<br><br><span class="hljs-comment">// 成员方法</span><br><span class="hljs-comment">// 世界坐标 转 屏幕坐标</span><br>Vector3 screenPoint = Camera.main.WorldToScreenPoint(<span class="hljs-keyword">this</span>.transform.position);<br><span class="hljs-comment">// 屏幕坐标 转 世界坐标</span><br>Vector3 worldPoint = Camera.main.ScreenToWorldPoint(Input.mousePosition);<br></code></pre></td></tr></table></figure><p>世界坐标 转 屏幕坐标 Vector3：x , y 表示屏幕坐标系，z 表示相对于摄像机的纵深距离</p><p><img src="https://img-blog.csdnimg.cn/direct/e218e645389e4f04b0dc596d4d2cfdc0.png" alt="在这里插入图片描述"></p><p>屏幕坐标 转 世界坐标 Vector3： z 表示纵深距离，类似横切面</p><p><img src="https://img-blog.csdnimg.cn/direct/7b562535b68b4bb4ae8cf7407367d6ed.png" alt="在这里插入图片描述"></p><h4 id="碰撞检测"><a href="#碰撞检测" class="headerlink" title="碰撞检测"></a>碰撞检测</h4><h5 id="Rigidbody-刚体"><a href="#Rigidbody-刚体" class="headerlink" title="Rigidbody 刚体"></a>Rigidbody 刚体</h5><p>两个物体相互碰撞必要条件：1.都有碰撞盒子 2.至少一个拥有刚体</p><p>刚体类似于模拟物理</p><p><img src="https://img-blog.csdnimg.cn/direct/2a052a751fa4468c826530df858f3236.png" alt="在这里插入图片描述"></p><p>详细：</p><p>物理帧更新直接影响刚体插值运算</p><p><img src="https://img-blog.csdnimg.cn/direct/33f95ca01ec644b8ab059a85ac74e507.png" alt="外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传"><br><img src="https://img-blog.csdnimg.cn/direct/8c093564a72e4b0191d9c9c26a43cd1e.png" alt="在这里插入图片描述"></p><p>碰撞检测模式，具体含义不重要，了解性能消耗大小即可</p><p><img src="https://img-blog.csdnimg.cn/direct/5d2f0c65a9c1484b9d499669847aa869.png" alt="在这里插入图片描述"></p><p>约束轴移动或者轴旋转</p><p><img src="https://img-blog.csdnimg.cn/direct/2fabc1bf35f94a44939417493427b6d6.png" alt="在这里插入图片描述"></p><h5 id="Collider"><a href="#Collider" class="headerlink" title="Collider"></a>Collider</h5><p><img src="https://img-blog.csdnimg.cn/direct/2224eaaee29a452da4e142ffaf53cd4e.png" alt="在这里插入图片描述"></p><h5 id="物理材质"><a href="#物理材质" class="headerlink" title="物理材质"></a>物理材质</h5><p><img src="https://img-blog.csdnimg.cn/direct/3dd81c5319664388a63db65a10d21539.png" alt="在这里插入图片描述"></p><h5 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h5><p>特殊的生命周期</p><p><img src="https://img-blog.csdnimg.cn/direct/aff1d82b74d046bca0f5998771eb3e61.png" alt="在这里插入图片描述"></p><h6 id="物理碰撞检测"><a href="#物理碰撞检测" class="headerlink" title="物理碰撞检测"></a>物理碰撞检测</h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 碰撞开始时调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnCollisionEnter</span>(<span class="hljs-params">Collision other</span>)</span> &#123;<br>    <span class="hljs-comment">// 碰撞对象</span><br>    GameObject gameObject = other.gameObject;<br>    <span class="hljs-comment">// 碰撞对象的碰撞器</span><br>    Collider collider = other.collider;<br>    <span class="hljs-comment">// 碰撞对象的位置</span><br>    Transform transform = other.transform;<br>&#125;<br><br><span class="hljs-comment">// 重叠过程中调用，需要产生摩擦</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnCollisionStay</span>(<span class="hljs-params">Collision other</span>)</span> &#123;<br><br>&#125;<br><br><span class="hljs-comment">// 碰撞结束时调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnCollisionExit</span>(<span class="hljs-params">Collision other</span>)</span> &#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="触发器检测"><a href="#触发器检测" class="headerlink" title="触发器检测"></a>触发器检测</h6><p><img src="https://img-blog.csdnimg.cn/direct/2f8fb76e4a7b4f48a244e2ec523499cc.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 触发开始时调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnTriggerEnter</span>(<span class="hljs-params">Collider other</span>)</span> &#123;<br><br>&#125;<br><br><span class="hljs-comment">// 触发重叠时调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnTriggerStay</span>(<span class="hljs-params">Collider other</span>)</span> &#123;<br><br>&#125;<br><br><span class="hljs-comment">// 触发结束时调用</span><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">OnTriggerExit</span>(<span class="hljs-params">Collider other</span>)</span> &#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="其他注意"><a href="#其他注意" class="headerlink" title="其他注意"></a>其他注意</h6><p><img src="https://img-blog.csdnimg.cn/direct/b8d41f9b95184f3ba6a1281282b706b0.png" alt="在这里插入图片描述"></p><h4 id="刚体加力"><a href="#刚体加力" class="headerlink" title="刚体加力"></a>刚体加力</h4><h5 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h5><p>获取刚体组件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">Rigidbody rigidBody = <span class="hljs-keyword">this</span>.gameObject.GetComponent&lt;Rigidbody&gt;();<br></code></pre></td></tr></table></figure><h6 id="添加水平力"><a href="#添加水平力" class="headerlink" title="添加水平力"></a>添加水平力</h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 1.相对世界坐标</span><br>rigidBody.AddForce(Vector3.forward); <span class="hljs-comment">// 朝世界坐标 0 0 1 方向施加力</span><br><span class="hljs-comment">// 2.相对本地坐标</span><br>rigidBody.AddRelativeForce(Vector3.forward); <span class="hljs-comment">// 朝面朝向施加力</span><br></code></pre></td></tr></table></figure><h6 id="添加扭矩力"><a href="#添加扭矩力" class="headerlink" title="添加扭矩力"></a>添加扭矩力</h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 1.相对世界坐标</span><br>rigidBody.AddTorque(Vector3.up);<br><span class="hljs-comment">// 2.相对本地坐标</span><br>rigidBody.AddRelativeTorque(Vector3.up);<br></code></pre></td></tr></table></figure><h6 id="改变速度"><a href="#改变速度" class="headerlink" title="改变速度"></a>改变速度</h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs CSharp">rigidBody.velocity = Vector3.forward; <span class="hljs-comment">// 相对世界坐标</span><br></code></pre></td></tr></table></figure><h6 id="给世界坐标系的点加力"><a href="#给世界坐标系的点加力" class="headerlink" title="给世界坐标系的点加力"></a>给世界坐标系的点加力</h6><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-built_in">float</span> forceValue = <span class="hljs-number">100</span>;<br><span class="hljs-built_in">float</span> radius = <span class="hljs-number">10</span>;<br>Vector3 point = Vector3.zero;<br>rigidBody.AddExplosionForce(forceValue,point,radius); <span class="hljs-comment">// 只对rigibody调用的刚体起作用</span><br></code></pre></td></tr></table></figure><h5 id="力的模式"><a href="#力的模式" class="headerlink" title="力的模式"></a>力的模式</h5><p><img src="https://img-blog.csdnimg.cn/direct/7f7f069445354c1f82a32a8828f15dbe.png" alt="在这里插入图片描述"></p><h5 id="自带的力相关脚本"><a href="#自带的力相关脚本" class="headerlink" title="自带的力相关脚本"></a>自带的力相关脚本</h5><p><img src="https://img-blog.csdnimg.cn/direct/a412635215a4401da3d64db22a60a024.png" alt="在这里插入图片描述"></p><h5 id="刚体休眠"><a href="#刚体休眠" class="headerlink" title="刚体休眠"></a>刚体休眠</h5><p><img src="https://img-blog.csdnimg.cn/direct/21e66fbc14e54e669edef632a62e8405.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/direct/057643192e204d1eabfd8c3f971489c0.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/direct/b0563a63650f4c7e87475046c4a9f523.png" alt="在这里插入图片描述"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs CSharp"><span class="hljs-comment">// 获取刚体是否休眠</span><br><span class="hljs-keyword">if</span> (rigidBody.IsSleeping())<br>&#123;<br>    rigidBody.WakeUp(); <span class="hljs-comment">// 唤醒</span><br>&#125;<br>```<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSharp 基础</title>
    <link href="/2024/02/19/forUnity/CSharpBase/"/>
    <url>/2024/02/19/forUnity/CSharpBase/</url>
    
    <content type="html"><![CDATA[<h1 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>枚举就相当于自己定于一个变量。<br></p><p>在<strong>NameSpace</strong> 和<strong>calls</strong> 和<strong>struct</strong> 语句块中声明。<br></p><p>在<strong>函数</strong> 语句中使用。<br></p><p><strong>声明枚举：</strong> 创建一个自定义的枚举类型。<br></p><p><strong>声明枚举变量：</strong> 使用声明自定义的枚举类型 创建一个枚举变量。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">enum</span> E_自定义枚举名<br>    &#123; <br>        自定义枚举项名字<span class="hljs-number">1</span>,<br>        自定义枚举项名字<span class="hljs-number">2</span>,<br>        自定义枚举项名字<span class="hljs-number">3</span>,<br>        自定义枚举项名字<span class="hljs-number">4</span>,<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="枚举和switch："><a href="#枚举和switch：" class="headerlink" title="枚举和switch："></a>枚举和switch：</h2><p>他们通常配合使用，像unity的标签，能用于判断<strong>状态</strong> 和<strong>类型</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Lesson_1</span><br>&#123;<br><br>    <span class="hljs-comment">//被命名的整形常量的集合</span><br>    <span class="hljs-comment">//一般用来表示 状态 类型 等</span><br>    <span class="hljs-comment">//声明枚举</span><br>    <span class="hljs-built_in">enum</span> E_MonsterType<br>    &#123; <br>        Normal,<br>        Boss,<br>    &#125;<br><br>    <span class="hljs-built_in">enum</span> E_playerType<br>    &#123; <br>        Main,<br>        Other,<br>    &#125;<br><br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//声明枚举变量</span><br>            <span class="hljs-comment">//自定义的枚举类型 变量名 = 自定义枚举类型.枚举项</span><br>            E_playerType PlayerType = E_playerType.Main;<br>            <span class="hljs-keyword">switch</span> (PlayerType)<br>            &#123;<br>                <span class="hljs-keyword">case</span> E_playerType.Main:<br>                    Console.WriteLine(<span class="hljs-string">&quot;主玩家逻辑&quot;</span>);<br>                    <span class="hljs-keyword">break</span>;<br><br>                <span class="hljs-keyword">case</span> E_playerType.Other:<br>                    Console.WriteLine(<span class="hljs-string">&quot;其他玩家逻辑&quot;</span>);<br>                    <span class="hljs-keyword">break</span>;<br><br>                <span class="hljs-literal">default</span>:<br>                    Console.WriteLine(<span class="hljs-string">&quot;无法判断玩家&quot;</span>);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="枚举类型的转换"><a href="#枚举类型的转换" class="headerlink" title="枚举类型的转换"></a>枚举类型的转换</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//枚举和int转换 括号强转</span><br><span class="hljs-built_in">int</span> i = (<span class="hljs-built_in">int</span>)PlayerType;<br>Console.WriteLine(i);<br><span class="hljs-comment">//枚举和string转换</span><br><span class="hljs-built_in">string</span> j = PlayerType.ToString();<br><span class="hljs-comment">//把string转换成枚举</span><br>PlayerType = (E_playerType)Enum.Parse(<span class="hljs-keyword">typeof</span>(E_playerType), <span class="hljs-string">&quot;Other&quot;</span>);<br></code></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><h3 id="数组的声明"><a href="#数组的声明" class="headerlink" title="数组的声明"></a>数组的声明</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 数组的声明方式</span><br><span class="hljs-comment">//只是声明并未占用内存</span><br><span class="hljs-built_in">int</span>[] arr1;<br><br><span class="hljs-comment">//声明了数组长度 默认值均为0</span><br><span class="hljs-built_in">int</span>[] arr2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">5</span>];<br><br><span class="hljs-comment">//声明了 数组长度 并且初始化了</span><br><span class="hljs-built_in">int</span>[] arr3 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">5</span>] &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, &#125;;<br><br><span class="hljs-comment">//声明并初始化了 数组长度依据&#123;&#125;中填入的元素个数</span><br><span class="hljs-built_in">int</span>[] arr4 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span> &#125;;<br><br><span class="hljs-comment">//与4相同 简化了</span><br><span class="hljs-built_in">int</span>[] arr5 = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> &#125;;<br></code></pre></td></tr></table></figure><h3 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//获取数组长度</span><br><span class="hljs-comment">//数组.Length</span><br><span class="hljs-built_in">int</span>[] array = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> &#125;;<br><span class="hljs-built_in">int</span> arrayLength = array.Length;<br>Console.WriteLine(arrayLength);<br><span class="hljs-comment">//打印结果为5</span><br><br><span class="hljs-comment">//修改数组的元素</span><br><span class="hljs-comment">//数组名[索引号]=值;</span><br>array[<span class="hljs-number">0</span>] = <span class="hljs-number">90</span>;<br>Console.WriteLine(array[<span class="hljs-number">0</span>]);<br><span class="hljs-comment">//打印结果为90</span><br></code></pre></td></tr></table></figure><h3 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h3><p>通过循环快速获取数组中的每一个元素</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//遍历数组</span><br><span class="hljs-comment">//范围是 0~Length-1</span><br><span class="hljs-built_in">int</span>[] array = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> &#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; array.Length; i++)<br>&#123;<br>    Console.WriteLine(array[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="增加和减少数组中的元素"><a href="#增加和减少数组中的元素" class="headerlink" title="增加和减少数组中的元素"></a>增加和减少数组中的元素</h3><p><strong>数组初始化之后是不能直接添加新元素的</strong><br></p><p>只能声明一个新数组来重新存储<br></p><p><strong>增加就是大的装小的 减少就是少的装多的</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//增加数组中的元素</span><br><span class="hljs-built_in">int</span>[] array = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> &#125;;<br><span class="hljs-built_in">int</span>[] array1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">10</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; array.Length; i++)<br>&#123;<br>    array1[i] = array[i];<br>&#125;<br>array = array1;<br><br><span class="hljs-comment">//遍历打印array结果为</span><br><span class="hljs-comment">//1，2，3，4，5，0，0，0，0，0</span><br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//j减少数组中的元素</span><br><span class="hljs-built_in">int</span>[] array = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>&#125;;<br><span class="hljs-built_in">int</span>[] array2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">5</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; array2.Length; i++)<br>&#123;<br>    array2[i] = array[i];<br>&#125;<br>array = array2;<br><br><span class="hljs-comment">//遍历打印array结果为</span><br><span class="hljs-comment">//1，2，3，4，5</span><br></code></pre></td></tr></table></figure><h3 id="查找数组的元素"><a href="#查找数组的元素" class="headerlink" title="查找数组的元素"></a>查找数组的元素</h3><p>使用循环遍历查找</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//查找数组中的元素</span><br><span class="hljs-built_in">int</span>[] array = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span> &#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; array.Length; i++)<br>&#123;<br>    <span class="hljs-keyword">if</span> (array[i]==<span class="hljs-number">3</span>)<br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;查找到&#123;0&#125; 数组&#123;1&#125;号索引&quot;</span>,array[i],i);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><h3 id="数组的声明-1"><a href="#数组的声明-1" class="headerlink" title="数组的声明"></a>数组的声明</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span>[,] arr;<br><br><span class="hljs-built_in">int</span>[,] arr2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">3</span>, <span class="hljs-number">3</span>];<br><br><span class="hljs-built_in">int</span>[,] arr3 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">3</span>, <span class="hljs-number">3</span>] &#123;&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;,<br>                             &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span> &#125;,<br>                             &#123;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span> &#125;&#125;;<br><br><span class="hljs-built_in">int</span>[,] arr4 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[,]    &#123;&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;,<br>                             &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span> &#125;,<br>                             &#123;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span> &#125;&#125;;<br><br><span class="hljs-built_in">int</span>[,] arr5 = &#123; &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;,<br>               &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span> &#125;,<br>               &#123;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span> &#125; &#125;;<br></code></pre></td></tr></table></figure><h3 id="基操-1"><a href="#基操-1" class="headerlink" title="基操"></a>基操</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//获取二维数组长度（行列）</span><br><span class="hljs-comment">//数组名.GetLength(0); 0是行 1是列</span><br><span class="hljs-built_in">int</span> arr2Row = arr2.GetLength(<span class="hljs-number">0</span>);<br><span class="hljs-built_in">int</span> arr2Columm = arr2.GetLength(<span class="hljs-number">1</span>);<br>Console.WriteLine(<span class="hljs-string">&quot;行&quot;</span> + arr2Row + <span class="hljs-string">&quot;列&quot;</span>+arr2Columm);<br><br><span class="hljs-comment">//获取数组中的元素</span><br><span class="hljs-built_in">int</span> arrDeta = arr2 [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>];<br><span class="hljs-comment">//修改数组中的元素</span><br>arr2 [<span class="hljs-number">1</span>,<span class="hljs-number">1</span>] = <span class="hljs-number">90</span>;<br></code></pre></td></tr></table></figure><h3 id="遍历数组-1"><a href="#遍历数组-1" class="headerlink" title="遍历数组"></a>遍历数组</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span>[,] a = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">5</span>, <span class="hljs-number">2</span>] &#123;&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;, <br>                          &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>&#125;, <br>                          &#123;<span class="hljs-number">2</span>,<span class="hljs-number">4</span>&#125;, <br>                          &#123;<span class="hljs-number">3</span>,<span class="hljs-number">6</span>&#125;, <br>                          &#123;<span class="hljs-number">4</span>,<span class="hljs-number">8</span>&#125; &#125;;<br><br><span class="hljs-built_in">int</span> i, j;<br><br><span class="hljs-comment">/* 输出数组中每个元素的值 */</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">2</span>; j++)<br>    &#123;<br>        <span class="hljs-comment">//a[i,j];</span><br>        Console.WriteLine(a[i,j]);<br>    &#125;<br><br>&#125;<br><br>打印结果：<br>a[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]: <span class="hljs-number">0</span><br>a[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>]: <span class="hljs-number">0</span><br>a[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>]: <span class="hljs-number">1</span><br>a[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]: <span class="hljs-number">2</span><br>a[<span class="hljs-number">2</span>,<span class="hljs-number">0</span>]: <span class="hljs-number">2</span><br>a[<span class="hljs-number">2</span>,<span class="hljs-number">1</span>]: <span class="hljs-number">4</span><br>a[<span class="hljs-number">3</span>,<span class="hljs-number">0</span>]: <span class="hljs-number">3</span><br>a[<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]: <span class="hljs-number">6</span><br>a[<span class="hljs-number">4</span>,<span class="hljs-number">0</span>]: <span class="hljs-number">4</span><br>a[<span class="hljs-number">4</span>,<span class="hljs-number">1</span>]: <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h3 id="增加和减少数组中的元素-1"><a href="#增加和减少数组中的元素-1" class="headerlink" title="增加和减少数组中的元素"></a>增加和减少数组中的元素</h3><p>使用两个for循环嵌套 来代表行列<br></p><p>大的装小的 ：for条件是小的数组长度<br></p><p>小的装大的：for条件是小的数组长度</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//增加二维数组元素</span><br><span class="hljs-built_in">int</span>[,] arr5 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> [<span class="hljs-number">3</span>,<span class="hljs-number">3</span>] &#123; &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;,<br>                              &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span> &#125;,<br>                              &#123;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span> &#125; &#125;;<br><br><span class="hljs-built_in">int</span>[,] arr5add = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">4</span>, <span class="hljs-number">3</span>];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; arr5.GetLength(<span class="hljs-number">0</span>); i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; arr5.GetLength(<span class="hljs-number">1</span>); j++)<br>    &#123;<br>        arr5add[i, j] = arr5[i, j];<br>    &#125;<br>&#125;<br>arr5 = arr5add;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//减少二维数组元素</span><br><span class="hljs-built_in">int</span>[,] arr5 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> [<span class="hljs-number">3</span>,<span class="hljs-number">3</span>] &#123; &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;,<br>                              &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span> &#125;,<br>                              &#123;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span> &#125; &#125;;<br><br><span class="hljs-built_in">int</span>[,] arr5sub = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; arr5sub.GetLength(<span class="hljs-number">0</span>); i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; arr5sub.GetLength(<span class="hljs-number">1</span>); j++)<br>    &#123;<br>        arr5sub[i, j] = arr5[i, j];<br>    &#125;<br>&#125;<br>arr5 = arr5sub;<br></code></pre></td></tr></table></figure><h3 id="查找数组中的元素"><a href="#查找数组中的元素" class="headerlink" title="查找数组中的元素"></a>查找数组中的元素</h3><p>遍历数组的基础上 增加一个if语句判断</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span>[,] arr5 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> [<span class="hljs-number">3</span>,<span class="hljs-number">3</span>] &#123; &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> &#125;,<br>                              &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span> &#125;,<br>                              &#123;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span> &#125; &#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; arr5.GetLength(<span class="hljs-number">0</span>); i++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> j = <span class="hljs-number">0</span>; j &lt; arr5.GetLength(<span class="hljs-number">1</span>); j++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (arr5[i, j]==<span class="hljs-number">2</span>)<br>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;2为数组中的&#123;0&#125;行&#123;1&#125;列&quot;</span>,i,j);<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="交错数组"><a href="#交错数组" class="headerlink" title="交错数组"></a>交错数组</h2><p>行列可以不一样<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//可以行列不一样</span><br><span class="hljs-comment">//声明方式</span><br><span class="hljs-comment">//变量类型[][] 数组名;</span><br><span class="hljs-built_in">int</span>[][] arr;<br><span class="hljs-comment">//变量类型[][] 数组名 = new 变量类型[行数][];</span><br><span class="hljs-built_in">int</span>[][] arr2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">3</span>][];<br><span class="hljs-comment">//可以行列不一样</span><br><span class="hljs-built_in">int</span>[][] arr3 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">3</span>][] &#123; <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;,<br>                              <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;,<br>                              <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">1</span>&#125;    &#125;;<br><br><span class="hljs-comment">//获取交错数组长度</span><br><span class="hljs-comment">//行数和二维数组获取方式一样</span><br><span class="hljs-built_in">int</span> i = arr3.GetLength(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//列只能获取某一行的列数 </span><br><span class="hljs-built_in">int</span> j = arr3[<span class="hljs-number">0</span>].Length;<br><br><br><span class="hljs-comment">//获取和修改交错数组中的元素</span><br><span class="hljs-built_in">int</span> arr3Deta = arr3[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>];<br>arr3[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] = <span class="hljs-number">99</span>;<br><br><span class="hljs-comment">//遍历交错数组 </span><br><span class="hljs-comment">//与二维数组一样使用两个for循环</span><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> ii = <span class="hljs-number">0</span>; ii &lt; arr3.GetLength(<span class="hljs-number">0</span>); ii++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> jj = <span class="hljs-number">0</span>; jj &lt; arr3[ii].Length; jj++)<br>    &#123;<br>        Console.Write(arr3[ii][jj]+<span class="hljs-string">&quot; &quot;</span>);<br>    &#125;<br>    Console.WriteLine(); <span class="hljs-comment">//用于空行识别列长</span><br>&#125;<br><br><span class="hljs-comment">//增加交错数组元素</span><br><span class="hljs-built_in">int</span>[][] arr3Add = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">4</span>][] &#123; <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> []&#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;,<br>                                 <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> []&#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;,<br>                                 <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> []&#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;,<br>                                 <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> []&#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125; &#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> iii = <span class="hljs-number">0</span>; iii &lt; arr3.GetLength(<span class="hljs-number">0</span>); iii++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> jjj = <span class="hljs-number">0</span>; jjj &lt; arr3[iii].Length; jjj++)<br>    &#123;<br>        arr3Add[iii][jjj] = arr3[iii][jjj];<br>    &#125;<br>&#125;<br><span class="hljs-comment">//遍历查看</span><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> ii = <span class="hljs-number">0</span>; ii &lt; arr3Add.GetLength(<span class="hljs-number">0</span>); ii++)<br>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> jj = <span class="hljs-number">0</span>; jj &lt; arr3Add[ii].Length; jj++)<br>    &#123;<br>        Console.Write(arr3Add[ii][jj]+<span class="hljs-string">&quot; &quot;</span>);<br>    &#125;<br>    Console.WriteLine();<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="值和引用类型"><a href="#值和引用类型" class="headerlink" title="值和引用类型"></a>值和引用类型</h1><p><strong>引用类型：</strong> 数组，字符串，类<br></p><p><strong>值类型：</strong> 有符号，无符号，浮点，字符，布尔，结构体</p><h2 id="赋值规律"><a href="#赋值规律" class="headerlink" title="赋值规律"></a>赋值规律</h2><p><strong>值类型在相互赋值时</strong> 是把内容拷贝给了对方 他变我不变<br></p><p><strong>引用类型在相互赋值时</strong> 是把指针指向同一内存地址 他变我也变</p><h2 id="值类型和引用类型存储的区域不同"><a href="#值类型和引用类型存储的区域不同" class="headerlink" title="值类型和引用类型存储的区域不同"></a>值类型和引用类型存储的区域不同</h2><p>值类型储存在 栈空间 —— 系统分配，自动回收，小而快<br></p><p>引用类型储存在 堆空间 ——手动申请和释放，大而慢</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1656173673891-6dee0276-8b12-4313-8f8e-905ebc37cd08.png#averageHue=%23efefef&clientId=u76fee626-c877-4&from=drop&id=uf471228d&originHeight=317&originWidth=431&originalType=binary&ratio=1&rotation=0&showTitle=false&size=51042&status=done&style=none&taskId=u712b07fb-0418-4b6b-b18c-c326af98f85&title=" alt="db9fa079638e774b4550f700bd11e4d.png"><br></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1656174051097-79fb706b-b160-4045-b68f-189336be96a1.png#averageHue=%23eeeeee&clientId=u76fee626-c877-4&from=drop&id=uf6980e7a&originHeight=302&originWidth=420&originalType=binary&ratio=1&rotation=0&showTitle=false&size=41582&status=done&style=none&taskId=uc7d4cc54-7199-45a1-9617-2a518391468&title=" alt="a623d09009bf7e9fb5826eaaa7f3ec0.png"><br></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1656174055218-b7155529-e8cb-455c-a993-866e0bf53de9.png#averageHue=%23eeedec&clientId=u76fee626-c877-4&from=drop&id=u97838d09&originHeight=407&originWidth=432&originalType=binary&ratio=1&rotation=0&showTitle=false&size=77373&status=done&style=none&taskId=u3c728af1-5d75-477d-8e52-859df3cc94a&title=" alt="1101fb3ba3d7e60b30e564e33434669.png"></p><h2 id="new实例化"><a href="#new实例化" class="headerlink" title="new实例化"></a>new实例化</h2><p>通过关键字new 可以开一个新内存地址（在堆中新开一个房间）<br></p><p>这时候由于他们使用的不是同一个内存地址，自然赋值就不会牵扯到之前的数据</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1656174511125-07fdedff-8e22-41aa-a001-8fa7cd41ab65.png#averageHue=%23f1f0f0&clientId=u76fee626-c877-4&from=paste&height=361&id=u5f62025d&originHeight=361&originWidth=429&originalType=binary&ratio=1&rotation=0&showTitle=false&size=70730&status=done&style=none&taskId=u6580667e-75d7-49dc-bde4-78dfb924913&title=&width=429" alt="image.png"></p><h2 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//值类型</span><br><span class="hljs-built_in">int</span> a = <span class="hljs-number">10</span>;<br><span class="hljs-comment">//引用类型</span><br><span class="hljs-built_in">int</span>[] array = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span> &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;;<br><br><span class="hljs-comment">//声明了一个b与其相等</span><br><span class="hljs-built_in">int</span> b = a;<br><span class="hljs-comment">//声明了一个array2让其等于之前的array</span><br><span class="hljs-built_in">int</span>[] array2 = array;<br><span class="hljs-comment">//打印结果</span><br><span class="hljs-comment">//a=10 b=10</span><br><span class="hljs-comment">//array=1,2,3,4,5  array2=1,2,3,4,5</span><br>    <br>b= <span class="hljs-number">20</span>;<br>array2=&#123;<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>&#125;;<br><span class="hljs-comment">//打印结果</span><br><span class="hljs-comment">//a=10 b=20</span><br><span class="hljs-comment">//array= 5,4,3,2,1  array2= 5,4,3,2,1</span><br><span class="hljs-comment">//由于引用类型 指向的内存地址是同一个所以相同</span><br><br>array2=<span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123;<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>&#125;;<br><span class="hljs-comment">//打印结果</span><br><span class="hljs-comment">//array= 5,4,3,2,1  array2= 6,7,8,9</span><br><span class="hljs-comment">//array2用new新开了一个内存地址 所以不会牵扯到之前的array</span><br></code></pre></td></tr></table></figure><h2 id="特殊的引用类型string"><a href="#特殊的引用类型string" class="headerlink" title="特殊的引用类型string"></a>特殊的引用类型string</h2><p>string在c#中进行了处理使其具有值类型的特征<br></p><p>虽然方便，但是频繁的改变 string 重新赋值会产生内存垃圾</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">string</span> str1 = <span class="hljs-string">&quot;123&quot;</span>;<br><span class="hljs-built_in">string</span> str2 = str1;<br>str2 = <span class="hljs-string">&quot;321&quot;</span>;<br><span class="hljs-comment">//打印结果</span><br><span class="hljs-comment">//str1 = &quot;123&quot;</span><br><span class="hljs-comment">//str2 = &quot;321&quot;</span><br><span class="hljs-comment">//虽是引用类型，但是具有的是值类型的特征 他变我不变</span><br></code></pre></td></tr></table></figure><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>函数（方法）<br></p><p>是封装代码进行重复使用的一种机制<br></p><p>提升复用率<br></p><p>抽象行为</p><p>函数在 <strong>class</strong> ，<strong>struct</strong> 中声明<br></p><p><strong>关键字：static</strong> (静态的)，<strong>void</strong> (无返回值)<br></p><p><strong>函数的命名：</strong> 每一个首单词大写<br></p><p>返回类型 可以是任意变量类型<br></p><p>参数不是必须的 参数类型也可以是任意类型<br></p><p><strong>参数默认值&#x2F;可选参数</strong> ：当参数给定默认值时，使用函数时不传入参数就会使用参数默认值来进行计算<br></p><p>可以嵌套使用</p><p>return可以提前结束函数逻辑，直接返回到函数外部<br></p><p>与for，while中的break有些相似</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// static 返回类型 函数名 （参数，参数，....）</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//代码逻辑</span><br><span class="hljs-comment">//return 返回值; (有返回类型才选)</span><br><span class="hljs-comment">//&#125;</span><br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Function</span> (<span class="hljs-params"><span class="hljs-built_in">int</span> a ,<span class="hljs-built_in">int</span> b</span>)</span><br>&#123;<br>    <span class="hljs-built_in">int</span> c = a*b;<br>    <span class="hljs-keyword">return</span> c;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//⭕1.无参无返回值函数</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SayHellow</span>()</span><br>&#123;<br>    Console.WriteLien(<span class="hljs-string">&quot;你好世界&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">//⭕2.有参无返回值函数</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">SayYourName</span> (<span class="hljs-params"><span class="hljs-built_in">string</span> name</span>)</span><br>&#123;<br>    Console.WriteLien(<span class="hljs-string">&quot;你的名字是&#123;0&#125;&quot;</span>,name);<br>&#125;<br><br><span class="hljs-comment">//⭕3.无参有返回值函数</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">string</span> <span class="hljs-title">WhatYouName</span> ()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;唐老师&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">//⭕4.有参有返回值函数</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Multiply</span> (<span class="hljs-params"><span class="hljs-built_in">int</span> a ,<span class="hljs-built_in">int</span> b</span>)</span><br>&#123;<br>    <span class="hljs-built_in">int</span> c = a*b;<br>    <span class="hljs-keyword">return</span> c;<br>&#125;<br><br><span class="hljs-comment">//⭕5.有参数多返回值函数</span><br><span class="hljs-comment">//传入两个数 然后计算两数的和以及平均数 得出结果返回</span><br><span class="hljs-comment">//函数返回值默认是不能返回多个变量，可以使用数组来储存 </span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span>[] <span class="hljs-title">Calc</span> (<span class="hljs-params"><span class="hljs-built_in">int</span> a ,<span class="hljs-built_in">int</span> b</span>)</span><br>&#123;<br>    <span class="hljs-built_in">int</span> sum = a+b;<br>    <span class="hljs-built_in">int</span> avg = (a+b)/<span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">int</span>[] array = &#123;sum,avg&#125;;<br>    <span class="hljs-keyword">return</span> array;<br>&#125;<br><br><span class="hljs-comment">//⭕6.return可以直接不执行之后的代码，直接返回到函数外部</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Speak</span> (<span class="hljs-params"><span class="hljs-built_in">string</span> str</span>)</span><br>&#123;<br>    <span class="hljs-comment">//如果说脏话就不打印</span><br>    <span class="hljs-keyword">if</span>(str == <span class="hljs-string">&quot;傻逼&quot;</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>    Console.WriteLien(str);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="ref和out的作用"><a href="#ref和out的作用" class="headerlink" title="ref和out的作用"></a>ref和out的作用</h2><p>他们使用的方式和效果都是一样，在参数前添加<br></p><p>使传入的参数 在函数外也修改<br></p><p>相当于直接使用这个传入参数，而不是声明一个参数取替代<br></p><p>在函数中new 传入数组的时候 ，真正的new了<br></p><p><strong>ref和out的区别：</strong><br></p><p><strong>1.ref传入的变量(参数) 必须初始化，out不用。</strong><br></p><p><strong>2.out传入的变量必须在内部赋值，ref不用。</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ChangeValue</span> (<span class="hljs-params"><span class="hljs-built_in">int</span> a</span>)</span><br>&#123;<br>    a=<span class="hljs-number">20</span>;<br>&#125;<br><br><span class="hljs-built_in">int</span> b = <span class="hljs-number">10</span><br>ChangeValue(b);<br><span class="hljs-comment">//打印b还是为10</span><br><br><br><span class="hljs-comment">//参数前添加 ref 修饰符 </span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ChangeValue</span> (<span class="hljs-params"> <span class="hljs-keyword">ref</span> <span class="hljs-built_in">int</span> a</span>)</span><br>&#123;<br>    a=<span class="hljs-number">20</span>;<br>&#125;<br><span class="hljs-built_in">int</span> b = <span class="hljs-number">10</span><br>ChangeValue(b);<br><span class="hljs-comment">//打印b为20 在函数内修改传入参数 传入的参数在外部也会修改</span><br></code></pre></td></tr></table></figure><h2 id="params-变长参数"><a href="#params-变长参数" class="headerlink" title="params 变长参数"></a>params 变长参数</h2><p>可以输入不定的多个参数，并把这些参数存入数组</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//例子求和输入的参数</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Sum</span>(<span class="hljs-params"><span class="hljs-keyword">params</span> <span class="hljs-built_in">int</span>[] arr</span>)</span><br>&#123;<br>    <span class="hljs-built_in">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.Length; i++)<br>    &#123;<br>        sum += arr[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> sum;<br>&#125;<br><br><br><span class="hljs-built_in">int</span> sum = Sum(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>);<br><span class="hljs-comment">//打印sum为21</span><br></code></pre></td></tr></table></figure><p>在函数参数中只能最多出现一个params关键字 且一定在最后一组参数</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Sum</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> a ,<span class="hljs-built_in">int</span> b ,<span class="hljs-keyword">params</span> <span class="hljs-built_in">int</span>[] arr</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> ;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h2><p>在同一语句块（class或struct）中函数名相同 参数的数量or类型or顺序不同。<br></p><p>系统根据 参数:数量,类型,顺序 的不同来重载不同的函数。<br></p><p>与返回值类型无关 返回值类型可以是任意类型</p><p><strong>作用：命名一组功能类似的函数，减少函数名的数量，避免命名空间的污染，提升程序的可读性</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalcSum</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> a ,<span class="hljs-built_in">int</span> b</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a+b;<br>&#125;<br><br><span class="hljs-comment">//参数数量不同</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">CalcSum</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> a ,<span class="hljs-built_in">int</span> b,<span class="hljs-built_in">int</span> c</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a+b+c;<br>&#125;<br><br><span class="hljs-comment">//参数类型不同</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">float</span> <span class="hljs-title">CalcSum</span>(<span class="hljs-params"><span class="hljs-built_in">float</span> a ,<span class="hljs-built_in">float</span> b</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a+b;<br>&#125;<br><br><span class="hljs-comment">//参数顺序不同</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">float</span> <span class="hljs-title">CalcSum</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> a , <span class="hljs-built_in">float</span> b</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> a+b;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">float</span> <span class="hljs-title">CalcSum</span>(<span class="hljs-params"><span class="hljs-built_in">float</span> b ，<span class="hljs-built_in">int</span> a </span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> b+a;<br>&#125;<br><br><span class="hljs-comment">//ref和out</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">float</span> <span class="hljs-title">CalcSum</span>(<span class="hljs-params"><span class="hljs-keyword">ref</span> <span class="hljs-built_in">float</span> b ，<span class="hljs-built_in">int</span> a </span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> b+a;<br>&#125;<br><span class="hljs-comment">//----------------------------------------------------</span><br><br><span class="hljs-comment">//虽然函数名相同，但系统根据 参数:数量,类型,顺序 的不同来重载不同的函数。</span><br>CalcSum(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);<br>CalcSum(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>);<br>CalcSum(<span class="hljs-number">1.11f</span>,<span class="hljs-number">2.22f</span>);<br>CalcSum(<span class="hljs-number">1</span>,<span class="hljs-number">2.22f</span>);<br>CalcSum(<span class="hljs-number">2.22f</span>,<span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure><h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><p>让函数自己调用自己<br></p><p>必须有结束调用的条件<br></p><p>比较难且实际开发用的不多，面试客户端会有</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//用递归函数打印 0~10</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Function</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> a</span>)</span><br>&#123;<br>    <span class="hljs-comment">//第四步：结束条件</span><br>    <span class="hljs-keyword">if</span> (a&gt;<span class="hljs-number">10</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">//第二部：完成要求 打印</span><br>    Console.WriteLine(a);<br>    <span class="hljs-comment">//第三步：完成一个 递归的变化 作为条件判断</span><br>    ++a;<br>    <span class="hljs-comment">//第一步：构造一个递归</span><br>    Function(a);<br>&#125;<br><span class="hljs-comment">//-----------------------------------------</span><br><span class="hljs-built_in">int</span> a =<span class="hljs-number">0</span>;<br>Function(a);<br></code></pre></td></tr></table></figure><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><p>在namespact(命名空间)中声明结构体<br></p><p>命名规范：首字母大写<br></p><p>变量和函数的集合 用来表示特定的数据集合<br></p><p>封装逻辑和行为<br></p><p>可以实例化很多个 实现复用</p><h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript">**<span class="hljs-keyword">public</span>  公开的 可以被外部访问** <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span>**<span class="hljs-keyword">private</span> 私有的 只能内部使用** <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span>**没有添加时默认是<span class="hljs-keyword">private</span> 的**<br></code></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>没有返回值，函数名和结构名相同，主要用于快速初始化结构体对象的<br></p><p><strong>结构体中构造函数和函数也是可以重载的</strong></p><h2 id="代码演示-1"><a href="#代码演示-1" class="headerlink" title="代码演示"></a>代码演示</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> System;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Lesson_4_</span>结构体<br>&#123;<br>    <span class="hljs-keyword">struct</span> Student<br>    &#123;<br>        <span class="hljs-comment">//访问修饰符</span><br>        <span class="hljs-comment">//public  公开的 可以被外部访问</span><br>        <span class="hljs-comment">//private 私有的 只能内部使用</span><br>        <span class="hljs-comment">//要让外部调用 就必须加public</span><br>        <br>        <span class="hljs-comment">//🔴变量</span><br>        <span class="hljs-comment">//声明结构体的变量 不能直接初始化</span><br><br>        <span class="hljs-comment">//年龄</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> age;<br>        <span class="hljs-comment">//性别</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> sex;<br>        <span class="hljs-comment">//学号</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> number;<br>        <span class="hljs-comment">//姓名</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> name;<br><br><br>        <span class="hljs-comment">//🔴构造函数</span><br>        <span class="hljs-comment">//没有返回值</span><br>        <span class="hljs-comment">//函数名必须和结构体相同</span><br>        <span class="hljs-comment">//必须有参数</span><br>        <span class="hljs-comment">//如果声明了构造函数 那么必须在其中对所有变量数据初始化</span><br>        <span class="hljs-comment">//构造函数一般是用于在外部方便初始化的</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Student</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> age, <span class="hljs-built_in">bool</span> sex, <span class="hljs-built_in">int</span> number, <span class="hljs-built_in">string</span> name</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//新的关键字this</span><br>            <span class="hljs-comment">//代表自己</span><br>            <span class="hljs-keyword">this</span>.age = age;<br>            <span class="hljs-keyword">this</span>.sex = sex;<br>            <span class="hljs-keyword">this</span>.number = number;<br>            <span class="hljs-keyword">this</span>.name = name;<br><br>        &#125;<br><br><br>        <span class="hljs-comment">//🔴函数方法</span><br>        <span class="hljs-comment">//表现这个数据结构的行为</span><br>        <span class="hljs-comment">//结构体中的函数不需要加static关键字</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Speak</span>()</span><br>        &#123;<br>            <span class="hljs-comment">//函数中可以直接使用结构体内部的变量</span><br>            Console.WriteLine(<span class="hljs-string">&quot;我的名字是&#123;0&#125;，我今年&#123;1&#125;岁&quot;</span>, name, age);<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            <span class="hljs-comment">//结构体的使用</span><br>            Student s1;<br>            s1.name = <span class="hljs-string">&quot;苏先生&quot;</span>;<br>            s1.age = <span class="hljs-number">20</span>;<br>            s1.number = <span class="hljs-number">123321123</span>;<br>            s1.sex = <span class="hljs-literal">true</span>;<br>            s1.Speak();<br><br>            <span class="hljs-comment">//可以再次实例化 复用</span><br>            Student s2;<br>            s2.name = <span class="hljs-string">&quot;苏小姐&quot;</span>;<br>            s2.age = <span class="hljs-number">20</span>;<br>            s2.number = <span class="hljs-number">123371524</span>;<br>            s2.sex = <span class="hljs-literal">false</span>;<br>            s2.Speak();<br><br>            <span class="hljs-comment">//使用构造函数初始化 可以比上面简便</span><br>            Student s3 = <span class="hljs-keyword">new</span> Student(<span class="hljs-number">18</span>, <span class="hljs-literal">true</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&quot;小红&quot;</span>);<br>            s3.Speak();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p>给定一个数组，进行有规律排序(比较大小)</p><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1656267770827-9bc096b2-93ab-4d1f-be70-618b67aa46df.png#averageHue=%23fcfbe8&clientId=ubafc723f-f5cc-4&from=paste&height=409&id=u825bff66&originHeight=409&originWidth=467&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30022&status=done&style=none&taskId=u7a954b59-268c-4eca-8b1c-372429ecd78&title=&width=467" alt="image.png"><br></p><p>两两相邻<br></p><p>不停比较<br></p><p>不停交换<br></p><p>比较m轮</p><p>两层循环<br></p><p>外层轮数<br></p><p>内层比较<br></p><p>两值比较<br></p><p>满足交换</p><p>优化：比过的不比，加入bool</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span>[] array = &#123; <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span> &#125;;<br><br><span class="hljs-built_in">bool</span> isSort = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">//有几个数就比较几轮</span><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt; array.Length; m++)<br>&#123;<br>    isSort = <span class="hljs-literal">false</span>;<br>    <span class="hljs-comment">//进一次循环就换一轮 确定了一轮后最大值已经放到了对应位置 所以-m轮</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> n = <span class="hljs-number">0</span>; n &lt; array.Length - <span class="hljs-number">1</span>-m; n++)<br>    &#123;<br>        <span class="hljs-comment">//如果第n个数比第n+1个数要大 那就交换位置</span><br>        <span class="hljs-keyword">if</span> (array[n] &gt; array[n + <span class="hljs-number">1</span>])<br>        &#123;<br>            isSort = <span class="hljs-literal">true</span>;<br>            <span class="hljs-built_in">int</span> temp = array[n];<br>            array[n] = array[n + <span class="hljs-number">1</span>];<br>            array[n + <span class="hljs-number">1</span>] = temp;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//当一轮结束过后 如果isSort这个标识还是false</span><br>    <span class="hljs-comment">//那就意味着 排序没有交换过位置 已经是最终序列了 不需要再判断了</span><br>    <span class="hljs-keyword">if</span> (!isSort)<br>    &#123;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; array.Length; i++)<br>&#123;<br>    Console.WriteLine(array[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>新建中间商<br></p><p>依次比较<br></p><p>找出极值<br></p><p>放入目标位置<br></p><p>比较n轮</p><p>两层循环<br></p><p>外层轮数<br></p><p>内层寻找<br></p><p>初始索引<br></p><p>记录极值<br></p><p>内存循环外交换<br></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1656269785217-79d837b5-8006-48f7-b4fc-be0c5eb39b80.png#averageHue=%23fcfcfc&clientId=ubafc723f-f5cc-4&from=drop&id=u305ee759&originHeight=497&originWidth=853&originalType=binary&ratio=1&rotation=0&showTitle=false&size=38107&status=done&style=none&taskId=ud89bbbdf-579a-49d3-b781-e6d953834f5&title=" alt="5b1bb230cb35cfb25f798ed5380eca5.png"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span>[] array = &#123; <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span> &#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> m = <span class="hljs-number">0</span>; m &lt; array.Length; m++)<br>&#123;<br>    <span class="hljs-comment">//声明中间商</span><br>    <span class="hljs-built_in">int</span> index = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//比较一轮</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> n = <span class="hljs-number">0</span>; n &lt; array.Length-m; n++)<br>    &#123;<br>        <span class="hljs-comment">//找出极值的索引</span><br>        <span class="hljs-keyword">if</span> (array[index] &lt; array[n])<br>        &#123;<br>            index = n;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//放入目标位置</span><br>    <span class="hljs-comment">//Length-1-轮数</span><br>    <span class="hljs-keyword">if</span> (index != array.Length<span class="hljs-number">-1</span>-m)<br>    &#123;<br>        <span class="hljs-built_in">int</span> temp = array[index];<br>        array[index] = array[array.Length - <span class="hljs-number">1</span> - m];<br>        array[array.Length - <span class="hljs-number">1</span> - m] = temp;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; array.Length; i++)<br>&#123;<br>    Console.WriteLine(array[i]);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于我在 2023 年收获了哪些 ACGN 周边</title>
    <link href="/2024/02/15/ACGN/acggoodsof2023/"/>
    <url>/2024/02/15/ACGN/acggoodsof2023/</url>
    
    <content type="html"><![CDATA[<h1 id="海淘"><a href="#海淘" class="headerlink" title="海淘"></a>海淘</h1><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1717681257012.webp?imageSlim" alt="fripSide SSA BD 亲笔签名"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1704163564466.webp?imageSlim" alt="fripSide的CD和BD"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1704163564471.webp?imageSlim"></p><h1 id="CP29"><a href="#CP29" class="headerlink" title="CP29"></a>CP29</h1><p>买到的东西整整铺了一床.jpg</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1717681257220.webp?imageSlim"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1717681257091.webp?imageSlim" alt="挂画"></p><h1 id="BW2023"><a href="#BW2023" class="headerlink" title="BW2023"></a>BW2023</h1><h1 id="miHoYo-and-Azur-Lane"><a href="#miHoYo-and-Azur-Lane" class="headerlink" title="miHoYo and Azur Lane"></a>miHoYo and Azur Lane</h1><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1717681257121.webp?imageSlim"></p><h1 id="其他的一些东西"><a href="#其他的一些东西" class="headerlink" title="其他的一些东西"></a>其他的一些东西</h1><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1717681256943.webp?imageSlim" alt="BML十周年礼盒"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/1704163564460.webp?imageSlim"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/23451.webp?imageSlim" alt="非人哉和洛天依银行卡"></p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSharp 入门</title>
    <link href="/2024/01/26/forUnity/CSharpBeginner/"/>
    <url>/2024/01/26/forUnity/CSharpBeginner/</url>
    
    <content type="html"><![CDATA[<h2 id="总结：学习了基础关键词的作用-和一些算法"><a href="#总结：学习了基础关键词的作用-和一些算法" class="headerlink" title="总结：学习了基础关键词的作用 和一些算法"></a>总结：学习了基础关键词的作用 和一些算法</h2><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//变量命名 遵循首字母小写 后面的单词首字母大写</span><br><span class="hljs-built_in">int</span> myName = <span class="hljs-number">12</span>;<br><span class="hljs-built_in">int</span> yourName = <span class="hljs-number">13</span>;<br><span class="hljs-built_in">string</span> myString = <span class="hljs-string">&quot;我的字符串&quot;</span>;<br><span class="hljs-comment">//函数和类的命名 循序首字母大写</span><br><span class="hljs-keyword">class</span> <span class="hljs-title">MyArray</span>&#123;<br><br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">MyFunction</span> ()</span>&#123;<br><br>&#125;<br><br><br><span class="hljs-meta">#<span class="hljs-keyword">region</span></span><br><span class="hljs-comment">//折叠代码</span><br><span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br></code></pre></td></tr></table></figure><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><p>1字节&#x3D;8比特&#x3D;8位 例：1001 0100<br></p><p><strong>无符号</strong> 正整数集 <strong>ulong</strong> (64位) <strong>uint</strong> (32位) <strong>ushort</strong> (16位) <strong>byte</strong> (8位)<br></p><p><strong>有符号</strong> 整数集 <strong>long</strong> (64位) <strong>int</strong> (32位) <strong>short</strong> (16位) <strong>sbyte</strong> (8位)<br></p><p><strong>浮点数</strong> 小数 <strong>decimal</strong> (128位) <strong>double</strong> (64位) <strong>float</strong> (32位) <br></p><p><strong>特殊字符</strong> 字符串 字符 <strong>string</strong> (无位数限制) <strong>char</strong> (16位)<strong>bool</strong> (8位)<br></p><p><strong>声明常量</strong> 变量前加<strong>“const”</strong> 关键字<br></p><p><code>const float PI = 3.14159265f;</code></p><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//在字符串中使用 &quot;&quot; &#x27;&#x27; \ 时要使用转义字符&quot;\&quot;来标识</span><br><span class="hljs-comment">//使用 &quot;\n&quot; 来完成字符串换行</span><br><span class="hljs-comment">//或者在字符串前加上&quot;@&quot;来取消转义字符&quot;\&quot;</span><br>Console.WriteLine(<span class="hljs-string">&quot;\&quot;哈哈哈\&quot;&quot;</span>); <span class="hljs-comment">//打印结果为：&quot;哈哈哈&quot;</span><br>Console.WriteLine(<span class="hljs-string">@&quot;哈\哈哈&quot;</span>); <span class="hljs-comment">//打印结果为：&quot;哈\哈哈&quot;</span><br></code></pre></td></tr></table></figure><h2 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h2><h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><p>小范围可以隐式转换大范围</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">long</span> i =<span class="hljs-number">1</span>;<br><span class="hljs-built_in">int</span> i2 =<span class="hljs-number">1</span>;<br>i=i2;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/jpeg/25552567/1655378202640-959f0806-0c66-4ef9-ae68-bd561b72899e.jpeg#averageHue=%23364732&clientId=uc0f3ef77-3962-4&from=drop&id=u2a0db7ef&originHeight=259&originWidth=972&originalType=binary&ratio=1&rotation=0&showTitle=false&size=51075&status=done&style=none&taskId=u2d6e4b74-d33f-4556-be8c-2e8980fad01&title=" alt="1829a42d425612adad7fbb1bbfab56e.jpg"><br></p><p>char可以隐式转换成整数和浮点，转换结果为Ascii码。</p><h3 id="显式转换"><a href="#显式转换" class="headerlink" title="显式转换"></a>显式转换</h3><h4 id="括号强转"><a href="#括号强转" class="headerlink" title="括号强转"></a>括号强转</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//显示转换 括号强转 高精度转低精度</span><br><span class="hljs-comment">//（整数可能会出现范围超出 浮点会出现精度问题）</span><br><span class="hljs-comment">// 格式： 变量 =（转换的类型）变量</span><br><span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>;<br><span class="hljs-built_in">short</span> s = <span class="hljs-number">1</span>;<br>s = (<span class="hljs-built_in">short</span>)i;<br><br><span class="hljs-built_in">byte</span> b = <span class="hljs-number">1</span>;<br><span class="hljs-built_in">uint</span> ui = <span class="hljs-number">1</span>;<br>b = (<span class="hljs-built_in">byte</span>)ui;<br><br><span class="hljs-comment">//浮点强转整形时会抛弃小数点后的数 无四舍五入</span><br><span class="hljs-built_in">float</span> f = <span class="hljs-number">18.789f</span>;<br>i = (<span class="hljs-built_in">int</span>)f;<br>Console.WriteLine(i);<br></code></pre></td></tr></table></figure><h4 id="Parse法"><a href="#Parse法" class="headerlink" title="Parse法"></a>Parse法</h4><p>字符串转对应类型</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//目标变量.Parse(“字符串”)；</span><br><span class="hljs-built_in">string</span> str1 = <span class="hljs-string">&quot;123&quot;</span>;<br><span class="hljs-built_in">int</span> i2 = <span class="hljs-built_in">int</span>.Parse(str1);   <span class="hljs-comment">//字符串转对应类型 注意值的范围</span><br>i2 += <span class="hljs-number">100</span>;                  <span class="hljs-comment">//可以进行数学计算</span><br>Console.WriteLine(i2);<br><br><span class="hljs-built_in">short</span> s3 = (<span class="hljs-built_in">short</span>)<span class="hljs-built_in">int</span>.Parse(<span class="hljs-string">&quot;4000000&quot;</span>); <span class="hljs-comment">// 字符串“4000000”转int后转short</span><br>Console.WriteLine(s3);<br><span class="hljs-comment">//打印结果为 2304 因为short范围问题</span><br></code></pre></td></tr></table></figure><h4 id="Convert法"><a href="#Convert法" class="headerlink" title="Convert法"></a>Convert法</h4><p>适用性强 什么都能转</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//更准确的将各类型之间转换</span><br><span class="hljs-comment">//Convert.To对应类型(变量)</span><br><br><span class="hljs-comment">//转字符串 </span><br><span class="hljs-built_in">int</span> a = Convert.ToInt32(<span class="hljs-string">&quot;12&quot;</span>);<br><span class="hljs-built_in">string</span> str2 = Convert.ToString(<span class="hljs-number">321</span>);<br><br><span class="hljs-comment">//浮点数转换 精度更高四舍五入 </span><br>a = Convert.ToInt32(<span class="hljs-number">3.6789f</span>);<br>Console.WriteLine(a);<br><span class="hljs-comment">//打印结果为 4</span><br><span class="hljs-built_in">float</span> f1 = Convert.ToSingle(<span class="hljs-string">&quot;13.567&quot;</span>);<br><span class="hljs-comment">//打印结果为 13.567</span><br>Console.WriteLine(a);<br></code></pre></td></tr></table></figure><h4 id="其他类型转String"><a href="#其他类型转String" class="headerlink" title="其他类型转String"></a>其他类型转String</h4><p>拼接打印</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">// 作用 拼接打印</span><br><span class="hljs-comment">// 语法 变量.tostring();</span><br><span class="hljs-built_in">string</span> str3 = <span class="hljs-number">9888.</span>ToString();<br>Console.WriteLine(str3);<br><span class="hljs-comment">//打印结果为9888</span><br><span class="hljs-built_in">int</span> a4 = <span class="hljs-number">1</span> ;<br>str3 = a4.ToString();<br><span class="hljs-built_in">bool</span> b1 = <span class="hljs-literal">true</span>;<br>str3 = b1.ToString();<br>Console.WriteLine(str3);<br><span class="hljs-comment">//打印结果为true</span><br><br><span class="hljs-comment">//调用打印时 进行拼接时 字符串 + 变量 会默认转换</span><br>Console.WriteLine(<span class="hljs-string">&quot;数字是：&quot;</span> + a4 + b1);<br><span class="hljs-comment">//上下效果相同</span><br>Console.WriteLine(<span class="hljs-string">&quot;数字是：&quot;</span> + a4.ToString() + b1.ToString());<br></code></pre></td></tr></table></figure><h2 id="异常捕获"><a href="#异常捕获" class="headerlink" title="异常捕获"></a>异常捕获</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655689182460-5de19ecd-62b0-461b-b332-af10d3a63bb0.png#averageHue=%23252525&clientId=ufe61610f-edae-4&from=drop&height=420&id=ub82e8ca4&originHeight=315&originWidth=421&originalType=binary&ratio=1&rotation=0&showTitle=false&size=78571&status=done&style=none&taskId=u82b70d23-2b99-4627-a8f9-3170ed4cf75&title=&width=561" alt="b78e4fee0516a944f26c5fe50cc25bd.png"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">try</span><br>&#123;<br>    <span class="hljs-built_in">string</span> str = Console.ReadLine();<br>    <span class="hljs-built_in">int</span>.Parse(str);<br>&#125;<br><span class="hljs-keyword">catch</span><br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;请输入合法数字&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="自增运算符"><a href="#自增运算符" class="headerlink" title="自增运算符"></a>自增运算符</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655690363660-31ed3ab2-3fc9-4323-a9db-33475e3115af.png#averageHue=%23525043&clientId=u0c14d9d7-b79b-4&from=drop&id=u947c606c&originHeight=384&originWidth=462&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151676&status=done&style=none&taskId=uf031b889-aff3-4547-b608-2a266989f19&title=" alt="419482fad0cb86bde74410b1137d2e2.png"></p><h2 id="逻辑运算符的短路规则"><a href="#逻辑运算符的短路规则" class="headerlink" title="逻辑运算符的短路规则"></a>逻辑运算符的短路规则</h2><p><strong>与：&amp;&amp;</strong> 有假则假 同真为真<br></p><p><strong>或：||</strong> 有真为真 同假为假<br></p><p><strong>非：！</strong> 反转真假<br></p><p>运算优先级： ! &gt; &amp;&amp; &gt; ||</p><p>i3打印结果为1<br></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655714715943-a44ca710-030b-4ae8-842c-01307c85297a.png#averageHue=%23404137&clientId=u8848ca3e-7155-4&from=drop&height=326&id=u9005a501&originHeight=310&originWidth=439&originalType=binary&ratio=1&rotation=0&showTitle=false&size=138222&status=done&style=none&taskId=u25195c36-b793-435b-8acf-6ad30ed5ee6&title=&width=461" alt="b9af060679f6f1a2d46185d34ec8c6d.png"></p><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655716508185-407871b2-ffbc-4fc1-bf42-923bab950325.png#averageHue=%233f3d37&clientId=u8848ca3e-7155-4&from=drop&height=209&id=u5d8cb971&originHeight=209&originWidth=377&originalType=binary&ratio=1&rotation=0&showTitle=false&size=64553&status=done&style=none&taskId=uc76c71bc-67cb-49d2-b534-ea2f6100b58&title=&width=377" alt="23c4da148546d6f24aa6c8af2b9f855.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655716510749-f4c435a8-f7f4-49a9-afb6-6bd87225fc79.png#averageHue=%23272726&clientId=u8848ca3e-7155-4&from=drop&height=209&id=ub1d60d79&originHeight=222&originWidth=386&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60863&status=done&style=none&taskId=ufe20d337-4684-4871-8225-7cea3aa39ec&title=&width=363" alt="96314a0dadc51c22c36c34ef9cd2921.png"><br></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655716513078-52e0b505-cc51-4ae3-a45d-600058189046.png#averageHue=%23272727&clientId=u8848ca3e-7155-4&from=drop&height=202&id=ue557d81b&originHeight=208&originWidth=391&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60506&status=done&style=none&taskId=ufaf72162-a5be-4fdf-a226-b2dd1e4cc8c&title=&width=380" alt="3be9bcb1c4464534de49d2c499eede3.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/25552567/1655717846632-6905aa3a-f46a-4e31-a091-9b25afa315c3.png#averageHue=%233a3a32&clientId=u8848ca3e-7155-4&from=drop&height=203&id=uda6e9378&originHeight=212&originWidth=412&originalType=binary&ratio=1&rotation=0&showTitle=false&size=84466&status=done&style=none&taskId=ua55ffbdc-d0f7-4b6c-b491-5fb9a720196&title=&width=395" alt="f763bac3287b655c9f7d3312e055761.png"></p><h2 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h2><p>可以实现简单的逻辑运算 if和else <br></p><h2 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h2><h3 id="If"><a href="#If" class="headerlink" title="If"></a>If</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//三种写法</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    如果为真则执行此语句块的代码<br>&#125;<br><br><span class="hljs-comment">//——————————————————————————————</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    如果为真则执行此语句块的代码<br>&#125;<br><br><br><span class="hljs-keyword">else</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    否则执行此段语句块代码<br>&#125;<br><br><span class="hljs-comment">//————————————————————————————————</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    如果为真则执行此语句块的代码<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    否则执行此段语句块代码<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    否则执行此段语句块代码<br>&#125;<br><span class="hljs-comment">//..........可以 else if 下去</span><br><span class="hljs-keyword">else</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    否则执行此段语句块代码<br>&#125;<br><br><span class="hljs-comment">//————————————————————————————————————</span><br><span class="hljs-comment">//if嵌套</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">bool</span>值)<br>    &#123;<br>    <br>    &#125;  <br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>    &#123;<br>    <br>    &#125;    <br><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">bool</span>值)<br>&#123;<br><br>&#125; <br><br><span class="hljs-comment">//if扩展写法</span><br><span class="hljs-keyword">if</span>(!<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    如果为真则执行此语句块的代码<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Switch"><a href="#Switch" class="headerlink" title="Switch"></a>Switch</h3><p>用于枚举</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">switch</span> (变量)<br>&#123;<br>    <span class="hljs-comment">//变量==常量时执行case和break之间的代码     </span><br>    <span class="hljs-keyword">case</span> 常量:    <span class="hljs-comment">//常量，只能写固定的值 不能写范围 逻辑运算符等</span><br>        满足条件所执行的代码<br>        <span class="hljs-keyword">break</span>;<br>        <br>    <span class="hljs-keyword">case</span> 常量:<br>        满足条件所执行的代码<br>        <span class="hljs-keyword">break</span>;<br>        <br>    <span class="hljs-keyword">case</span> 常量:<br>        满足条件所执行的代码<br>        <span class="hljs-keyword">break</span>;    <br>    <br>    <span class="hljs-literal">default</span>:<br>        如果上面的条件都不满足 就会执行<span class="hljs-literal">default</span><br>        <span class="hljs-keyword">break</span>;<br>&#125;    <br><span class="hljs-comment">//-------------------------------------------------</span><br><span class="hljs-keyword">switch</span> (变量)<br>&#123;   <br>    <span class="hljs-comment">//贯穿 变量 == 常量1 || 常量2  时执行break前的代码</span><br>    <span class="hljs-keyword">case</span> 常量<span class="hljs-number">1</span>:  <br>    <span class="hljs-keyword">case</span> 常量<span class="hljs-number">2</span>:<br>        满足条件所执行的代码<br>        <span class="hljs-keyword">break</span>;    <br>    <br>    <span class="hljs-literal">default</span>:<br>        如果上面的条件都不满足 就会执行<span class="hljs-literal">default</span><br>        <span class="hljs-keyword">break</span>;<br><br><span class="hljs-comment">//——————————————————————————————————————————————————————————————————</span><br><span class="hljs-built_in">int</span> a = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">switch</span><br>&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        Console.WriteLine(<span class="hljs-string">&quot;a为1&quot;</span>)<br>        <span class="hljs-keyword">break</span>;<br>        <br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        Console.WriteLine(<span class="hljs-string">&quot;a为2&quot;</span>)<br>        <span class="hljs-keyword">break</span>;  <br>        <br>    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>        Console.WriteLine(<span class="hljs-string">&quot;a为3&quot;</span>)<br>        <span class="hljs-keyword">break</span>; <br>        <br>    <span class="hljs-literal">default</span>:<br>        Console.WriteLine(<span class="hljs-string">&quot;a不满足条件&quot;</span>)<br>        <span class="hljs-keyword">break</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a>For循环</h3><p>使用较多<br></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//常用在计数循环</span><br><span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i =<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">10</span>; ++i)<br>&#123;<br>    Console.WriteLine(i); <br>&#125;<br><br><span class="hljs-comment">//————————————————————————</span><br><span class="hljs-comment">//死循环</span><br><span class="hljs-keyword">for</span>(;;)<br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;你好&quot;</span>); <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="While循环"><a href="#While循环" class="headerlink" title="While循环"></a>While循环</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">while</span>(<span class="hljs-built_in">bool</span>值)<br>&#123;<br>    满足条件时就会执行该语句块<br>    执行玩会回到<span class="hljs-keyword">while</span>开头再次判断    <br>&#125;    <br><br><span class="hljs-comment">//-------------------------------------</span><br><br><span class="hljs-comment">//累加i到10</span><br><span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span> ;<br><span class="hljs-keyword">while</span>(i&lt;<span class="hljs-number">10</span>)<br>&#123;<br>    ++i;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do while循环"></a>do while循环</h3><p>用的比较少</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">do</span><br>&#123;<br>   判断条件在后面 所以先执行一次本语句块代码再做判断<br><br>&#125;<span class="hljs-keyword">while</span>(<span class="hljs-built_in">bool</span>值);<br></code></pre></td></tr></table></figure><h3 id="break：跳出循环"><a href="#break：跳出循环" class="headerlink" title="break：跳出循环"></a>break：跳出循环</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;break之前的代码&quot;</span>);  <br>    <span class="hljs-keyword">break</span>;<br>    Console.WriteLine(<span class="hljs-string">&quot;break之后的代码 不会被执行&quot;</span>);  <br>&#125;    <br>Console.WriteLine(<span class="hljs-string">&quot;循环外的代码&quot;</span>); <br><br><span class="hljs-comment">//----------------------------------------------</span><br><br><span class="hljs-comment">//累加i到10</span><br><span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span> ;<br><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>&#123;<br>    ++i;<br>    <span class="hljs-keyword">if</span>(i==<span class="hljs-number">10</span>)<br>    &#123;<br>        <span class="hljs-keyword">break</span>; <span class="hljs-comment">//这个时while的break</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="continue：回到循环开始"><a href="#continue：回到循环开始" class="headerlink" title="continue：回到循环开始"></a>continue：回到循环开始</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span> ;<br><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;continue之前的代码&quot;</span>); <br>    <span class="hljs-keyword">continue</span>;<br>    Console.WriteLine(<span class="hljs-string">&quot;continue之后的代码不会执行&quot;</span>); <br>&#125;<br>Console.WriteLine(<span class="hljs-string">&quot;循环外的代码不会执行&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//输入一个键并赋值</span><br><span class="hljs-built_in">char</span> c = Console.ReadKey().KeyChar;<br><span class="hljs-comment">//输入一个键并赋值 且不在控制台显示</span><br><span class="hljs-built_in">char</span> c = Console.ReadKey(<span class="hljs-literal">true</span>).KeyChar;<br><span class="hljs-comment">//清除控制台</span><br>Console.Clear();<br><span class="hljs-comment">//设置光标位置 控制台左上角为0，0 右侧是x正方向 下方是y正方向</span><br>Console.SetCursorPosition(<span class="hljs-number">10</span>,<span class="hljs-number">5</span>);<br><span class="hljs-comment">//设置文字颜色</span><br>Console.ForegroundColor = ConsoleColor.Red;<br><span class="hljs-comment">//设置背景色 配合Clear使用 填充窗口颜色</span><br>Console.BackgroundColor = ConsoleColor.White;<br>Console.Clear();<br><span class="hljs-comment">//光标显隐</span><br>Console.CursorVisible = <span class="hljs-literal">false</span>;<br><span class="hljs-comment">//关闭控制台</span><br>Environment.Exit(<span class="hljs-number">0</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>「铃芽之旅」展</title>
    <link href="/2024/01/17/OutlineACGN/SuzumeShowOfShanghai/"/>
    <url>/2024/01/17/OutlineACGN/SuzumeShowOfShanghai/</url>
    
    <content type="html"><![CDATA[<blockquote><p>新海诚导演作品「铃芽之旅」展<br>展览地点：上海无限极荟购物中心B2<br>展览时间：2023年12月22日—2024年2月16日<br><a href="https://www.bilibili.com/opus/870036215286464536">https://www.bilibili.com/opus/870036215286464536</a></p></blockquote><p>在商场附近以及进入商场后都能看到海报。</p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_14375175.webp" alt="商场内的海报">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_14385713.webp" alt="展示板">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_14391749.webp" alt="馆">  </p><p>购票后从这扇门进入<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_14414289.webp" alt="入口"> </p><p>展馆大致是按照影片播放顺序来布置的，里面有介绍新海诚导演创作心路历程，以及场景复刻。大部分主要场景都展出了官方的原画手稿、绘画分镜以及美术背景之类的图片</p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_1456167.webp"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15013258.webp"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15013990.webp"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15014463.webp" alt="图 17"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15015238.webp" alt="图 18"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15022274.webp" alt="图 19"> </p><p>走到最后有个周边售卖的地方：<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15064649.webp" alt="一些周边">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240111_15064388.webp" alt="周边价格">  </p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
      <tag>线下主题展</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碧蓝航线 - 冬日奇旅展</title>
    <link href="/2024/01/16/OutlineACGN/AzurLaneShow/"/>
    <url>/2024/01/16/OutlineACGN/AzurLaneShow/</url>
    
    <content type="html"><![CDATA[<blockquote><p>《碧蓝航线》 x 美罗城 冬日奇旅展厅</p><p>【活动时间】2023年12月14日~2024年1月14日 </p><p>【活动地点】上海市徐汇区肇嘉浜路1111号美罗城</p><p><a href="https://t.bilibili.com/874092317960568905">https://t.bilibili.com/874092317960568905</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17280627.webp" alt="美罗城入口">  </p><p>冬日港区合影点<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17273938.webp" alt="礼盒展览限时合影点 美罗城B1F">  </p><p>在5F展馆外有一些舰船的立绘<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_16530457.webp" alt="英仙座">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_16530979.webp" alt="忒修斯"></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_16531792.webp" alt="鲁普雷希特亲王"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_16533736.webp" alt="奥古斯特"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_16540081.webp" alt="兴登堡"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_16542410.webp" alt="吕佐夫"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17024766.webp" alt="展馆入口"></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17032893.webp" alt="展馆概括">  </p><p>馆内有很多加载过场图原画<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17031491.webp">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17033350.webp"></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17033659.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17034388.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17035415.webp">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17035954.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17052422.webp"></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17041319.webp">  </p><p>还有一些舰船设定展示</p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17040265.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17040530.webp">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17050181.webp"></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_1705112.webp">  </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17065924.webp">  </p><p>现场有一些周边的展示和售卖</p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17073242.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17073925.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17074259.webp"> </p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_17081152.webp"> </p><p>完成集章后会赠送一个小周边</p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_1720262.webp" alt="集章赠送的小周边">  </p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
      <tag>线下主题展</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>蔚蓝档案 - 半周年线下庆典</title>
    <link href="/2024/01/16/OutlineACGN/BlueArchiveHalfYearShow/"/>
    <url>/2024/01/16/OutlineACGN/BlueArchiveHalfYearShow/</url>
    
    <content type="html"><![CDATA[<p>■ 活动地点：<br>上海市静安大悦城南座3F中庭、次中庭</p><p>■ 活动时间：<br>2023年12月30日-2024年1月1日</p><p><a href="https://t.bilibili.com/877415651990306818">https://t.bilibili.com/877415651990306818</a></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240101_15481617.webp" alt="图 0"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_14143621.webp" alt="图 1"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_1417528.webp" alt="图 2"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_14264367.webp" alt="图 3"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_15055012.webp" alt="图 4"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_15070022.webp" alt="图 5"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_15131179.webp" alt="图 6"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20231230_15153594.webp" alt="图 7"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/Blog/IMG_20240101_14461131.webp" alt="图 8">  </p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
      <tag>线下主题展</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unity学习路线</title>
    <link href="/2024/01/05/forUnity/UnityStudyRoad/"/>
    <url>/2024/01/05/forUnity/UnityStudyRoad/</url>
    
    <content type="html"><![CDATA[<h1 id="C"><a href="#C" class="headerlink" title="C#"></a>C#</h1><h2 id="C-入门"><a href="#C-入门" class="headerlink" title="C#入门"></a>C#入门</h2><h2 id="C-基础"><a href="#C-基础" class="headerlink" title="C#基础"></a>C#基础</h2><h2 id="C-核心"><a href="#C-核心" class="headerlink" title="C#核心"></a>C#核心</h2><h2 id="C-进阶"><a href="#C-进阶" class="headerlink" title="C#进阶"></a>C#进阶</h2><h1 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h1><h2 id="Unity-入门"><a href="#Unity-入门" class="headerlink" title="Unity 入门"></a>Unity 入门</h2><h2 id="Unity-核心"><a href="#Unity-核心" class="headerlink" title="Unity 核心"></a>Unity 核心</h2><h2 id="Unity-进阶"><a href="#Unity-进阶" class="headerlink" title="Unity 进阶"></a>Unity 进阶</h2><h2 id="Unity-程序基础框架"><a href="#Unity-程序基础框架" class="headerlink" title="Unity 程序基础框架"></a>Unity 程序基础框架</h2><h2 id="Unity-中的-MVC-框架"><a href="#Unity-中的-MVC-框架" class="headerlink" title="Unity 中的 MVC 框架"></a>Unity 中的 MVC 框架</h2><h2 id="C-知识补充"><a href="#C-知识补充" class="headerlink" title="C#知识补充"></a>C#知识补充</h2><h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><h2 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h2><h2 id="UGUI"><a href="#UGUI" class="headerlink" title="UGUI"></a>UGUI</h2><h1 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h1><h2 id="PlayerPrefs"><a href="#PlayerPrefs" class="headerlink" title="PlayerPrefs"></a>PlayerPrefs</h2><h2 id="Json"><a href="#Json" class="headerlink" title="Json"></a>Json</h2><h2 id="2-进制"><a href="#2-进制" class="headerlink" title="2 进制"></a>2 进制</h2><h1 id="Lua-热更新解决方案"><a href="#Lua-热更新解决方案" class="headerlink" title="Lua 热更新解决方案"></a>Lua 热更新解决方案</h1><h1 id="热更新-AssetBundle-上传和下载"><a href="#热更新-AssetBundle-上传和下载" class="headerlink" title="热更新 AssetBundle 上传和下载"></a>热更新 AssetBundle 上传和下载</h1><h1 id="网络游戏开发基础"><a href="#网络游戏开发基础" class="headerlink" title="网络游戏开发基础"></a>网络游戏开发基础</h1><h1 id="A-寻路算法"><a href="#A-寻路算法" class="headerlink" title="A*寻路算法"></a>A*寻路算法</h1>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
      <category>Unity</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
      <tag>Unity</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bilibili World 2023 总结（攻略）</title>
    <link href="/2023/11/21/OutlineACGN/BW2023Guide/"/>
    <url>/2023/11/21/OutlineACGN/BW2023Guide/</url>
    
    <content type="html"><![CDATA[<h1 id="Bilibili-World-2023-总结（攻略）"><a href="#Bilibili-World-2023-总结（攻略）" class="headerlink" title="Bilibili World 2023 总结（攻略）"></a>Bilibili World 2023 总结（攻略）</h1><blockquote><p>转载自我的B站<a href="https://space.bilibili.com/5840406">个人空间</a>的专栏，并在此基础上修改完善。</p></blockquote><p>本文章是一名普通观众的BW参展总结，总结了一些购票、行程安排、入场的注意事项，希望看到这篇文章的人可以在文中有所收获。</p><h1 id="购票"><a href="#购票" class="headerlink" title="购票"></a>购票</h1><ol><li>购票是非常重要的一环，它决定你能不能去展会。</li><li>CP和BW不像CM以及国内一些地区性的漫展有现场票一说，所有的票都在线上发售（可能在上海一些地区有少量的线下票）。</li><li>在展会开展前基本上票都会售罄。</li><li>鉴于今年（2023年）CP29和BW2023的经验，现在基本上<strong>开票几分钟内普通票就被抢完了</strong>（VIP票售罄更快），不像之前开票后几天内还可以随意买。</li><li><strong>一定要留意开票时间，第一时间抢票。</strong></li><li><strong>最好使用网页端（PC电脑）抢票</strong>，根据经验，APP抢票成功率低。</li><li><strong>购票前优先设置好实名信息，避免出现开票时再填写，错失宝贵时间。</strong></li><li>若开票几分钟后没抢到时不要放弃，因为会有人因各种原因没付款或退票，通过不断刷新页面，看到灰色的按钮变亮果断点击。<strong>一般来说开票后4小时内都有极大的概率捡漏</strong>，一定不要放弃。</li><li>当你进入了捡漏环节时，<strong>如果你要买多张，请一张一张买，而不是选中多个购票人</strong>，放票可能只放出来一张，多张票同时返回票池的可能性低，抢到的概率也低。</li><li>当你通过上述方法依然没有抢到票时，你可以关注与展会合作的展商们，他们手中一般都有票，可能通过粉丝群发放。</li></ol><p><a href="https://www.bilibili.com/video/BV1qV4y1b7y1/">BW2023抢票实况</a></p><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/dd2901e6f380f09eef989a01b751a14464f120311d359d2ee3e33d6673069901.jpg" alt="开票后1小时帮朋友抢到的BW2023 Day 2(Bilibili)"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/23835092e983af1caf84db48ce8afc337376048466e8e6aa32b366f6589180b8.jpg" alt="开票后9分钟抢到的CP29 Day 1(cpp)"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/95e2f411f3522c99f252a2586c28230e121504c749082e4e4b17dc65311b9bfa.jpg" alt="开票后7分钟抢到的CP29 Day 2(Bilibili)">  </p><h1 id="行程安排"><a href="#行程安排" class="headerlink" title="行程安排"></a>行程安排</h1><p>如果你是第一次参加，你可能不知道如何安排行程，这里提供了三种时间安排：</p><p>正常行程：在展会开展前一天到达上海，晚上在酒店休息，第二天一早前往展会（合理安排，但会多出一天的住宿费用）。</p><p>特种兵：在展会前一天乘坐火车，于凌晨或早上到达上海（或其它的展会地点）并直奔展会（此方法对体力有较高要求，身体不允许不要强求，但可以省下第一天的酒店费用）。</p><p>家在上海附近（苏州、嘉兴、无锡等）：早起乘高铁到上海虹桥站，再乘地铁到达会场。</p><p>回程可以当天回，也可以晚上返回酒店休息，第二天返回。</p><h1 id="酒店选择"><a href="#酒店选择" class="headerlink" title="酒店选择"></a>酒店选择</h1><p>首先需要确定你的预算，你需要在上海呆几天（几个晚上），确定好就可以在各大APP上筛选了</p><p>首先不建议选择场馆附近的廉价酒店，条件一般都很差，如果预算足够则可以在会场附近的比较好的酒店预约。</p><p>当你在APP中设置好你的预算以及酒店品牌（可选）之后，根据展会的交通图确认哪条线可以直达展会，之后在各类旅行APP的右上角选择地图模式，沿着地铁线寻找附近离地铁口比较近的酒店，即使需要一次换乘也OK。<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/42e46096d725ef2bf238c44fab4715cf21d5112f90a70cb343973189d8318fcd.jpg" alt="按照场馆的地铁站经过的线路筛选">  </p><p>根据地图设置导航，从酒店到展会，尽量确保地铁时间在1个半小时之内，越短越好。</p><h1 id="入场"><a href="#入场" class="headerlink" title="入场"></a>入场</h1><p>优先参考官方发的路线图，从哪个地铁站口出，沿着哪条路线，根据你的票类型选择VIP或是普通票路线（根据经验，很有可能有人会排错误的队伍，到最后浪费时间还要回到正确的路线）。<br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/d5666360dab020efc10bc7a6aa677fb9ff2528205e19e2e6ae66188fe496f98a.webp" alt="留意场馆周边的指示牌">  </p><p>如果逛完了展会还有精力和时间的话，也可以参考一下这篇文章，介绍了上海一些二次元游玩地点。<a href="https://www.clearacg.com/2023/10/09/%E4%B8%8A%E6%B5%B7%E4%BA%8C%E6%AC%A1%E5%85%83%E6%B8%B8%E7%8E%A9%E5%9C%B0%E7%82%B9%E6%8E%A8%E8%8D%90/">点击传送</a></p><p>简单的写了一个攻略，如有不足还请指出，欢迎大佬在Blog或者B站评论区交流。</p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git常用操作</title>
    <link href="/2023/11/16/GitCode/"/>
    <url>/2023/11/16/GitCode/</url>
    
    <content type="html"><![CDATA[<h1 id="Git常用操作"><a href="#Git常用操作" class="headerlink" title="Git常用操作"></a>Git常用操作</h1><blockquote><p>内容及图片来自<a href="https://space.bilibili.com/102438649">GeekHour</a>，请关注支持原作者。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/fffed6aee13fd71bdf6e72c450f96d69100cfce27f1ff6243cbd706c178ebc2b.webp" alt="图 0">  </p><h1 id="初始化设置"><a href="#初始化设置" class="headerlink" title="初始化设置"></a>初始化设置</h1><p>配置⽤户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br></code></pre></td></tr></table></figure><p>配置邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;mail@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>存储配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global credential store<br></code></pre></td></tr></table></figure><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>创建⼀个新的本地仓库 (省略 project-name 则在当前⽬录创建)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init &lt;project-name&gt;<br></code></pre></td></tr></table></figure><p>克隆⼀个远程仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> &lt;url&gt;<br></code></pre></td></tr></table></figure><h1 id="四个区域"><a href="#四个区域" class="headerlink" title="四个区域"></a>四个区域</h1><p>⼯作区（Working Directory）就是你在电脑⾥能实际看到的⽬录。</p><p>暂存区（Stage &#x2F; Index）<br>暂存区也叫索引，⽤来临时存放未提交的内容􀀄 ⼀般在.git⽬录下的index中。</p><p>本地仓库（Repository）<br>Git在本地的版本库，仓库信息存储在.git这个隐藏⽬录中。</p><p>远程仓库（Remote Repository）<br>托管在远程服务器上的仓库􀀂 常⽤的有GitHub、GitLab、Gitee。</p><h1 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h1><p>已修改（Modified）<br>修改了但是没有保存到暂存区的⽂件。</p><p>已暂存（Staged）<br>修改后已经保存到暂存区的⽂件。</p><p>已提交（Committed）<br>把暂存区的⽂件提交到本地仓库后的状态。</p><p>默认主分支<br>main&#x2F;master </p><p>默认远程仓库<br>Origin </p><p>指向当前分支的指针<br>HEAD </p><p>上一个版本<br>HEAD^ </p><p>上四个版本<br>HEAD~ </p>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Technology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ももこ画集 arietta</title>
    <link href="/2023/11/08/ACGN/arietta/"/>
    <url>/2023/11/08/ACGN/arietta/</url>
    
    <content type="html"><![CDATA[<h1 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h1><table><thead><tr><th>画集信息</th><th></th></tr></thead><tbody><tr><td>画师</td><td>ももこ</td></tr><tr><td>Pixiv ID</td><td><a href="https://www.pixiv.net/users/1113943">https://www.pixiv.net/users/1113943</a></td></tr><tr><td>发售日期</td><td>2020&#x2F;05&#x2F;30</td></tr><tr><td>定价</td><td>3,300 円</td></tr><tr><td>入手价</td><td>129.7 元 (台版)</td></tr></tbody></table><h1 id="实拍图"><a href="#实拍图" class="headerlink" title="实拍图"></a>实拍图</h1><h1 id="试览"><a href="#试览" class="headerlink" title="试览"></a>试览</h1><p><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/4d89ca64210633c4657b5852dedd42d1fc69995c954b7cd04e0c0cd1eaf16fc0.jpg" alt="图 0"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/c9064cb734ee1185f1c6e26a5a48f3d1a5fc78fc73ab7309b55078fe106b8587.jpg" alt="图 1"><br><img src="https://cdn.jsdelivr.net/gh/AkiCCLing/blog-image@master/blog/25d0e3fff43111a88faa3386d0ade0056c1524e3d44beed61f07def03ea6b8b4.jpg" alt="图 2">  </p><h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><p>链接：<a href="https://pan.baidu.com/s/1H72XOuR2LYZzKQxIPVuf2w">https://pan.baidu.com/s/1H72XOuR2LYZzKQxIPVuf2w</a><br>提取码：afaq<br>解压缩密码：akiccling<br>请下载后再解压</p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
      <tag>Books</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dear Smile DSマイル画集</title>
    <link href="/2023/11/06/ACGN/DearSmile/"/>
    <url>/2023/11/06/ACGN/DearSmile/</url>
    
    <content type="html"><![CDATA[<h1 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h1><table><thead><tr><th>画集信息</th><th></th></tr></thead><tbody><tr><td>画师</td><td>DSマイル</td></tr><tr><td>Pixiv ID</td><td><a href="https://www.pixiv.net/users/795196">https://www.pixiv.net/users/795196</a></td></tr><tr><td>发售日期</td><td>2022&#x2F;05&#x2F;25</td></tr><tr><td>定价</td><td>2,750 円</td></tr><tr><td>入手价</td><td>97.8 元</td></tr></tbody></table><h1 id="实拍图"><a href="#实拍图" class="headerlink" title="实拍图"></a>实拍图</h1><p><img src="https://s2.loli.net/2023/11/06/LvKEQk1gwclYHXh.webp" alt="图 1"><br><img src="https://s2.loli.net/2023/11/06/e1sDSw2mzjnPOGX.webp" alt="图 2"> </p><h1 id="试览"><a href="#试览" class="headerlink" title="试览"></a>试览</h1><p><img src="https://s2.loli.net/2023/11/06/C3ZOpfoPdGl1gSX.jpg" alt="图 3"><br><img src="https://s2.loli.net/2023/11/06/Yyv1PV45kztUCNE.jpg" alt="图 4"><br><img src="https://s2.loli.net/2023/11/06/QRpmbxdhaknYrX1.jpg" alt="图 5"><br><img src="https://s2.loli.net/2023/11/06/Fs7ISecQpxjP5Mq.jpg" alt="图 6">  </p><h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><p>链接：<a href="https://pan.baidu.com/s/1QzD5DnSqSgibgzObthnVbQ">https://pan.baidu.com/s/1QzD5DnSqSgibgzObthnVbQ</a><br>提取码：enum<br>解压缩密码：akiccling<br>请下载后再解压</p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
      <tag>Books</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2007-2024 国内引进日本动画电影信息</title>
    <link href="/2023/10/24/animeMovieReToCN/"/>
    <url>/2023/10/24/animeMovieReToCN/</url>
    
    <content type="html"><![CDATA[<style>  .markdown-body {    font-size: 14px;  }</style><p>数据如有错误，请在评论区留言。<br><font color="#dd0000">浅红色</font>表示文章更新时间的当前票房，最终票房成绩未确定</p><h1 id="2024-年"><a href="#2024-年" class="headerlink" title="2024 年"></a>2024 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>你想活出怎样的人生</td><td><font color="#dd0000">7.90 亿</font></td><td>2024.04.03</td><td>日本吉卜力工作室</td><td>阿里影业</td><td>阿里影业</td></tr><tr><td>数码宝贝 02：最初的召唤</td><td><font color="#dd0000">1326.6 万</font></td><td>2024.04.20</td><td>日本东映动画株式会社</td><td>众合千澄</td><td>众合千澄</td></tr><tr><td>哈尔的移动城堡</td><td><font color="#dd0000">1.63 亿</font></td><td>2024.04.30</td><td>日本吉卜力工作室</td><td>听海拾贝</td><td>猫眼影业</td></tr><tr><td>间谍过家家 代号：白</td><td><font color="#dd0000">2.87 亿</font></td><td>2024.04.30</td><td>日本东宝株式会社</td><td>路画影视</td><td>路画影视</td></tr><tr><td>哆啦 A 梦：大雄的地球交响乐</td><td><font color="#dd0000">6610.2 万</font></td><td>2023.05.31</td><td>日本 SHIN-EI 动画株式会社</td><td>欧桦文化<br>华桦传媒</td><td>猫眼影业</td></tr><tr><td>排球少年！！垃圾场决战</td><td>已定档</td><td>2024.06.15</td><td>日本电通株式会社</td><td>路画影视</td><td>路画影视</td></tr><tr><td>机动战士高达 SEED FREEDOM</td><td>确认引进</td><td></td><td>日本万代南梦宫</td><td>华策影业</td><td>华策影业</td></tr><tr><td>名侦探柯南：百万美元的五棱星</td><td>确认引进</td><td></td><td>日本 TMS 娱乐<br>株式会社</td><td>欧桦文化</td><td>欧桦文化</td></tr><tr><td>通往夏天的隧道，离别的出口</td><td>确认引进</td><td></td><td>日本 CLAP 动画工作室</td><td>映林影视</td><td>映林影视</td></tr><tr><td>攻壳机动队</td><td>确认引进</td><td></td><td>株式会社讲谈社</td><td>华策影业</td><td>华策影业</td></tr><tr><td>转生成为了只有乙女游戏破灭结局的邪恶大小姐</td><td>确认引进</td><td></td><td>日本 SILVERLINK.株式会社</td><td>华策影业</td><td>华策影业</td></tr></tbody></table><h1 id="2023-年"><a href="#2023-年" class="headerlink" title="2023 年"></a>2023 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>龙珠超：超级人造人</td><td>1042 万</td><td>2023.01.06</td><td>日本东映动画株式会社</td><td>索尼影业</td><td>狮鼠影业</td></tr><tr><td>铃芽之旅</td><td>8.07 亿</td><td>2023.03.24</td><td>日本东宝株式会社</td><td>路画影视</td><td>路画+淘票票</td></tr><tr><td>名侦探柯南：贝克街的亡灵</td><td>5655.9 万</td><td>2023.04.04</td><td>日本株式会社 TMS 娱乐</td><td>欧桦文化+耀影电影+环鹰时代</td><td>联瑞影业+艺术联盟</td></tr><tr><td>平家物语：犬王</td><td>422.1 万</td><td>2023.04.07</td><td>日本阿斯米克·艾斯株式会社</td><td>欧桦文化+华夏聚德</td><td>华夏聚德</td></tr><tr><td>灌篮高手</td><td>6.6 亿</td><td>2023.04.20</td><td>日本东映动画株式会社</td><td>路画影视+中国电影</td><td>猫眼影业</td></tr><tr><td>刀剑神域进击篇：暮色黄昏</td><td>3293.8 万</td><td>2023.05.26</td><td>日本安尼普株式会社</td><td>众合千澄影业</td><td>众合千澄影业</td></tr><tr><td>天空之城</td><td>1.35 亿</td><td>2023.06.01</td><td>日本吉卜力工作室</td><td>听海拾贝+猫眼影业</td><td>猫眼影业</td></tr><tr><td>哆啦 A 梦：大雄与天空的理想乡</td><td>6.6 亿</td><td>2023.06.01</td><td>日本 SHIN-EI 动画株式会社</td><td>欧桦文化+华桦传媒+联瑞影业</td><td>淘票票</td></tr><tr><td>红猪</td><td>2316.3 万</td><td>2023.11.17</td><td>日本吉卜力工作室</td><td>路画影视</td><td>路画影视</td></tr><tr><td>蜡笔小新：新次元！超能力大决战</td><td>1.19 亿</td><td>2023.11.25</td><td>日本 SHIN-EI 动画株式会社</td><td>欧桦文化+华桦传媒</td><td>国影纵横</td></tr><tr><td>名侦探柯南：黑铁的鱼影</td><td>1.62 亿</td><td>2023.12.16</td><td>日本株式会社 TMS 娱乐</td><td>欧桦文化+华策影业+上狮文化</td><td>上狮文化</td></tr></tbody></table><h1 id="2022-年"><a href="#2022-年" class="headerlink" title="2022 年"></a>2022 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>名侦探柯南:万圣节的新娘</td><td>2.01 亿</td><td>2022.11.18</td><td>日本株式会社 TMS 娱乐</td><td>欧桦文化+华策影业+众合千澄</td><td>上狮文化</td></tr><tr><td>航海王:红发歌姬</td><td>1.85 亿</td><td>2022.12.01</td><td>东映动画</td><td>路画影视</td><td>路画+猫眼影业</td></tr><tr><td>哆啦 A 梦:大雄的宇宙小战争 2021</td><td>9918.0 万</td><td>2022.05.28</td><td>日本 SHIN-EI 动画株式会社</td><td>欧桦文化+凤仪娱乐+华桦传媒</td><td>淘票票</td></tr><tr><td>雀斑公主</td><td>1429.1 万</td><td>2022.08.26</td><td>日本地图工作室</td><td>路画影视</td><td>猫眼影业</td></tr><tr><td>妖怪手表 永远的朋友</td><td>82.7 万</td><td>2022.03.12</td><td>日本五星顶级株式会社</td><td>合源文化+橙欢映画</td><td>橙欢映画</td></tr><tr><td>龙马！新生网球王子</td><td>17.2 万</td><td>2022.12.23</td><td>日本 GAGA 电影公司</td><td></td><td>华夏电影</td></tr></tbody></table><h1 id="2021-年"><a href="#2021-年" class="headerlink" title="2021 年"></a>2021 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>哆啦 A 梦:伴我同行 2</td><td>2.77 亿</td><td>2021.05.28</td><td>日本 SHIN-EI 动画株式会社</td><td>欧桦文化+凤仪影业</td><td>淘票票</td></tr><tr><td>名侦探柯南:绯色的子弹</td><td>2.16 亿</td><td>2021.04.17</td><td>日本株式会社 TMS 娱乐</td><td>新创华+华策+众合千澄</td><td>华策</td></tr><tr><td>你好世界</td><td>1.36 亿</td><td>2021.06.11</td><td>日本东宝株式会社</td><td>路画影视</td><td>淘票票</td></tr><tr><td>宝可梦:皮卡丘和可可的冒险</td><td>5146.4 万</td><td>2021.09.10</td><td>宝可梦公司</td><td>众合千澄</td><td>众合千澄</td></tr><tr><td>普罗米亚</td><td>2014.1 万</td><td>2021.06.05</td><td>日本 XFLAG 工作室</td><td>永康映林影视</td><td>映林影视</td></tr><tr><td>温泉屋的小老板娘</td><td>893.6 万</td><td>2021.01.29</td><td>GAGA、DLE、MAD HOUSE</td><td>环鹰时代传媒</td><td>环鹰时代传媒</td></tr><tr><td>工作细胞:细胞大作战</td><td>760.3 万</td><td>2021.04.09</td><td>日本安尼普&#x2F;&#x2F;日本讲谈&#x2F;日本大卫动画</td><td>木棉花+华桦传媒</td><td>华桦传媒</td></tr><tr><td>乔西的虎与鱼</td><td>684.5 万</td><td>2021.08.20</td><td>日本松竹&#x2F;日本角川&#x2F;日本 bones</td><td>聚缘屹品</td><td>路凯达</td></tr></tbody></table><h1 id="2020-年"><a href="#2020-年" class="headerlink" title="2020 年"></a>2020 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>数码宝贝:最后的进化</td><td>1.25 亿</td><td>2020.10.30</td><td>东映动画</td><td>众合千澄影业</td><td>恒业影业</td></tr><tr><td>紫罗兰永恒花园外传</td><td>4848.3 万</td><td>2020.01.10</td><td>松竹株式会社</td><td>华策+1905 影业</td><td>创世星</td></tr><tr><td>海兽之子</td><td>1635.6 万</td><td>2020.11.20</td><td>超越都市&#x2F;中钲影业</td><td>众合千澄影业</td><td>恒业影业</td></tr><tr><td>未来的未来</td><td>998.9 万</td><td>2020.11.06</td><td>地图工作室</td><td>哔哩哔哩影业</td><td>昇格传媒</td></tr><tr><td>宝可梦：超梦的逆袭 进化</td><td>1613.9 万</td><td>2020.12.04</td><td>日本东宝株式会社</td><td>上海炫动</td><td>耀影电影</td></tr><tr><td>哆啦 A 梦：大雄的新恐龙</td><td>6474.3 万</td><td>2020.12.11</td><td>日本 SHIN-EI 动画株式会社</td><td>凤仪+横店影业</td><td>猫眼影业</td></tr><tr><td>崖上的波妞</td><td>2841 万</td><td>2020.12.31</td><td>日本吉卜力工作室</td><td>新创华+光线</td><td>光线影业</td></tr></tbody></table><h1 id="2019-年"><a href="#2019-年" class="headerlink" title="2019 年"></a>2019 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>千与千寻</td><td>4.88 亿</td><td>2019.06.21</td><td>东宝</td><td>新创华+光线</td><td>光线影业</td></tr><tr><td>天气之子</td><td>2.88 亿</td><td>2019.11.01</td><td>东宝</td><td>光线影业</td><td>光线影业</td></tr><tr><td>名侦探柯南：绀青之拳</td><td>2.31 亿</td><td>2019.09.13</td><td>东宝</td><td>新创华+华策</td><td>华策</td></tr><tr><td>航海王：狂热行动</td><td>2.04 亿</td><td>2019.10.18</td><td>东映</td><td>上海炫动</td><td>耀影电影</td></tr><tr><td>哆啦 A 梦：大雄的月球探险记</td><td>1.31 亿</td><td>2019.06.01</td><td>东宝</td><td>凤仪+横店影业</td><td>联瑞影业</td></tr><tr><td>夏目友人帐：缘结空蝉</td><td>1.15 亿</td><td>2019.03.07</td><td>ANIPLEX</td><td>光线影业</td><td>光线影业</td></tr><tr><td>我的英雄学院：两位英雄</td><td>3876.5 万</td><td>2019.03.15</td><td>东宝</td><td>凤仪+狮鼠影业</td><td>众合千澄影业</td></tr><tr><td>命运之夜——天之杯：恶兆之花</td><td>3168.4 万</td><td>2019.01.11</td><td>ANIPLEX</td><td>哔哩哔哩影业</td><td>众合千澄影业</td></tr><tr><td>龙珠超：布罗利</td><td>3164.7 万</td><td>2019.05.24</td><td>东映</td><td>双喜电影</td><td>博纳影业</td></tr><tr><td>命运之夜——天之杯 II ：迷失之蝶</td><td>2969.5 万</td><td>2019.07.12</td><td>ANIPLEX</td><td>哔哩哔哩影业</td><td>众合千澄影业</td></tr><tr><td>我想吃掉你的胰脏</td><td>2390.4 万</td><td>2019.01.18</td><td>ANIPLEX</td><td>聚缘屹品</td><td>聚合影联</td></tr><tr><td>朝花夕誓：于离别之朝束起约定之花</td><td>1724.5 万</td><td>2019.02.22</td><td>SHOWGATE</td><td>华策影业</td><td>华策影业</td></tr><tr><td>游戏人生 零</td><td>1395 万</td><td>2019.07.19</td><td>角川 ANIMATION</td><td>众合千澄影业</td><td>耀影电影</td></tr><tr><td>若能与你共乘海浪之上</td><td>1396.1 万</td><td>2019.12.07</td><td>东宝</td><td>聚缘屹品+联瑞影业</td><td>联瑞影业</td></tr><tr><td>机动战士高达 NT</td><td>870.7 万</td><td>2019.07.12</td><td>松竹株式公社</td><td>少年派影业+爱奇艺影业</td><td>少年派影业</td></tr><tr><td>企鹅公路</td><td>334.3 万</td><td>2019.05.17</td><td>东宝</td><td>完美世界影视</td><td>完美世界影视</td></tr><tr><td>魔神 Z</td><td>40.8 万</td><td>2019.03.08</td><td>东映</td><td>上海炫动</td><td>上海炫动</td></tr></tbody></table><h1 id="2018-年"><a href="#2018-年" class="headerlink" title="2018 年"></a>2018 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>玛丽与魔女之花</td><td>2062.2 万</td><td>2018.04.28</td><td>日本普乐卡工作室</td><td></td><td>华策影业</td></tr><tr><td>哆啦 A 梦：大雄的金银岛</td><td>2.09 亿</td><td>2018.06.01</td><td>日本 SHIN-EI 动画株式会社</td><td>凤仪影业</td><td></td></tr><tr><td>黑子的篮球·终极一战</td><td>679.1 万</td><td>2018.08.24</td><td>松竹株式会社</td><td>博纳影业</td><td>博纳影业</td></tr><tr><td>哥斯拉：怪兽行星</td><td>161.5 万</td><td>2018.09.21</td><td>日本东宝株式会社</td><td>聚缘屹品</td><td>路凯达</td></tr><tr><td>名侦探柯南：零的执行人</td><td>1.27 亿</td><td>2018.11.09</td><td>日本东宝株式会社</td><td>新创华+华策</td><td>华策</td></tr><tr><td>龙猫</td><td>1.73 亿</td><td>2018.12.14</td><td>日本吉卜力工作室</td><td>新创华</td><td>华影天下</td></tr></tbody></table><h1 id="2017-年"><a href="#2017-年" class="headerlink" title="2017 年"></a>2017 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>最终幻想 15：王者之剑</td><td>2872.5 万</td><td>2017.03.10</td><td>日本株式会社史克威尔艾尼克斯公司</td><td>SMG 尚世影业</td><td>海秀传媒</td></tr><tr><td>哆啦 A 梦：大雄的南极冰冰凉大冒险</td><td>1.48 亿</td><td>2017.05.30</td><td>日本 SHIN-EI 动画株式会社</td><td>凤仪影业</td><td></td></tr><tr><td>声之形</td><td>4453.9 万</td><td>2017.09.08</td><td>松竹株式会社</td><td>聚缘屹品+微影时代</td><td></td></tr><tr><td>刀剑神域：序列之争</td><td>5394.6 万</td><td>2017.09.15</td><td>ANIPLEX</td><td>北京次元矩阵</td><td>聚禾影画+众合千澄</td></tr><tr><td>精灵宝可梦：波尔凯尼恩与机巧的玛机雅娜</td><td>2565.2 万</td><td>2017.11.11</td><td>日本精灵宝可梦株式会社</td><td>阿里影业</td><td>卓然影业</td></tr><tr><td>烟花</td><td>7866.5 万</td><td>2017.12.01</td><td>东宝</td><td>光线影业</td><td>光线影业</td></tr></tbody></table><h1 id="2016-年"><a href="#2016-年" class="headerlink" title="2016 年"></a>2016 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>火影忍者剧场版：博人传</td><td>1.03 亿</td><td>2016.02.18</td><td>日本东京电视台株式会社</td><td>星乐伟业</td><td>星乐伟业</td></tr><tr><td>圣斗士星矢：圣域传说</td><td>3778.8 万</td><td>2016.02.26</td><td>日本东映动画株式会社</td><td>阿里影业+上海炫动</td><td>卓然影业</td></tr><tr><td>哆啦 A 梦：新·大雄的日本诞生</td><td>1.03 亿</td><td>2016.07.22</td><td>日本东宝株式会社</td><td>凤仪影业</td><td></td></tr><tr><td>樱桃小丸子：来自意大利的少年</td><td>2584 万</td><td>2016.09.23</td><td>日本东宝株式会社</td><td>新创华</td><td>爱奇艺影业</td></tr><tr><td>龙珠 Z：复活的弗利萨</td><td>1098.4 万</td><td>2016.10.21</td><td>日本东映动画株式会社</td><td>中影动画</td><td>东阳天天尚映</td></tr><tr><td>蜡笔小新：梦境世界大突击</td><td>2242.5 万</td><td>2016.11.04</td><td>日本 SHIN-EI 动画株式会社</td><td>凤仪影业</td><td>合瑞影业</td></tr><tr><td>航海王之黄金城</td><td>1.07 亿</td><td>2016.11.11</td><td>日本东映动画株式会社</td><td>上海炫动</td><td>枫海影业</td></tr><tr><td>名侦探柯南：纯黑的恶梦</td><td>3103.5 万</td><td>2016.11.25</td><td>日本东宝株式会社</td><td>新创华+世像传媒</td><td>聚合影联</td></tr><tr><td>你的名字。</td><td>5.75 亿</td><td>2016.12.02</td><td>日本东宝株式会社</td><td>通耀+光线影业</td><td>光线影业</td></tr></tbody></table><h1 id="2015-年"><a href="#2015-年" class="headerlink" title="2015 年"></a>2015 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>哆啦 A 梦：伴我同行</td><td>5.29 亿</td><td>2015.05.28</td><td>日本东宝株式会社</td><td>凤仪影业</td><td>联瑞影业</td></tr><tr><td>名侦探柯南：业火的向日葵</td><td>8143.9 万</td><td>2015.10.23</td><td>日本东宝株式会社</td><td>聚缘屹品+乐在其中</td><td>路凯达</td></tr></tbody></table><h1 id="2014-年和-2013-年-无"><a href="#2014-年和-2013-年-无" class="headerlink" title="2014 年和 2013 年 无"></a>2014 年和 2013 年 无</h1><h1 id="2012-年"><a href="#2012-年" class="headerlink" title="2012 年"></a>2012 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>超决战！贝利亚银河帝国</td><td>1953.9 万</td><td>2012.07.12</td><td>圆谷株氏会社</td><td>新创华</td><td>星乐伟业</td></tr></tbody></table><h1 id="2011-年"><a href="#2011-年" class="headerlink" title="2011 年"></a>2011 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>名侦探柯南：沉默的十五分钟</td><td>2684.1 万</td><td>2011.11.04</td><td>日本东宝株式会社</td><td>上海视映+上海炫动</td><td>上海炫动</td></tr><tr><td>宇宙英雄之超银河传说</td><td>2894.6 万</td><td>2011.05.13</td><td>圆谷株氏会社</td><td>新创华</td><td></td></tr></tbody></table><h1 id="2010-年"><a href="#2010-年" class="headerlink" title="2010 年"></a>2010 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>名侦探柯南：漆黑的追踪者</td><td>937.9 万</td><td>2010.01.14</td><td>日本东宝株式会社</td><td>基美影业</td><td>基美影业</td></tr></tbody></table><h1 id="2009-年"><a href="#2009-年" class="headerlink" title="2009 年"></a>2009 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>哆啦 A 梦：大雄与绿巨人传</td><td>590 万</td><td>2009.08.04</td><td>日本东宝株式会社</td><td>年恩长影</td><td>星美影业</td></tr></tbody></table><h1 id="2008-年"><a href="#2008-年" class="headerlink" title="2008 年"></a>2008 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>哆啦 A 梦：大雄的新魔界大冒险之 7 个魔法师</td><td>163.1 万</td><td>2008.01.22</td><td>日本东宝株式会社</td><td>年恩长影</td><td>新影联影业</td></tr></tbody></table><h1 id="2007-年"><a href="#2007-年" class="headerlink" title="2007 年"></a>2007 年</h1><table><thead><tr><th>片名</th><th>累计票房</th><th>上映日期</th><th>出品方</th><th>引进方</th><th>发行方</th></tr></thead><tbody><tr><td>哆啦 A 梦：大雄的恐龙</td><td>2170 万</td><td>2007.07.20</td><td>日本东宝株式会社</td><td>年恩长影</td><td>新影联影业</td></tr></tbody></table><blockquote><p>数据来源：<br><a href="https://www.douban.com/doulist/44033623">https://www.douban.com/doulist/44033623</a> <a href="https://www.douban.com/doulist/140289864">https://www.douban.com/doulist/140289864</a><br>票房数据及发行方：猫眼专业版</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>上海 ACGN 地点游玩推荐/攻略</title>
    <link href="/2023/10/09/OutlineACGN/ShangHaiACGNArea/"/>
    <url>/2023/10/09/OutlineACGN/ShangHaiACGNArea/</url>
    
    <content type="html"><![CDATA[<p>2024-5-6 16:34:11 注释：文章正在逐渐重构，由单一的商场介绍 - &gt; 按照其地理位置进行区域分划</p><p>文章内推荐的地方大部分都是长期固定的地点，但ACG相关IP时不时会在上海开展联名或者主题活动。<br>一些联动或者快闪具有时效性，所以没有具体的推荐地点，但我会把该地曾经的一些限时活动列举出来（有些地方会不断与不同IP进行联动）。</p><h1 id="南京路步行街"><a href="#南京路步行街" class="headerlink" title="南京路步行街"></a>南京路步行街</h1><p>大概位置如图所示：</p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/PeopleSquareANDNJRoad.png?imageSlim" width=70%><h2 id="人民广场附近"><a href="#人民广场附近" class="headerlink" title="人民广场附近"></a>人民广场附近</h2><h3 id="1-迪美购物中心"><a href="#1-迪美购物中心" class="headerlink" title="1. 迪美购物中心"></a>1. 迪美购物中心</h3><p><span>位于：<br><img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right2lineicon.png"> <img src="https://service.shmetro.com/skin/images/right8lineicon.png"> 人民广场 - 1 号口 需穿过地下通道不行约 800 m<br><img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right14lineicon.png">  一大会址·黄陂南路 - 5 号口 出地铁站后还需步行约 700 m</span></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E8%BF%AA%E7%BE%8E%E5%9C%B0%E4%B8%8B%E5%85%A5%E5%8F%A3.webp?imageSlim" alt="迪美地下入口">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/COMIC%20SOUL.webp?imageSlim" alt="COMIC SOUL">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E8%BF%AA%E7%BE%8E%E5%86%85%E9%83%A8%20%E6%8B%8D%E6%91%84%E4%BA%8E2023.7.24.webp?imageSlim" alt="迪美内部 拍摄于2023.7.24">  </p><h3 id="2-新世界城"><a href="#2-新世界城" class="headerlink" title="2. 新世界城"></a>2. 新世界城</h3><p><span>位于：<img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right2lineicon.png"> <img src="https://service.shmetro.com/skin/images/right8lineicon.png"> 人民广场 - 7 号口附近在地下可直达商场内部</span></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(3).webp?imageSlim" alt="新世界城楼层导览"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(2).webp?imageSlim" alt="漫魂 COMIC SOUL"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(4).webp?imageSlim" alt="KT 光荣特库摩中心">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(5).webp?imageSlim" alt="CAPCOM 卡普空">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(6).webp?imageSlim" alt="Bilibili Goods 新世界城"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(7).webp?imageSlim" alt="LCH"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(8).webp?imageSlim" alt="IPSTAR|潮玩星球 新世界城主题店">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(9).webp?imageSlim" alt="IPSTAR|潮玩星球 新世界城周边店">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(10).webp?imageSlim" alt="转角的周边店">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(11).webp?imageSlim" alt="周边店 moe island">  </p><h3 id="3-第一百货商业街"><a href="#3-第一百货商业街" class="headerlink" title="3. 第一百货商业街"></a>3. 第一百货商业街</h3><p><span>位于：<img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right2lineicon.png"> <img src="https://service.shmetro.com/skin/images/right8lineicon.png"> 人民广场 - 19 号口 出站后穿过马路</span></p><p>周边价格贵一些，但是同人谷很多</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(12).jpg?imageSlim" alt="萌樱 Good Shop"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(13).jpg?imageSlim" alt="多摩万事屋">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(14).jpg?imageSlim" alt="XW model">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(15).jpg?imageSlim" alt="谷店Time">  </p><h3 id="4-百米香榭商业街"><a href="#4-百米香榭商业街" class="headerlink" title="4. 百米香榭商业街"></a>4. 百米香榭商业街</h3><p><span>位于：<img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right2lineicon.png"> <img src="https://service.shmetro.com/skin/images/right8lineicon.png"> 人民广场 - 14 号口 出站后向西 广西北路252号</span></p><p>我个人不是很推荐，但是也有一些小伙伴说这里也挺值得逛的。主要是里面的店太杂了，环境比较差，不值得专门去，如果在人民广场或者南京路可以路过看一下。</p><p>1F是一些模玩店，2F大部分都是集换式卡牌店</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E7%99%BE%E7%B1%B3%E9%A6%99%E6%A6%AD%E5%95%86%E4%B8%9A%E8%A1%97.webp?imageSlim" alt="百米香榭商业街">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E5%86%85%E9%83%A8.webp?imageSlim" alt="百米香榭商业街 内部">  </p><h2 id="南京东路附近"><a href="#南京东路附近" class="headerlink" title="南京东路附近"></a>南京东路附近</h2><h3 id="1-百联ZX创趣场"><a href="#1-百联ZX创趣场" class="headerlink" title="1. 百联ZX创趣场"></a>1. 百联ZX创趣场</h3><p><span>位于：<img src="https://service.shmetro.com/skin/images/right2lineicon.png"> 南京东路 - 1 号口</span></p><p>万代魂（南京路步行街），最近Animate也搬到了这里</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E7%99%BE%E8%81%94ZX%E5%88%9B%E8%B6%A3%E5%9C%BA%20%E6%8B%8D%E6%91%84%E4%BA%8E2023.12.29.webp?imageSlim" alt="百联ZX创趣场 拍摄于2023.12.29">  </p><p>里面的店铺很多 围成一个正方形，每一层顺着浏览完就可以上楼了</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E7%99%BE%E8%81%94ZX%E5%BA%97%E9%93%BA%E4%B8%80%E8%A7%88%20%E6%8B%8D%E6%91%84%E4%BA%8E2023.5.3.webp?imageSlim" alt="百联ZX店铺一览 拍摄于2023.5.3">  </p><p>周边价格也不是太离谱，官方周边有不少价格与网上相同，但是会有不同店不同价的情况</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/Animate%20%E6%8B%8D%E6%91%84%E4%BA%8E2023.12.29.webp?imageSlim" alt="Animate 拍摄于2023.12.29">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/DLsite.webp?imageSlim" alt="DLsite">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/Bilibili%20Goods.webp?imageSlim" alt="Bilibili Goods">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%97%B6%E4%B8%8D%E6%97%B6%E7%9A%84cafe%E8%81%94%E5%8A%A8.webp?imageSlim" alt="时不时的cafe联动">  </p><h3 id="2-外文书店"><a href="#2-外文书店" class="headerlink" title="2. 外文书店"></a>2. 外文书店</h3><p><span>位于：<img src="https://service.shmetro.com/skin/images/right2lineicon.png"> 南京东路 - 4 号口 黄浦区福州路390号<br>去的时候注意时间（10:00-18:30）</span></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/4F.webp?imageSlim" alt="外文书店 4F">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E9%99%A4%E4%BA%86%E6%97%A5%E6%96%87%E5%8E%9F%E7%89%88%E4%B9%A6%E7%B1%8D%EF%BC%8C%E4%B9%9F%E4%BC%9A%E6%9C%89%E5%A4%A9%E9%97%BB%E8%A7%92%E5%B7%9D%E5%BC%95%E8%BF%9B%E7%9A%84%E5%9B%BD%E5%86%85%E7%89%88.webp?imageSlim" alt="除了日文原版书籍，也会有天闻角川引进的国内版">  </p><p>会有当季的新番书籍 </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E8%91%AC%E9%80%81%E7%9A%84%E8%8A%99%E8%8E%89%E8%8E%B2%20%E6%8B%8D%E6%91%84%E4%BA%8E2023.12.29.webp?imageSlim" alt="葬送的芙莉莲 拍摄于2023.12.29">  </p><h3 id="3-上海书城（福州路店）"><a href="#3-上海书城（福州路店）" class="headerlink" title="3. 上海书城（福州路店）"></a>3. 上海书城（福州路店）</h3><p><span>位于：<img src="https://service.shmetro.com/skin/images/right2lineicon.png"> 南京东路 - 4 号口 黄浦区福州路465号</span></p><p>进了书城后直上二楼，有一块区域有许多轻小说，包括宫崎骏的一些电影的绘本<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%95%B4%E4%BD%93%E5%8C%BA%E5%9F%9F.webp?imageSlim" alt="整体区域 2F"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E5%93%88%E5%B0%94%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%9F%8E%E5%A0%A1.webp?imageSlim" alt="哈尔的移动城堡">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/Fate%20%E7%B3%BB%E5%88%97.webp?imageSlim" alt="Fate 系列"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/86%20%E2%80%95%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%88%98%E5%8C%BA%E2%80%95.webp?imageSlim" alt="86 ―不存在的战区―"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/Re%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%BC%82%E4%B8%96%E7%95%8C%E7%94%9F%E6%B4%BB.webp?imageSlim" alt="Re：从零开始的异世界生活"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%96%87%E8%B1%AA%E9%87%8E%E7%8A%AC.webp?imageSlim" alt="文豪野犬"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%80%95%E7%97%9B%E7%9A%84%E6%88%91%2C%E6%8A%8A%E9%98%B2%E5%BE%A1%E5%8A%9B%E7%82%B9%E6%BB%A1%E5%B0%B1%E5%AF%B9%E4%BA%86.webp?imageSlim" alt="怕痛的我,把防御力点满就对了"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E5%88%80%E5%89%91%E7%A5%9E%E5%9F%9F%20%E7%B3%BB%E5%88%97.webp?imageSlim" alt="刀剑神域 系列"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%80%E4%BA%9B%E5%8E%9F%E7%94%BB%E9%9B%86%E3%80%81%E8%AE%BE%E5%AE%9A%E9%9B%86.webp?imageSlim" alt="一些原画集、设定集">  </p><p>5F单独有一家店<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(16).webp?imageSlim" alt="现代书店 BOOCUP"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(17).webp?imageSlim" alt="一些ACG书籍">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(18).webp?imageSlim" alt="一些日本画师的画集">  </p><p>楼层内有一些零星的二次元书籍<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(19).webp?imageSlim" alt="零星的二次元书籍">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E5%8E%9F%E7%A5%9E%E3%80%81%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%81%E5%91%BD%E8%BF%90%E7%9F%B3%E4%B9%8B%E9%97%A8%E8%89%BA%E6%9C%AF%E9%9B%86.webp?imageSlim" alt="原神、明日方舟、命运石之门艺术集"> </p><p>6F的MORFAN店里有一些黑胶和CD：</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/MORFAN.webp?imageSlim" alt="MORFAN">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E9%BB%91%E8%83%B6.webp?imageSlim" alt="黑胶">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/CD.webp?imageSlim" alt="CD"> </p><h1 id="徐家汇商圈"><a href="#徐家汇商圈" class="headerlink" title="徐家汇商圈"></a>徐家汇商圈</h1><h2 id="美罗城"><a href="#美罗城" class="headerlink" title="美罗城"></a>美罗城</h2><p><span>位于：<img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right9lineicon.png"> <img src="https://service.shmetro.com/skin/images/right11lineicon.png"> 徐家汇 - 10 号口</span></p><p>三月兽 (B1)<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%89%E6%9C%88%E5%85%BD.webp?imageSlim" alt="三月兽 B1">  </p><p>Bilibili Goods (B1)<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/Bilibili%20Goods%20(2).webp?imageSlim" alt="Bilibili Goods 美罗城店">  </p><p>JUMP SHOP (1F)<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/JUMP%20SHOP.webp?imageSlim" alt="JUMP SHOP">  </p><p>吉卜力工作室授权店 (1F)</p><p>可以去逛逛，但里面东西的价格很梦幻，不建议购买</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E5%90%89%E5%8D%9C%E5%8A%9B%E5%B7%A5%E4%BD%9C%E5%AE%A4%E6%8E%88%E6%9D%83%E5%BA%97%E9%97%A8%E5%8F%A3.webp?imageSlim" alt="吉卜力工作室授权店门口">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%8E%88%E6%9D%83%E5%BA%97%E5%95%86%E5%93%81.webp?imageSlim" alt="吉卜力工作室授权店商品">  </p><p>GoodSmile (2F)</p><p>手办厂，一些热门的大货都能看到，价格肯定不如网上，但可以看到实物<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/GoodSmile.webp?imageSlim" alt="GoodSmile">  </p><p>IP联动：(通常在5F，之前举办过明日方舟和碧蓝航线展)<br><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E7%A2%A7%E8%93%9D%E8%88%AA%E7%BA%BF%20%E5%86%AC%E6%97%A5%E5%A5%87%E6%97%85%E5%B1%95%20%E6%8B%8D%E6%91%84%E4%BA%8E2023%E5%B9%B412%E6%9C%8830%E6%97%A5%20%E7%BE%8E%E7%BD%97%E5%9F%8E5F.webp?imageSlim" alt="碧蓝航线 冬日奇旅展 拍摄于2023年12月30日 美罗城5F">  </p><h2 id="TPY-（完善中）"><a href="#TPY-（完善中）" class="headerlink" title="TPY （完善中）"></a>TPY （完善中）</h2><span>位于：<img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right9lineicon.png"> <img src="https://service.shmetro.com/skin/images/right11lineicon.png"> 徐家汇 - 10 号口 美罗城旁边的商场 B2 层</span><h2 id="天天玩X秋葉原日系动漫中心"><a href="#天天玩X秋葉原日系动漫中心" class="headerlink" title="天天玩X秋葉原日系动漫中心"></a>天天玩X秋葉原日系动漫中心</h2><p><span>位于：<img src="https://service.shmetro.com/skin/images/right1lineicon.png"> <img src="https://service.shmetro.com/skin/images/right9lineicon.png"> <img src="https://service.shmetro.com/skin/images/right11lineicon.png"> 徐家汇 - 16 号口 出站向北 汇银广场南楼 7M 层</span></p><p>街机很多，jubeat、太鼓达人、头文字D、GTDR、湾岸5DX+、湾岸3DX+、头文字D、maimai DX、SOUND VOLTEX等</p><p>具体参考：<a href="https://map.bemanicn.com/shop/262">https://map.bemanicn.com/shop/262</a></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(20).webp?imageSlim" alt="头文字D">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(21).webp?imageSlim" alt="湾岸5DX+"> </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(22).webp?imageSlim" alt="Jubeat">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%B8%8A%E6%B5%B7%20ACGN%20%E5%9C%B0%E7%82%B9%E6%B8%B8%E7%8E%A9%E6%8E%A8%E8%8D%90%E6%94%BB%E7%95%A5%20-%20Secret%20Garden%20(23).webp?imageSlim" alt="头文字D8">  </p><h1 id="静安大悦城"><a href="#静安大悦城" class="headerlink" title="静安大悦城"></a>静安大悦城</h1><p><span>位于：<img src="https://service.shmetro.com/skin/images/right8lineicon.png"> <img src="https://service.shmetro.com/skin/images/right12lineicon.png"> 曲阜路 - 1 号口</span></p><p>主要的店都在3F、6F、8F（时间充足的话可以把这三层都逛一遍）</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/animate%20cafe.webp?imageSlim" alt="animate cafe">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%91%A9%E5%A4%9A%E6%91%A9%E5%A4%9A.webp?imageSlim" alt="摩多摩多">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/IPSTAR%20%20%E6%BD%AE%E7%8E%A9%E6%98%9F%E7%90%83%E8%81%94%E5%8A%A8%E5%BA%97.webp?imageSlim" alt="IPSTAR | 潮玩星球联动店">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/IPSTAR%20%20%E6%BD%AE%E7%8E%A9%E6%98%9F%E7%90%83%E5%91%A8%E8%BE%B9%E5%BA%97.webp?imageSlim" alt="IPSTAR | 潮玩星球周边店">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/Loft%20%E4%BC%9A%E6%9C%89%E9%83%A8%E5%88%86%E4%BA%8C%E6%AC%A1%E5%85%83%E5%95%86%E5%93%81.webp?imageSlim" alt="Loft 会有部分二次元商品">  </p><p>没有固定的IP，但是像IPSTAR | 潮玩星球(静安大悦城北座N607)、Animate cafe(静安大悦城北座N809-2)会经常与不同的IP联动：</p><p>2023.12.13 - 2024.01.16 「孤独摇滚！ × animate cafe」in animate cafe<br><a href="https://mp.weixin.qq.com/s/LeYRJcAj1emDZknksYrvHQ">https://mp.weixin.qq.com/s/LeYRJcAj1emDZknksYrvHQ</a></p><p>2023.12.06 - 2024.01.24 「咒术回战 怀玉·玉折篇 × animate cafe」<br><a href="https://mp.weixin.qq.com/s/7HXRb1n9GxPZHNo6zqHf8w">https://mp.weixin.qq.com/s/7HXRb1n9GxPZHNo6zqHf8w</a></p><p>有时还会有快闪店：<br>2023.08.04 SPY×FAMILY 间谍过家家限定快闪店</p><p>最新的联动信息请关注微信公众号「上海静安大悦城」</p><h1 id="单独的一些地方"><a href="#单独的一些地方" class="headerlink" title="单独的一些地方"></a>单独的一些地方</h1><h2 id="1-Lalaport-自由高达-GUNDAM-BASE"><a href="#1-Lalaport-自由高达-GUNDAM-BASE" class="headerlink" title="1. Lalaport ( 自由高达 &amp; GUNDAM BASE )"></a>1. Lalaport ( 自由高达 &amp; GUNDAM BASE )</h2><p><span>位于：<img src="https://service.shmetro.com/skin/images/right9lineicon.png"> 台儿庄路 - 2 号口 出站后需步行约 1.1 公里</span></p><p>晚上外面的高达会有表演，可以动起来，商场里还有一整个高达的店</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E9%9B%BE%E4%B8%AD%E9%AB%98%E8%BE%BE%20%E6%8B%8D%E6%91%84%E4%BA%8E2023%E5%B9%B412%E6%9C%8829%E6%97%A5.webp?imageSlim" alt="雾中高达 拍摄于2023年12月29日">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E5%8F%AF%E4%BB%A5%E5%8A%A8%E7%9A%84%E9%AB%98%E8%BE%BE.webp?imageSlim" alt="可以动的高达">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/THE%20GUNDAM%20BASE.webp?imageSlim" alt="THE GUNDAM BASE"></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/apsule%20park%20%E6%AD%A3%E5%AF%B9%E7%9D%80%E9%AB%98%E8%BE%BE%E5%BA%97.webp?imageSlim" alt="apsule park 正对着高达店">  </p><h2 id="2-现代书店Boocup（静安嘉里中心）"><a href="#2-现代书店Boocup（静安嘉里中心）" class="headerlink" title="2. 现代书店Boocup（静安嘉里中心）"></a>2. 现代书店Boocup（静安嘉里中心）</h2><p><span>位于：<img src="https://service.shmetro.com/skin/images/right2lineicon.png"> <img src="https://service.shmetro.com/skin/images/right7lineicon.png"> <img src="https://service.shmetro.com/skin/images/right14lineicon.png"> 静安寺 - 6 号口 静安嘉里中心北区4楼</span></p><p>杂志（Fami通、Type-Moon）、轻小说、画集都有，但是价格太贵了</p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E7%8E%B0%E4%BB%A3%E4%B9%A6%E5%BA%97%E9%97%A8%E5%8F%A3.webp?imageSlim" alt="现代书店门口">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%9D%82%E5%BF%97.webp?imageSlim" alt="杂志">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E6%88%91%E6%8E%A8%E7%9A%84%E5%AD%A9%E5%AD%90.webp?imageSlim" alt="我推的孩子">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E8%BD%BB%E5%B0%8F%E8%AF%B4.webp?imageSlim" alt="轻小说 现代书店">  </p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E8%BD%BB%E5%B0%8F%E8%AF%B4%E4%BB%B7%E6%A0%BC.webp?imageSlim" alt="轻小说价格 现代书店">  </p><h2 id="3-街机烈火"><a href="#3-街机烈火" class="headerlink" title="3. 街机烈火"></a>3. 街机烈火</h2><p><span>位于：<img src="https://service.shmetro.com/skin/images/right2lineicon.png"> <img src="https://service.shmetro.com/skin/images/right12lineicon.png"> <img src="https://service.shmetro.com/skin/images/right13lineicon.png"> 南京西路 - 1 号口 出站后步行约 400 m 江宁路77恒顺大楼4层</span></p><p>主要以街机为主(有很多传统街机摇杆机台)，也有很多音游(比如maimai DX、SOUND VOLTEX、jubeat、太鼓达人、GTDR等)，音游区有很多人，可能需要排队；<br>店内具体参考：<a href="https://map.bemanicn.com/shop/1">https://map.bemanicn.com/shop/1</a></p><p><img src="https://blogimage-1258650140.cos.ap-nanjing.myqcloud.com/blog/%E4%BC%A0%E7%BB%9F%E8%A1%97%E6%9C%BA.png?imageSlim" alt="传统街机">  </p><h1 id="待更新"><a href="#待更新" class="headerlink" title="待更新"></a>待更新</h1><h2 id="高达基地（等待更新）"><a href="#高达基地（等待更新）" class="headerlink" title="高达基地（等待更新）"></a>高达基地（等待更新）</h2><p>地址：上海市浦东新区陆家嘴西路168号正大广场F5</p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的ACGN周边收藏</title>
    <link href="/2023/10/08/ACGN/MyACGNCollection/"/>
    <url>/2023/10/08/ACGN/MyACGNCollection/</url>
    
    <content type="html"><![CDATA[<h1 id="同人本、画集、设定集"><a href="#同人本、画集、设定集" class="headerlink" title="同人本、画集、设定集"></a>同人本、画集、设定集</h1><p>个人比较喜欢的画师 <del>(xp)</del> : (顺序不分先后)</p><table><thead><tr><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>Anmi</td><td>しらたま</td><td>WERI</td><td>花久花酒</td><td>Roha</td></tr><tr><td>flourish (アシマ)</td><td>三つ葉ちょこ</td><td>宮坂みゆ</td><td>あさひクロイ</td><td>飴玉コン</td></tr><tr><td>Rin☆Yuu (リン☆ユウ)</td><td>光崎</td><td>天夢(てんむ)森流彩</td><td>天祈Eric</td><td>阿戈魔AGM</td></tr><tr><td>Rurudo</td><td>ASK</td><td>神岡ちろる (Chirol Kamioka)</td><td>狗脸脸dogface</td><td>QuAn</td></tr><tr><td>Tinkle {てぃんくる}</td><td>gomzi</td><td>絆</td><td>Hiten</td><td>館田ダン</td></tr><tr><td>Twinbox</td><td>エキナ</td><td>かがちさく</td><td>鬼针草</td><td>Aibek</td></tr><tr><td>torino</td><td>胡麻乃りお</td><td>遠坂あさぎ (Toosaka Asagi)</td><td>么赖赖</td><td>りいちゅ</td></tr><tr><td>ももこ (Momoco)</td><td>るかこ (rucaco)</td><td>うにいくら</td><td>しおの</td><td>米白粕</td></tr><tr><td>宮瀬まひろ (Miyase Mahiro)</td><td>ゆゆこ</td><td>みわべさくら</td><td>美和野らぐ</td><td>ATDAN-</td></tr><tr><td>館川まこ (Tatekawa Mako)</td><td>望月しいな (Motiduki Siina)</td><td>Rella</td><td>kieed</td><td>铭音MeIoN</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/10/08/hHVQtL5Jz8mAdyB.webp" alt="图 0"><br><img src="https://s2.loli.net/2023/10/08/o1jpLvd2ZtJeWrP.webp" alt="图 1">  </p><h1 id="CD、BD"><a href="#CD、BD" class="headerlink" title="CD、BD"></a>CD、BD</h1><p>主要都是fripSide的专辑<br><img src="https://s2.loli.net/2023/10/08/kN59rw2eBstx6Lu.webp" alt="图 2">  </p><h1 id="色纸、徽章、立牌等"><a href="#色纸、徽章、立牌等" class="headerlink" title="色纸、徽章、立牌等"></a>色纸、徽章、立牌等</h1><p><img src="https://s2.loli.net/2023/10/08/qch69WnSeHKoabD.webp" alt="图 3">  </p>]]></content>
    
    
    <categories>
      
      <category>ACGN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACGN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Minecraft服务器开服教程</title>
    <link href="/2023/10/06/MinecraftServerBuild/"/>
    <url>/2023/10/06/MinecraftServerBuild/</url>
    
    <content type="html"><![CDATA[<h1 id="Minecraft服务器开服教程"><a href="#Minecraft服务器开服教程" class="headerlink" title="Minecraft服务器开服教程"></a>Minecraft服务器开服教程</h1><blockquote><p>在搭建服务器之前，需要准备：</p><p>1、云服务器（CentOS 7.8 64bit，其它Linux发行版仅供参考）</p><p>2、PuTTY（用于远程登录云服务器，下载官网：<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html%EF%BC%89">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html）</a></p><p>3、WinSCP（用于上传相关文件，下载官网：<a href="https://winscp.net/eng/download.php%EF%BC%89">https://winscp.net/eng/download.php）</a></p></blockquote><h2 id="一、确定Minecraft服务器版本以及Java版本"><a href="#一、确定Minecraft服务器版本以及Java版本" class="headerlink" title="一、确定Minecraft服务器版本以及Java版本"></a>一、确定Minecraft服务器版本以及Java版本</h2><blockquote><p><a href="https://mcversions.net/">https://mcversions.net/</a></p></blockquote><p>进入网站后，在最左侧的Stable Releases选择你要安装的版本号，若不确定请选择Latest Release，点击版本号右侧的下载（Download），再点击Download Server jar，即可下载Minecraft服务器文件</p><p>1.17版本及以后已经不再支持 Java 8（其实之前的版本已经在兼容高于 8 的 Java）。显然我们需要新版的 Java，我在开服时遇到了此问题，但查阅了许多开服教程都没有提及，都是写安装Java 8，可能是因为教程相隔时间比较长了，未进行更新。</p><blockquote><p>…has been compiled by a more recent version of the Java Runtime (class file version 60.0), this version of the Java Runtime only recognizes class file versions up to 52.0</p></blockquote><p>若你使用1.17及以上版本的Minecraft并安装了1.8.0的openjdk，则很有可能在进行下一步操作时会出现以上提示，请参考下面这篇文章卸载并重新安装jdk</p><blockquote><p><a href="https://www.cnblogs.com/javabg/p/10332993.html">https://www.cnblogs.com/javabg/p/10332993.html</a></p></blockquote><h2 id="二、开启服务器端口"><a href="#二、开启服务器端口" class="headerlink" title="二、开启服务器端口"></a>二、开启服务器端口</h2><blockquote><p>由于每个人的云服务器商都不同，这里以腾讯云为例</p></blockquote><p>在腾讯云控制台实例的防火墙中添加规则：(端口号填Minecraft默认的25565，后面可修改)</p><p><img src="https://s2.loli.net/2023/10/07/NEjkeF1hWwaQpCX.png" alt="图 1">  </p><p>通过PuTTY连接主机，并输入以下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --add-port=25565/tcp --permanent<br>firewall-cmd --zone=public --add-port=25565/udp --permanent<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><h2 id="三、上传服务器文件"><a href="#三、上传服务器文件" class="headerlink" title="三、上传服务器文件"></a>三、上传服务器文件</h2><p>打开WinSCP，通过主机IP地址并输入用户名和口令进行连接，在右侧的文件目录中（如&#x2F;tmp&#x2F;minecraft）将server.jar拖进去上传到服务器中（此时目录中只有server.jar这一个文件）</p><p><img src="https://s2.loli.net/2023/10/07/abUJqxHiIh2u1Tf.png" alt="图 2">  </p><h2 id="四、安装-Java"><a href="#四、安装-Java" class="headerlink" title="四、安装 Java"></a>四、安装 Java</h2><p>1.先升级yum库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum update<br></code></pre></td></tr></table></figure><p>中间提示[y&#x2F;d&#x2F;n]请输入y并按下回车</p><p>2.列出yum库中的Java</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y list java*<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/10/07/vD8O4HaMQucxTp3.png" alt="图 3">  </p><p>3.安装Java</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install java-latest-openjdk*<br></code></pre></td></tr></table></figure><p>中间提示[y&#x2F;d&#x2F;n]请输入y并按下回车</p><h2 id="五、安装-Screen"><a href="#五、安装-Screen" class="headerlink" title="五、安装 Screen"></a>五、安装 Screen</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install screen<br></code></pre></td></tr></table></figure><p>中间提示[y&#x2F;d&#x2F;n]请输入y并按下回车</p><h2 id="六、创建-Shell-脚本"><a href="#六、创建-Shell-脚本" class="headerlink" title="六、创建 Shell 脚本"></a>六、创建 Shell 脚本</h2><p>在桌面上新建一个文本文档，输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -Xmx1024M -jar server.jar <br></code></pre></td></tr></table></figure><p>注释：其中1024M为程序运行时最大内存，可酌情调整</p><p>点击左上角的“文件（F）”，选择另存为，现将下方的保存类型选为所有文件，再将文件名设置为start.sh，最后点击右下角的保存。</p><p>将start.sh按照第三步的方法上传到和server.jar相同的目录中</p><h2 id="七、启动服务器"><a href="#七、启动服务器" class="headerlink" title="七、启动服务器"></a>七、启动服务器</h2><p>在PuTTY中连接主机后输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -S mc<br></code></pre></td></tr></table></figure><p>即可创建一个名为mc的作业</p><p>继续输入一下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /tmp/minecraft<br>sh start.sh<br></code></pre></td></tr></table></figure><p>经过一段时间等待，显示一下界面时就代表开服完毕了</p><p><img src="https://s2.loli.net/2023/10/07/JF8enHv6qi1rW7B.png" alt="图 4">  </p><p>在PuTTY中按下Ctrl+A+D即可退出该screen作业，此时即可关闭PuTTY</p><p>那么下次如何进入该screen呢？在PuTTY连接后，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -ls<br></code></pre></td></tr></table></figure><p>即可显示出当前的screen作业</p><p><img src="https://s2.loli.net/2023/10/07/aI9GhMrnOfRQm7Z.png" alt="图 5">  </p><p>根据之前创建的screen名称，我们可以通过前面的数字进入该screen</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -r 27529<br></code></pre></td></tr></table></figure><h2 id="八、补充说明"><a href="#八、补充说明" class="headerlink" title="八、补充说明"></a>八、补充说明</h2><p>通过上述方法只是建立了一个简单的服务器，你还需要进行许多设置</p><p>当你搭建好后，你会在&#x2F;tmp&#x2F;minecraft中看到server.properties文件</p><blockquote><p><a href="https://minecraft.fandom.com/zh/wiki/Server.properties">https://minecraft.fandom.com/zh/wiki/Server.properties</a></p></blockquote><p>请参考以上链接进行对server.properties文件的设置</p>]]></content>
    
    
    <categories>
      
      <category>Technology</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>XCOM2传奇铁人心得</title>
    <link href="/2023/10/02/XCOM2Guide/"/>
    <url>/2023/10/02/XCOM2Guide/</url>
    
    <content type="html"><![CDATA[<h1 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h1><p>传铁一周目<br><img src="https://s2.loli.net/2023/10/17/vawqKrPL5ZHlVFI.webp" alt="图 1"><br><img src="https://s2.loli.net/2023/10/17/OERl9xszQBm5uWI.webp" alt="图 2"><br><img src="https://s2.loli.net/2023/10/17/XshWy8uaqVv4H17.webp" alt="图 3"></p><h1 id="MOD"><a href="#MOD" class="headerlink" title="MOD"></a>MOD</h1><p>Blackmartet Usage<br>Evac all Wotc<br>Show me the Xp<br>Smart overwatch all wotc<br>Stop wasting my time wotc<br>Wotc robojumper’s squad select<br>Wotc cost-based ability colors<br>Wotc Detailed soldier lists<br>Wotc Fair Lost Targeting<br>Show Health Values Wotc</p><h1 id="基建"><a href="#基建" class="headerlink" title="基建"></a>基建</h1><p>开局优先建反抗军议事厅，隐秘行动越早越好，之后再补游击战术学校<br>游击战术学校主要是开小队规模，但是5人队和6人队需要军衔等级才能解锁，所以先不急</p><blockquote><p>Squad Size I<br>花费：§50 (§100)<br>等级要求：中士（指挥官难度），中尉（传说难度）。<br>描述：小队的规模会增加1。</p></blockquote><blockquote><p>Squad Size II<br>花费：§75 (§150)<br>等级要求：上尉。<br>描述：小队的规模+1。</p></blockquote><p><img src="https://s2.loli.net/2023/10/19/Gan2PNbF4e8vDEQ.jpg" alt="图 0"></p><h1 id="命中率"><a href="#命中率" class="headerlink" title="命中率"></a>命中率</h1><p>射手瞄准 - 目标防御 + 武器射程调整<br>Shooter’s Aim - Target’s Defense + Weapon Range Modifier<br><img src="https://s2.loli.net/2023/10/17/PtkJ3TfZzKUW1oq.webp" alt="图 6"></p><h1 id="任务思路"><a href="#任务思路" class="headerlink" title="任务思路"></a>任务思路</h1><h2 id="主线"><a href="#主线" class="headerlink" title="主线"></a>主线</h2><table><thead><tr><th>任务</th><th>类型</th><th>任务时限</th><th>可派遣士兵数</th><th>潜入类型</th><th>撤离类型</th><th>能否获得尸体</th></tr></thead><tbody><tr><td>变种人设施：黑地</td><td>主线任务</td><td>NA</td><td>8</td><td>至少100%</td><td>固定撤离点</td><td>否</td></tr><tr><td>变种人设施：锻炉</td><td>主线任务</td><td>NA</td><td>10</td><td>至少100%</td><td>预约撤退</td><td>是</td></tr><tr><td>变种人设施：灵能门</td><td>主线任务</td><td>NA</td><td>10</td><td>至少100%</td><td>预约撤退</td><td>是</td></tr><tr><td>中央广播塔</td><td>主线任务</td><td>NA</td><td>8</td><td>至少100%</td><td>预约撤退</td><td>是</td></tr><tr><td>外星要塞</td><td>主线任务</td><td>NA</td><td>12</td><td>无需潜入</td><td>不可撤退</td><td>否</td></tr></tbody></table><h2 id="游击行动"><a href="#游击行动" class="headerlink" title="游击行动"></a>游击行动</h2><table><thead><tr><th>任务</th><th>类型</th><th>任务时限</th><th>可派遣士兵数</th><th>潜入类型</th><th>撤离类型</th><th>能否获得尸体</th></tr></thead><tbody><tr><td>入侵工作站</td><td>游击行动</td><td>8</td><td>10</td><td>是</td><td>预约撤退</td><td>否</td></tr><tr><td>获取物品</td><td>游击行动</td><td>8</td><td>10</td><td>是</td><td>预约撤退</td><td>否</td></tr><tr><td>保护装置</td><td>游击行动</td><td>NA</td><td>8</td><td>无隐蔽</td><td>预约撤退</td><td>否</td></tr><tr><td>摧毁中继站</td><td>游击行动</td><td>12</td><td>10</td><td>是</td><td>预约撤退</td><td>否</td></tr><tr><td>歼灭&#x2F;生擒目标</td><td>游击行动</td><td>12</td><td>10</td><td>是</td><td>固定撤离点</td><td>否</td></tr></tbody></table><h2 id="报复行动"><a href="#报复行动" class="headerlink" title="报复行动"></a>报复行动</h2><table><thead><tr><th>任务</th><th>类型</th><th>任务时限</th><th>可派遣士兵数</th><th>潜入类型</th><th>撤离类型</th><th>能否获得尸体</th></tr></thead><tbody><tr><td>恐惧</td><td>报复任务</td><td>NA</td><td>8</td><td>无隐蔽</td><td>固定撤离点</td><td>否</td></tr></tbody></table><h2 id="解放任务"><a href="#解放任务" class="headerlink" title="解放任务"></a>解放任务</h2><table><thead><tr><th>任务</th><th>类型</th><th>任务时限</th><th>可派遣士兵数</th><th>潜入类型</th><th>撤离类型</th><th>能否获得尸体</th></tr></thead><tbody><tr><td>伏击敌军</td><td>解放任务</td><td>NA</td><td>8</td><td>是</td><td>预约撤退</td><td>是</td></tr><tr><td>越狱</td><td>解放任务</td><td>12</td><td>8</td><td>是</td><td>固定撤离点</td><td>否</td></tr><tr><td>汇合点（锄奸）</td><td>解放任务</td><td>NA</td><td>6</td><td>无需潜入</td><td>预约撤退</td><td>是</td></tr><tr><td>变种人突袭：情报</td><td>解放任务</td><td>NA</td><td>8</td><td>无隐蔽</td><td>预约撤退</td><td>否</td></tr><tr><td>变种人突袭：补给车队</td><td>解放任务</td><td>NA</td><td>8</td><td>无隐蔽</td><td>预约撤退</td><td>否</td></tr><tr><td>变种人突袭：招募</td><td>解放任务</td><td>NA</td><td>8</td><td>无隐蔽</td><td>倒计时撤退</td><td>否</td></tr><tr><td>突击雷达站</td><td>解放任务</td><td>NA</td><td>5</td><td>至少100%</td><td>预约撤退</td><td>否</td></tr><tr><td>突击外星人基地</td><td>解放任务</td><td>NA</td><td>10</td><td>至少100%</td><td>预约撤退</td><td>是</td></tr></tbody></table><h2 id="掠夺任务"><a href="#掠夺任务" class="headerlink" title="掠夺任务"></a>掠夺任务</h2><table><thead><tr><th>任务</th><th>类型</th><th>任务时限</th><th>可派遣士兵数</th><th>潜入类型</th><th>撤离类型</th><th>能否获得尸体</th></tr></thead><tbody><tr><td>掠夺补给</td><td>掠夺任务</td><td>NA</td><td>10</td><td>是</td><td>预约撤退</td><td>是</td></tr><tr><td>夺取UFO</td><td>掠夺任务</td><td>16</td><td>10</td><td>是</td><td>预约撤退</td><td>是</td></tr></tbody></table><h2 id="防卫任务"><a href="#防卫任务" class="headerlink" title="防卫任务"></a>防卫任务</h2><table><thead><tr><th>任务</th><th>类型</th><th>任务时限</th><th>可派遣士兵数</th><th>潜入类型</th><th>撤离类型</th><th>能否获得尸体</th></tr></thead><tbody><tr><td>破坏变种人纪念碑</td><td>防卫任务</td><td>NA</td><td>10</td><td>是</td><td>预约撤退</td><td>否</td></tr><tr><td>城市入侵</td><td>防卫任务</td><td>NA</td><td>10</td><td>无隐蔽</td><td>固定撤离点</td><td>否</td></tr><tr><td>防御</td><td>防卫任务</td><td>NA</td><td>8</td><td>无隐蔽</td><td>倒计时撤退</td><td>否</td></tr><tr><td>保卫复仇者号</td><td>防卫任务</td><td>NA</td><td>12</td><td>无隐蔽</td><td>不可撤退</td><td>否</td></tr></tbody></table><h1 id="兵种"><a href="#兵种" class="headerlink" title="兵种"></a>兵种</h1><h2 id="专家-Specialist"><a href="#专家-Specialist" class="headerlink" title="专家(Specialist)"></a>专家(Specialist)</h2><img src="https://s2.loli.net/2023/10/19/CyMfYijzudRwIna.png" width = "50" height = "50"><h2 id="榴弹兵-Grenadier"><a href="#榴弹兵-Grenadier" class="headerlink" title="榴弹兵(Grenadier)"></a>榴弹兵(Grenadier)</h2><img src="https://s2.loli.net/2023/10/19/x5cWDvBAoLYsb7F.png" width = "50" height = "50"><h2 id="游侠-Ranger"><a href="#游侠-Ranger" class="headerlink" title="游侠(Ranger)"></a>游侠(Ranger)</h2><img src="https://s2.loli.net/2023/10/19/QIwYgVSeAuz8RLW.png" width = "50" height = "50"><h2 id="神枪手-Sharpshooter"><a href="#神枪手-Sharpshooter" class="headerlink" title="神枪手(Sharpshooter)"></a>神枪手(Sharpshooter)</h2><img src="https://s2.loli.net/2023/10/19/js6KxzW2w3bU9XS.png" width = "50" height = "50"><h2 id="灵能士兵-Psi-Operative"><a href="#灵能士兵-Psi-Operative" class="headerlink" title="灵能士兵(Psi Operative)"></a>灵能士兵(Psi Operative)</h2><img src="https://s2.loli.net/2023/10/19/rg8YexbjImBvnL7.png" width = "50" height = "50"><h2 id="死神-Reapers"><a href="#死神-Reapers" class="headerlink" title="死神(Reapers)"></a>死神(Reapers)</h2><img src="https://s2.loli.net/2023/10/19/3dhoEYNCbpfKrXW.webp" width = "50" height = "50"><p><img src="https://s2.loli.net/2023/10/19/CeynS3cd7F4ozLk.jpg" alt="图 7"><br><img src="https://s2.loli.net/2023/10/19/ViHQKU8MpqXOSzf.jpg" alt="图 9"></p><h2 id="散兵-Skirmishers"><a href="#散兵-Skirmishers" class="headerlink" title="散兵(Skirmishers)"></a>散兵(Skirmishers)</h2><img src="https://s2.loli.net/2023/10/19/zoe9XryV5PqSYZv.webp" width = "50" height = "50"><h2 id="圣殿骑士-Templars"><a href="#圣殿骑士-Templars" class="headerlink" title="圣殿骑士(Templars)"></a>圣殿骑士(Templars)</h2><img src="https://s2.loli.net/2023/10/19/PgU4WiLa7IvToBr.webp" width = "50" height = "50"><p><img src="https://s2.loli.net/2023/10/19/vP3yBraGqgD1Hx7.jpg" alt="图 8"></p><h2 id="SPARK"><a href="#SPARK" class="headerlink" title="SPARK"></a>SPARK</h2>]]></content>
    
    
    <categories>
      
      <category>Game</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Game</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
